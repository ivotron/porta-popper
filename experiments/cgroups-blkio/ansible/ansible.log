2016-11-24 00:31:38,325 p=23094 u=ivo |  192.168.140.81 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh.", 
    "unreachable": true
}
2016-11-24 00:32:13,336 p=23141 u=ivo |  192.168.140.81 | SUCCESS => {
    "changed": false, 
    "ping": "pong"
}
2016-11-24 08:52:25,250 p=7 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/etc/ansible/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 08:53:35,159 p=8 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/etc/ansible/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 08:54:50,619 p=8 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/etc/ansible/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 08:55:56,347 p=8 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/etc/ansible/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 08:57:17,317 p=7 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/etc/ansible/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 09:00:02,125 p=7 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/experiment/vendor/*/roles:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 09:01:09,563 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:01:09,644 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:01:12,871 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:01:12,878 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:01:12,937 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:01:12,940 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:01:12,940 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:02:16,007 p=8 u=root |  ERROR! the role 'run-bench' was not found in /experiment/roles:/vendor/baseliner/roles/:/experiment

The error appears to have been in '/experiment/playbook.yml': line 4, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - run-bench
    ^ here

2016-11-24 09:02:51,623 p=11 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:02:51,693 p=11 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:02:54,172 p=11 u=root |  ok: [192.168.140.81]
2016-11-24 09:02:54,179 p=11 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:02:54,233 p=11 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:02:54,236 p=11 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:02:54,236 p=11 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:07:35,365 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:07:35,421 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:07:37,737 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:07:37,744 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:07:37,798 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:07:37,801 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:07:37,801 p=7 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:08:50,427 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:08:50,485 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:08:52,755 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:08:52,763 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:08:52,822 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:08:52,824 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:08:52,824 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:11:24,077 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:11:24,135 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:11:26,405 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 09:11:26,412 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:11:26,467 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:11:26,469 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:11:26,470 p=9 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:12:22,408 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:12:22,465 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:12:24,969 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:12:24,976 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:12:25,031 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:12:25,033 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:12:25,033 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:13:01,473 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:13:01,530 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:13:03,997 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:13:04,004 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:13:04,059 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-24 09:13:04,061 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:13:04,061 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:15:04,743 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:15:04,800 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:15:19,111 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:15:19,118 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:15:19,160 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: [{u'name': u'fio', u'get': [u'/tmp/results'], u'image': u'ivotron/fio', u'args': u'-s -b 4k -d /dev/sdb -r 60 -m {{ params.mode }}', u'devices': [u'/dev/sdb:/dev/sdb'], u'entrypoint': u'genfio-test', u'volumes': [u'/tmp/results:/results']}]: 'params' is undefined\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- debug: msg='{{benchmarks}}'\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2016-11-24 09:15:19,162 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:15:19,162 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:16:27,440 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:16:27,496 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:16:29,847 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:16:29,854 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:16:29,896 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: [{u'name': u'fio', u'get': [u'/tmp/results'], u'image': u'ivotron/fio', u'args': u'-s -b 4k -d /dev/sdb -r 60 -m {{ params[\"mode\"] }}', u'devices': [u'/dev/sdb:/dev/sdb'], u'entrypoint': u'genfio-test', u'volumes': [u'/tmp/results:/results']}]: 'params' is undefined\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- debug: msg='{{benchmarks}}'\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2016-11-24 09:16:29,899 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:16:29,899 p=7 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-24 09:19:55,771 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:19:55,829 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:19:58,089 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:19:58,096 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:19:58,149 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:19:58,154 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:19:58,205 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:19:58,210 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:19:58,273 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:19:58,277 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:19:58,371 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:19:58,386 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:19:58,400 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:19:58,414 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:19:58,427 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:19:58,491 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:19:58,496 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:19:58,549 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/run-bench.yml': line 19, column 32, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- name: run script benchmark\n  script: '{{ bench.script }}' '{{ bench.args}}'\n                               ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2016-11-24 09:19:58,551 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:19:58,552 p=7 u=root |  192.168.140.81             : ok=9    changed=0    unreachable=0    failed=1   
2016-11-24 09:21:07,406 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:21:07,462 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:21:09,722 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:21:09,729 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:21:09,783 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:21:09,788 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:21:09,840 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:21:09,845 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:21:09,908 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:21:09,912 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:21:10,013 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:21:10,028 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:21:10,042 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:21:10,056 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:21:10,069 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:21:10,133 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:21:10,138 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:21:10,237 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:21:10,245 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:21:10,300 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:21:10,306 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:21:10,348 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:21:10,445 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:21:10,462 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:21:10,520 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:21:10,526 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:21:13,050 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:21:13,055 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:21:13,111 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:21:13,116 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:21:13,458 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:21:13,463 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:21:13,903 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:21:13,909 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:21:13,955 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:21:14,019 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:21:14,024 p=7 u=root |  TASK [run-bench : check if there is a host-specific environment] ***************
2016-11-24 09:21:14,062 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:21:14,064 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:21:14,064 p=7 u=root |  192.168.140.81             : ok=18   changed=3    unreachable=0    failed=1   
2016-11-24 09:22:45,541 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:22:45,598 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:22:47,955 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:22:47,962 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:22:48,016 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:22:48,021 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:22:48,074 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:22:48,079 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:22:48,142 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:22:48,146 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:22:48,242 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:22:48,256 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:22:48,270 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:22:48,286 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:22:48,297 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:22:48,362 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:22:48,367 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:22:48,449 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:22:48,457 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:22:48,512 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:22:48,518 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:22:48,562 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:22:48,659 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:22:48,676 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:22:48,734 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:22:48,739 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:22:50,408 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:22:50,413 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:22:50,485 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:22:50,490 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:22:50,824 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039805", "end": "2016-11-24 01:22:50.804092", "failed": true, "rc": 1, "start": "2016-11-24 01:22:50.764287", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:22:50,824 p=8 u=root |  ...ignoring
2016-11-24 09:22:50,829 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:22:51,148 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030516", "end": "2016-11-24 01:22:51.125858", "failed": true, "rc": 1, "start": "2016-11-24 01:22:51.095342", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:22:51,148 p=8 u=root |  ...ignoring
2016-11-24 09:22:51,153 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:22:51,196 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:22:51,262 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:22:51,266 p=8 u=root |  TASK [run-bench : check if there is a host-specific environment] ***************
2016-11-24 09:22:51,305 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:22:51,308 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:22:51,309 p=8 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:24:09,270 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:24:09,326 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:24:11,825 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:24:11,832 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:24:11,884 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:24:11,889 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:24:11,942 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:24:11,946 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:24:12,008 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:24:12,014 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:24:12,109 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:24:12,123 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:24:12,137 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:24:12,153 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:24:12,164 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:24:12,228 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:24:12,233 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:24:12,314 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:24:12,323 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:24:12,381 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:24:12,387 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:24:12,430 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:24:12,528 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:24:12,545 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:24:12,603 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:24:12,608 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:24:14,355 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:24:14,362 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:24:14,418 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:24:14,423 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:24:14,731 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.032276", "end": "2016-11-24 01:24:14.715702", "failed": true, "rc": 1, "start": "2016-11-24 01:24:14.683426", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:24:14,732 p=7 u=root |  ...ignoring
2016-11-24 09:24:14,737 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:24:15,073 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.048442", "end": "2016-11-24 01:24:15.047991", "failed": true, "rc": 1, "start": "2016-11-24 01:24:14.999549", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:24:15,073 p=7 u=root |  ...ignoring
2016-11-24 09:24:15,078 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:24:15,123 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:24:15,189 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:24:15,195 p=7 u=root |  TASK [run-bench : check if there is a host-specific environment] ***************
2016-11-24 09:24:15,234 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:24:15,236 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:24:15,237 p=7 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:25:31,332 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:25:31,390 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:25:33,842 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:25:33,848 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:25:33,902 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:25:33,907 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:25:33,959 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:25:33,964 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:25:34,027 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:25:34,031 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:25:34,128 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:25:34,142 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:25:34,156 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:25:34,171 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:25:34,183 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:25:34,248 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:25:34,252 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:25:34,335 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:25:34,343 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:25:34,399 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:25:34,405 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:25:34,448 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:25:34,548 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:25:34,565 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:25:34,626 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:25:34,631 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:25:36,242 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:25:36,247 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:25:36,303 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:25:36,308 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:25:36,634 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037395", "end": "2016-11-24 01:25:36.610600", "failed": true, "rc": 1, "start": "2016-11-24 01:25:36.573205", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:25:36,634 p=8 u=root |  ...ignoring
2016-11-24 09:25:36,639 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:25:36,967 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035081", "end": "2016-11-24 01:25:36.941672", "failed": true, "rc": 1, "start": "2016-11-24 01:25:36.906591", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:25:36,968 p=8 u=root |  ...ignoring
2016-11-24 09:25:36,973 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:25:37,017 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:25:37,083 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:25:37,088 p=8 u=root |  TASK [run-bench : check if there is a host-specific environment] ***************
2016-11-24 09:25:37,133 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:25:37,138 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:25:37,177 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:25:37,179 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:25:37,180 p=8 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:26:21,162 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:26:21,219 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:26:23,629 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 09:26:23,636 p=9 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:26:23,689 p=9 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:26:23,694 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:26:23,745 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:23,750 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:26:23,811 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:26:23,816 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:26:23,915 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:23,929 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:23,943 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:23,959 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:23,970 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:26:24,034 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:26:24,039 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:26:24,119 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:26:24,128 p=9 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:26:24,184 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:24,190 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:26:24,232 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:26:24,338 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:26:24,355 p=9 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:26:24,414 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:24,419 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:26:26,023 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 09:26:26,029 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:26:26,085 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 09:26:26,090 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:26:26,410 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034436", "end": "2016-11-24 01:26:26.386896", "failed": true, "rc": 1, "start": "2016-11-24 01:26:26.352460", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:26:26,411 p=9 u=root |  ...ignoring
2016-11-24 09:26:26,416 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:26:26,734 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037613", "end": "2016-11-24 01:26:26.713940", "failed": true, "rc": 1, "start": "2016-11-24 01:26:26.676327", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:26:26,735 p=9 u=root |  ...ignoring
2016-11-24 09:26:26,740 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:26:26,784 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:26:26,849 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:26:26,854 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:26:26,892 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:26:26,895 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:26:26,895 p=9 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:26:38,571 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:26:38,628 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:26:41,176 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:26:41,183 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:26:41,235 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:26:41,240 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:26:41,292 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:41,297 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:26:41,359 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:26:41,363 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:26:41,461 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:41,475 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:41,490 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:41,504 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:26:41,515 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:26:41,579 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:26:41,584 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:26:41,665 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:26:41,673 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:26:41,729 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:41,734 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:26:41,777 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:26:41,876 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:26:41,894 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:26:41,954 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:26:41,959 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:26:43,759 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:26:43,764 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:26:43,819 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:26:43,824 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:26:44,150 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036416", "end": "2016-11-24 01:26:44.126368", "failed": true, "rc": 1, "start": "2016-11-24 01:26:44.089952", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:26:44,151 p=8 u=root |  ...ignoring
2016-11-24 09:26:44,156 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:26:44,472 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034175", "end": "2016-11-24 01:26:44.447171", "failed": true, "rc": 1, "start": "2016-11-24 01:26:44.412996", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:26:44,472 p=8 u=root |  ...ignoring
2016-11-24 09:26:44,477 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:26:44,521 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:26:44,585 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:26:44,591 p=8 u=root |  TASK [run-bench : check if there is a host-specific environment] ***************
2016-11-24 09:26:44,640 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:26:44,645 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:26:44,684 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:26:44,686 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:26:44,686 p=8 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:32:25,043 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:32:25,098 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:32:27,368 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:32:27,375 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:32:27,433 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:32:27,438 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:32:27,490 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:32:27,494 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:32:27,557 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:32:27,561 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:32:27,660 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:32:27,674 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:32:27,688 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:32:27,702 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:32:27,715 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:32:27,779 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:32:27,784 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:32:27,865 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:32:27,874 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:32:27,928 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:32:27,934 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:32:27,977 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:32:28,078 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:32:28,096 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:32:28,157 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:32:28,163 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:32:29,973 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:32:29,979 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:32:30,034 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:32:30,039 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:32:30,359 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037387", "end": "2016-11-24 01:32:30.336707", "failed": true, "rc": 1, "start": "2016-11-24 01:32:30.299320", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:32:30,359 p=7 u=root |  ...ignoring
2016-11-24 09:32:30,364 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:32:30,694 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039487", "end": "2016-11-24 01:32:30.671344", "failed": true, "rc": 1, "start": "2016-11-24 01:32:30.631857", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:32:30,695 p=7 u=root |  ...ignoring
2016-11-24 09:32:30,700 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:32:30,748 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:32:30,817 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:32:30,822 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:32:30,861 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:32:30,864 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:32:30,865 p=7 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:33:16,692 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:33:16,750 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:33:19,273 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:33:19,280 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:33:19,333 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:33:19,338 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:33:19,406 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:19,411 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:33:19,473 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:33:19,478 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:33:19,575 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:19,590 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:19,605 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:19,619 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:19,630 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:33:19,697 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:33:19,702 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:33:19,787 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:33:19,795 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:33:19,851 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:19,857 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:33:19,899 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:33:19,951 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "here"
}
2016-11-24 09:33:19,955 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:33:20,053 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:33:20,073 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:33:20,137 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:20,142 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:33:21,749 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:33:21,754 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:33:21,810 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:33:21,815 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:33:22,150 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039030", "end": "2016-11-24 01:33:22.124551", "failed": true, "rc": 1, "start": "2016-11-24 01:33:22.085521", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:33:22,151 p=7 u=root |  ...ignoring
2016-11-24 09:33:22,155 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:33:22,470 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036091", "end": "2016-11-24 01:33:22.450571", "failed": true, "rc": 1, "start": "2016-11-24 01:33:22.414480", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:33:22,471 p=7 u=root |  ...ignoring
2016-11-24 09:33:22,476 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:33:22,520 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:33:22,586 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:33:22,591 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:33:22,629 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:33:22,632 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:33:22,632 p=7 u=root |  192.168.140.81             : ok=19   changed=1    unreachable=0    failed=1   
2016-11-24 09:33:52,018 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:33:52,075 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:33:54,477 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:33:54,484 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:33:54,537 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:33:54,542 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:33:54,596 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:54,601 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:33:54,663 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:33:54,667 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:33:54,761 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:54,776 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:54,790 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:54,806 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:33:54,817 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:33:54,880 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:33:54,885 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:33:54,968 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:33:54,977 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:33:55,032 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:55,038 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:33:55,080 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:33:55,131 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "here"
}
2016-11-24 09:33:55,136 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:33:55,232 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:33:55,252 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:33:55,310 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:33:55,315 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:33:56,961 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:33:56,966 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:33:57,021 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:33:57,026 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:33:57,347 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035176", "end": "2016-11-24 01:33:57.322152", "failed": true, "rc": 1, "start": "2016-11-24 01:33:57.286976", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:33:57,347 p=8 u=root |  ...ignoring
2016-11-24 09:33:57,352 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:33:57,681 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034251", "end": "2016-11-24 01:33:57.657696", "failed": true, "rc": 1, "start": "2016-11-24 01:33:57.623445", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:33:57,682 p=8 u=root |  ...ignoring
2016-11-24 09:33:57,687 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:33:57,730 p=8 u=root |  TASK [run-bench : add implooocit environment from params variable] *************
2016-11-24 09:33:57,795 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:33:57,800 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:33:57,839 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:33:57,841 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:33:57,841 p=8 u=root |  192.168.140.81             : ok=19   changed=1    unreachable=0    failed=1   
2016-11-24 09:38:21,746 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:38:21,804 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:38:24,310 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:38:24,317 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:38:24,369 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:38:24,374 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:38:24,427 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:38:24,432 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:38:24,494 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:38:24,498 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:38:24,594 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:38:24,608 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:38:24,622 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:38:24,637 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:38:24,649 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:38:24,713 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:38:24,717 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:38:24,799 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:38:24,807 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:38:24,862 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:38:24,868 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:38:24,911 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:38:25,008 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:38:25,025 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:38:25,083 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:38:25,088 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:38:26,755 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:38:26,760 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:38:26,814 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:38:26,819 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:38:27,152 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038950", "end": "2016-11-24 01:38:27.129636", "failed": true, "rc": 1, "start": "2016-11-24 01:38:27.090686", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:38:27,152 p=8 u=root |  ...ignoring
2016-11-24 09:38:27,157 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:38:27,480 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028734", "end": "2016-11-24 01:38:27.456654", "failed": true, "rc": 1, "start": "2016-11-24 01:38:27.427920", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:38:27,480 p=8 u=root |  ...ignoring
2016-11-24 09:38:27,485 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:38:27,533 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:38:27,598 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:38:27,603 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:38:27,643 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:38:27,645 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:38:27,646 p=8 u=root |  192.168.140.81             : ok=18   changed=1    unreachable=0    failed=1   
2016-11-24 09:39:46,637 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:39:46,695 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:39:49,101 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:39:49,108 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:39:49,161 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:39:49,167 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:39:49,219 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:39:49,224 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:39:49,287 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:39:49,291 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:39:49,387 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:39:49,401 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:39:49,415 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:39:49,431 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:39:49,442 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:39:49,507 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:39:49,511 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:39:49,592 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:39:49,601 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:39:49,657 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:39:49,663 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:39:49,706 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:39:49,806 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:39:49,824 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:39:49,883 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:39:49,888 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:39:51,555 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:39:51,560 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:39:51,619 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:39:51,624 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:39:51,947 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037865", "end": "2016-11-24 01:39:51.922517", "failed": true, "rc": 1, "start": "2016-11-24 01:39:51.884652", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:39:51,947 p=8 u=root |  ...ignoring
2016-11-24 09:39:51,952 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:39:52,270 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035489", "end": "2016-11-24 01:39:52.246960", "failed": true, "rc": 1, "start": "2016-11-24 01:39:52.211471", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:39:52,271 p=8 u=root |  ...ignoring
2016-11-24 09:39:52,275 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:39:52,319 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:39:52,385 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:39:52,390 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:39:52,450 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:39:52,455 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:39:52,496 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:39:52,498 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:39:52,499 p=8 u=root |  192.168.140.81             : ok=19   changed=1    unreachable=0    failed=1   
2016-11-24 09:40:41,856 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:40:41,913 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:40:44,390 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:40:44,397 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:40:44,450 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:40:44,455 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:40:44,506 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:40:44,511 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:40:44,573 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:40:44,578 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:40:44,675 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:40:44,689 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:40:44,703 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:40:44,718 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:40:44,730 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:40:44,794 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:40:44,798 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:40:44,882 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:40:44,891 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:40:44,945 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:40:44,950 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:40:44,993 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:40:45,093 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:40:45,111 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:40:45,169 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:40:45,174 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:40:46,763 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:40:46,768 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:40:46,824 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:40:46,828 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:40:47,156 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039224", "end": "2016-11-24 01:40:47.133284", "failed": true, "rc": 1, "start": "2016-11-24 01:40:47.094060", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:40:47,157 p=8 u=root |  ...ignoring
2016-11-24 09:40:47,161 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:40:47,494 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035143", "end": "2016-11-24 01:40:47.470661", "failed": true, "rc": 1, "start": "2016-11-24 01:40:47.435518", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:40:47,494 p=8 u=root |  ...ignoring
2016-11-24 09:40:47,499 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:40:47,542 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:40:47,607 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:40:47,612 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:40:47,670 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:40:47,675 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:40:47,731 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "hass False"
}
2016-11-24 09:40:47,736 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:40:47,776 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "'dict object' has no attribute 'env_host'"}
2016-11-24 09:40:47,778 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:40:47,778 p=8 u=root |  192.168.140.81             : ok=20   changed=1    unreachable=0    failed=1   
2016-11-24 09:42:48,826 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:42:48,884 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:42:51,273 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:42:51,281 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:42:51,336 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:42:51,342 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:42:51,394 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:42:51,399 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:42:51,462 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:42:51,466 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:42:51,564 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:42:51,578 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:42:51,592 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:42:51,607 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:42:51,619 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:42:51,683 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:42:51,687 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:42:51,768 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:42:51,777 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:42:51,833 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:42:51,839 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:42:51,882 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:42:51,982 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:42:52,000 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:42:52,059 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:42:52,064 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:42:53,760 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:42:53,765 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:42:53,820 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:42:53,825 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:42:54,153 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038383", "end": "2016-11-24 01:42:54.128454", "failed": true, "rc": 1, "start": "2016-11-24 01:42:54.090071", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:42:54,153 p=8 u=root |  ...ignoring
2016-11-24 09:42:54,158 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:42:54,484 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037933", "end": "2016-11-24 01:42:54.465489", "failed": true, "rc": 1, "start": "2016-11-24 01:42:54.427556", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:42:54,484 p=8 u=root |  ...ignoring
2016-11-24 09:42:54,489 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:42:54,533 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:42:54,598 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:42:54,603 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:42:54,662 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:42:54,667 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:42:54,711 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:42:54,777 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:42:54,781 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:42:54,827 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:42:54,832 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:42:54,877 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:42:54,949 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:42:54,954 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:42:55,011 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:42:55,016 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:42:55,065 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/run-container.yml': line 70, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n# run\n- name: run container\n  ^ here\n"}
2016-11-24 09:42:55,067 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:42:55,067 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:43:26,790 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:43:26,848 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:43:29,341 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:43:29,348 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:43:29,400 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:43:29,405 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:43:29,458 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:43:29,463 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:43:29,525 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:43:29,529 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:43:29,627 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:43:29,641 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:43:29,655 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:43:29,671 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:43:29,682 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:43:29,747 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:43:29,751 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:43:29,831 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:43:29,841 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:43:29,895 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:43:29,901 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:43:29,944 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:43:30,043 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:43:30,061 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:43:30,120 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:43:30,125 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:43:32,143 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:43:32,148 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:43:32,203 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:43:32,208 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:43:32,530 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030835", "end": "2016-11-24 01:43:32.510893", "failed": true, "rc": 1, "start": "2016-11-24 01:43:32.480058", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:43:32,531 p=8 u=root |  ...ignoring
2016-11-24 09:43:32,535 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:43:32,877 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.043179", "end": "2016-11-24 01:43:32.851948", "failed": true, "rc": 1, "start": "2016-11-24 01:43:32.808769", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:43:32,877 p=8 u=root |  ...ignoring
2016-11-24 09:43:32,883 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:43:32,930 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:43:32,995 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:43:33,000 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:43:33,061 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:43:33,066 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:43:33,110 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:43:33,178 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:43:33,183 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:43:33,227 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:43:33,232 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:43:33,276 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:43:33,340 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:43:33,345 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:43:33,404 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:43:33,408 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:43:35,762 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=\"read\" --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -s -b 4k -d /dev/sdb -r 60 -m $mode", "delta": "0:00:02.057517", "end": "2016-11-24 01:43:35.735839", "failed": true, "rc": 1, "start": "2016-11-24 01:43:33.678322", "stderr": "", "stdout": "fio: debug mask /dev/sdb not found\nfio: unable to open '60' job file", "stdout_lines": ["fio: debug mask /dev/sdb not found", "fio: unable to open '60' job file"], "warnings": []}
2016-11-24 09:43:35,764 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:43:35,765 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:45:08,795 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:45:08,851 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:45:11,242 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:45:11,249 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:45:11,305 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:45:11,310 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:45:11,362 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:45:11,367 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:45:11,432 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:45:11,436 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:45:11,531 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:45:11,545 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:45:11,559 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:45:11,575 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:45:11,586 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:45:11,649 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:45:11,654 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:45:11,734 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:45:11,742 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:45:11,797 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:45:11,802 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:45:11,845 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:45:11,944 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:45:11,962 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:45:12,021 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:45:12,027 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:45:13,678 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:45:13,686 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:45:13,741 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:45:13,746 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:45:14,077 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038155", "end": "2016-11-24 01:45:14.053752", "failed": true, "rc": 1, "start": "2016-11-24 01:45:14.015597", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:45:14,078 p=8 u=root |  ...ignoring
2016-11-24 09:45:14,083 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:45:14,399 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.027494", "end": "2016-11-24 01:45:14.374732", "failed": true, "rc": 1, "start": "2016-11-24 01:45:14.347238", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:45:14,399 p=8 u=root |  ...ignoring
2016-11-24 09:45:14,404 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:45:14,451 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:45:14,516 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:45:14,521 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:45:14,580 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:45:14,585 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:45:14,629 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:45:14,694 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:45:14,699 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:45:14,745 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:45:14,750 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:45:14,794 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:45:14,859 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:45:14,864 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:45:14,923 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:45:14,927 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:45:16,441 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=\"read\" --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio '-s -b 4k -d /dev/sdb -r 60 -m $mode'", "delta": "0:00:01.218960", "end": "2016-11-24 01:45:16.416874", "failed": true, "rc": 1, "start": "2016-11-24 01:45:15.197914", "stderr": "", "stdout": "fio: unrecognized option '- -b 4k -d /dev/sdb -r 60 -m $mode'\nfio: unrecognized option '-s -b 4k -d /dev/sdb -r 60 -m $mode'", "stdout_lines": ["fio: unrecognized option '- -b 4k -d /dev/sdb -r 60 -m $mode'", "fio: unrecognized option '-s -b 4k -d /dev/sdb -r 60 -m $mode'"], "warnings": []}
2016-11-24 09:45:16,444 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:45:16,444 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:46:45,230 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:46:45,286 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:46:47,767 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:46:47,774 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:46:47,827 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:46:47,832 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:46:47,884 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:46:47,889 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:46:47,951 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:46:47,956 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:46:48,052 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:46:48,066 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:46:48,080 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:46:48,095 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:46:48,106 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:46:48,170 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:46:48,175 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:46:48,255 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:46:48,264 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:46:48,321 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:46:48,327 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:46:48,375 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:46:48,476 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:46:48,494 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:46:48,553 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:46:48,558 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:46:50,204 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:46:50,219 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:46:50,273 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:46:50,279 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:46:50,615 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.042393", "end": "2016-11-24 01:46:50.589779", "failed": true, "rc": 1, "start": "2016-11-24 01:46:50.547386", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:46:50,616 p=7 u=root |  ...ignoring
2016-11-24 09:46:50,620 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:46:50,943 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.031940", "end": "2016-11-24 01:46:50.918123", "failed": true, "rc": 1, "start": "2016-11-24 01:46:50.886183", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:46:50,943 p=7 u=root |  ...ignoring
2016-11-24 09:46:50,948 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:46:50,993 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:46:51,058 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:46:51,063 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:46:51,121 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:46:51,126 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:46:51,170 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:46:51,229 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:46:51,234 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:46:51,298 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:46:51,303 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:46:51,348 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 09:46:51,353 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:46:51,396 p=7 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:46:51,460 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:46:51,465 p=7 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:46:51,522 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:46:51,527 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:46:53,164 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=\"read\" --entrypoint genfio-test --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio '-s -b 4k -d /dev/sdb -r 60 -m $mode'", "delta": "0:00:01.350026", "end": "2016-11-24 01:46:53.139549", "failed": true, "rc": 1, "start": "2016-11-24 01:46:51.789523", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:46:53,166 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:46:53,166 p=7 u=root |  192.168.140.81             : ok=23   changed=1    unreachable=0    failed=1   
2016-11-24 09:48:40,996 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:48:41,052 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:48:43,271 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:48:43,278 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:48:43,332 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:48:43,337 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:48:43,389 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:48:43,393 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:48:43,457 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:48:43,462 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:48:43,559 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:48:43,574 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:48:43,588 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:48:43,602 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:48:43,614 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:48:43,681 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:48:43,686 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:48:43,767 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:48:43,775 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:48:43,830 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:48:43,836 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:48:43,878 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:48:43,981 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:48:43,999 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:48:44,057 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:48:44,062 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:48:45,677 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:48:45,682 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:48:45,736 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:48:45,741 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:48:46,078 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.040746", "end": "2016-11-24 01:48:46.053603", "failed": true, "rc": 1, "start": "2016-11-24 01:48:46.012857", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:48:46,078 p=8 u=root |  ...ignoring
2016-11-24 09:48:46,083 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:48:46,395 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028332", "end": "2016-11-24 01:48:46.378106", "failed": true, "rc": 1, "start": "2016-11-24 01:48:46.349774", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:48:46,396 p=8 u=root |  ...ignoring
2016-11-24 09:48:46,401 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:48:46,445 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:48:46,509 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:48:46,514 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:48:46,571 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:48:46,576 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:48:46,620 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:48:46,679 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:48:46,684 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:48:46,747 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:48:46,752 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:48:46,797 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:48:46,802 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:48:46,844 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:48:46,909 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:48:46,914 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:48:46,972 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:48:46,977 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:48:48,664 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=\"read\" --entrypoint=genfio-test --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -s -b 4k -d /dev/sdb -r 60 -m $mode", "delta": "0:00:01.392441", "end": "2016-11-24 01:48:48.637121", "failed": true, "rc": 1, "start": "2016-11-24 01:48:47.244680", "stderr": "", "stdout": "fio: unable to open '/root/fio-file*' job file", "stdout_lines": ["fio: unable to open '/root/fio-file*' job file"], "warnings": []}
2016-11-24 09:48:48,666 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:48:48,667 p=8 u=root |  192.168.140.81             : ok=23   changed=1    unreachable=0    failed=1   
2016-11-24 09:49:39,609 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:49:39,667 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:49:42,037 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:49:42,044 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:49:42,096 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m '$mode'", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:49:42,101 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:49:42,152 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:49:42,157 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:49:42,219 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:49:42,223 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:49:42,318 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:49:42,333 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:49:42,347 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:49:42,362 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:49:42,373 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:49:42,436 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:49:42,442 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:49:42,523 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:49:42,532 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:49:42,589 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:49:42,595 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:49:42,637 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:49:42,738 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:49:42,756 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:49:42,814 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:49:42,819 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:49:44,649 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:49:44,654 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:49:44,709 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:49:44,715 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:49:45,031 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034136", "end": "2016-11-24 01:49:45.011409", "failed": true, "rc": 1, "start": "2016-11-24 01:49:44.977273", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:49:45,032 p=8 u=root |  ...ignoring
2016-11-24 09:49:45,036 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:49:45,357 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036718", "end": "2016-11-24 01:49:45.333543", "failed": true, "rc": 1, "start": "2016-11-24 01:49:45.296825", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:49:45,357 p=8 u=root |  ...ignoring
2016-11-24 09:49:45,362 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:49:45,406 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:49:45,471 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:49:45,476 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:49:45,536 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:49:45,541 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:49:45,589 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:49:45,648 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:49:45,653 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:49:45,716 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:49:45,721 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:49:45,766 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:49:45,771 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:49:45,814 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:49:45,881 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:49:45,886 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:49:45,944 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:49:45,949 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:49:47,635 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=\"read\" --entrypoint=genfio-test --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -s -b 4k -d /dev/sdb -r 60 -m '$mode'", "delta": "0:00:01.389666", "end": "2016-11-24 01:49:47.611982", "failed": true, "rc": 1, "start": "2016-11-24 01:49:46.222316", "stderr": "", "stdout": "fio: failed parsing rw=$mode\nfio: job $mode-sdb-4k-seq dropped", "stdout_lines": ["fio: failed parsing rw=$mode", "fio: job $mode-sdb-4k-seq dropped"], "warnings": []}
2016-11-24 09:49:47,637 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:49:47,638 p=8 u=root |  192.168.140.81             : ok=23   changed=1    unreachable=0    failed=1   
2016-11-24 09:50:43,012 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:50:43,068 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:50:45,619 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:50:45,626 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:50:45,679 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m '$mode'", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:50:45,684 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:50:45,738 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:50:45,743 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:50:45,805 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:50:45,810 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:50:45,908 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:50:45,923 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:50:45,938 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:50:45,952 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:50:45,963 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:50:46,027 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:50:46,031 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:50:46,112 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:50:46,120 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:50:46,177 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:50:46,183 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:50:46,226 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:50:46,327 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:50:46,345 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:50:46,408 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:50:46,413 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:50:48,041 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:50:48,046 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:50:48,101 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:50:48,106 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:50:48,429 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035446", "end": "2016-11-24 01:50:48.408415", "failed": true, "rc": 1, "start": "2016-11-24 01:50:48.372969", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:50:48,430 p=8 u=root |  ...ignoring
2016-11-24 09:50:48,434 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:50:48,768 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037701", "end": "2016-11-24 01:50:48.742075", "failed": true, "rc": 1, "start": "2016-11-24 01:50:48.704374", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:50:48,769 p=8 u=root |  ...ignoring
2016-11-24 09:50:48,773 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:50:48,817 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:50:48,883 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:50:48,888 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:50:48,947 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:50:48,952 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:50:48,996 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:50:49,058 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:50:49,063 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:50:49,127 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:50:49,132 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:50:49,178 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:50:49,183 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:50:49,226 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:50:49,290 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:50:49,295 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:50:49,353 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:50:49,358 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:50:50,974 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1  -e mode=read --entrypoint=genfio-test --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -s -b 4k -d /dev/sdb -r 60 -m '$mode'", "delta": "0:00:01.331124", "end": "2016-11-24 01:50:50.951221", "failed": true, "rc": 1, "start": "2016-11-24 01:50:49.620097", "stderr": "", "stdout": "fio: failed parsing rw=$mode\nfio: job $mode-sdb-4k-seq dropped", "stdout_lines": ["fio: failed parsing rw=$mode", "fio: job $mode-sdb-4k-seq dropped"], "warnings": []}
2016-11-24 09:50:50,976 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:50:50,976 p=8 u=root |  192.168.140.81             : ok=23   changed=1    unreachable=0    failed=1   
2016-11-24 09:57:06,220 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:57:06,277 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:57:08,625 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:08,632 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:57:08,686 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m '$mode'", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:57:08,691 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:57:08,742 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:08,747 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:57:08,810 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:57:08,814 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:57:08,911 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:08,925 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:08,939 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:08,955 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:08,966 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:57:09,033 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:57:09,038 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:57:09,118 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:57:09,127 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:57:09,182 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:09,188 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:57:09,232 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:57:09,334 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:57:09,352 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:57:09,410 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:09,416 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:57:11,483 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:57:11,488 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:57:11,544 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:11,549 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:57:11,864 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037664", "end": "2016-11-24 01:57:11.845696", "failed": true, "rc": 1, "start": "2016-11-24 01:57:11.808032", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:57:11,865 p=8 u=root |  ...ignoring
2016-11-24 09:57:11,870 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:57:12,193 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039712", "end": "2016-11-24 01:57:12.171151", "failed": true, "rc": 1, "start": "2016-11-24 01:57:12.131439", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:57:12,194 p=8 u=root |  ...ignoring
2016-11-24 09:57:12,199 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:57:12,246 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:57:12,311 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:57:12,317 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:57:12,379 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:12,384 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:57:12,430 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:57:12,496 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:57:12,501 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:57:12,546 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:57:12,551 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:57:12,595 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:57:12,661 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:57:12,666 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:57:12,728 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:12,734 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:57:14,232 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -c \"genfio-test -s -b 4k -d /dev/sdb -r 60 -m '$mode'\"", "delta": "0:00:01.211383", "end": "2016-11-24 01:57:14.204740", "failed": true, "rc": 1, "start": "2016-11-24 01:57:12.993357", "stderr": "", "stdout": "No jobs(s) defined\n\nfio-2.10\nfio [options] [job options] <job file(s)>\n  --debug=options\tEnable debug logging. May be one/more of:\n\t\t\tprocess,file,io,mem,blktrace,verify,random,parse,\n\t\t\tdiskutil,job,mutex,profile,time,net,rate,compress\n  --parse-only\t\tParse options only, don't start any IO\n  --output\t\tWrite output to file\n  --runtime\t\tRuntime in seconds\n  --bandwidth-log\tGenerate per-job bandwidth logs\n  --minimal\t\tMinimal (terse) output\n  --output-format=x\tOutput format (terse,json,json+,normal)\n  --terse-version=x\tSet terse version output format to 'x'\n  --version\t\tPrint version info and exit\n  --help\t\tPrint this page\n  --cpuclock-test\tPerform test/validation of CPU clock\n  --crctest\t\tTest speed of checksum functions\n  --cmdhelp=cmd\t\tPrint command help, \"all\" for all of them\n  --enghelp=engine\tPrint ioengine help, or list available ioengines\n  --enghelp=engine,cmd\tPrint help for an ioengine cmd\n  --showcmd\t\tTurn a job file into command line options\n  --eta=when\t\tWhen ETA estimate should be printed\n            \t\tMay be \"always\", \"never\" or \"auto\"\n  --eta-newline=time\tForce a new line for every 'time' period passed\n  --status-interval=t\tForce full status dump every 't' period passed\n  --readonly\t\tTurn on safety read-only checks, preventing writes\n  --section=name\tOnly run specified section in job file\n  --alloc-size=kb\tSet smalloc pool to this size in kb (def 1024)\n  --warnings-fatal\tFio parser warnings are fatal\n  --max-jobs=nr\t\tMaximum number of threads/processes to support\n  --server=args\t\tStart a backend fio server\n  --daemonize=pidfile\tBackground fio server, write pid to file\n  --client=hostname\tTalk to remote backend fio server at hostname\n  --remote-config=file\tTell fio server to load this local job file\n  --idle-prof=option\tReport cpu idleness on a system or percpu basis\n\t\t\t(option=system,percpu) or run unit work\n\t\t\tcalibration only (option=calibrate)\n  --inflate-log=log\tInflate and output compressed log\n  --trigger-file=file\tExecute trigger cmd when file exists\n  --trigger-timeout=t\tExecute trigger af this time\n  --trigger=cmd\t\tSet this command as local trigger\n  --trigger-remote=cmd\tSet this command as remote trigger\n  --aux-path=path\tUse this path for fio state generated files\n\nFio was written by Jens Axboe <jens.axboe@oracle.com>\n                   Jens Axboe <jaxboe@fusionio.com>\n                   Jens Axboe <axboe@fb.com>", "stdout_lines": ["No jobs(s) defined", "", "fio-2.10", "fio [options] [job options] <job file(s)>", "  --debug=options\tEnable debug logging. May be one/more of:", "\t\t\tprocess,file,io,mem,blktrace,verify,random,parse,", "\t\t\tdiskutil,job,mutex,profile,time,net,rate,compress", "  --parse-only\t\tParse options only, don't start any IO", "  --output\t\tWrite output to file", "  --runtime\t\tRuntime in seconds", "  --bandwidth-log\tGenerate per-job bandwidth logs", "  --minimal\t\tMinimal (terse) output", "  --output-format=x\tOutput format (terse,json,json+,normal)", "  --terse-version=x\tSet terse version output format to 'x'", "  --version\t\tPrint version info and exit", "  --help\t\tPrint this page", "  --cpuclock-test\tPerform test/validation of CPU clock", "  --crctest\t\tTest speed of checksum functions", "  --cmdhelp=cmd\t\tPrint command help, \"all\" for all of them", "  --enghelp=engine\tPrint ioengine help, or list available ioengines", "  --enghelp=engine,cmd\tPrint help for an ioengine cmd", "  --showcmd\t\tTurn a job file into command line options", "  --eta=when\t\tWhen ETA estimate should be printed", "            \t\tMay be \"always\", \"never\" or \"auto\"", "  --eta-newline=time\tForce a new line for every 'time' period passed", "  --status-interval=t\tForce full status dump every 't' period passed", "  --readonly\t\tTurn on safety read-only checks, preventing writes", "  --section=name\tOnly run specified section in job file", "  --alloc-size=kb\tSet smalloc pool to this size in kb (def 1024)", "  --warnings-fatal\tFio parser warnings are fatal", "  --max-jobs=nr\t\tMaximum number of threads/processes to support", "  --server=args\t\tStart a backend fio server", "  --daemonize=pidfile\tBackground fio server, write pid to file", "  --client=hostname\tTalk to remote backend fio server at hostname", "  --remote-config=file\tTell fio server to load this local job file", "  --idle-prof=option\tReport cpu idleness on a system or percpu basis", "\t\t\t(option=system,percpu) or run unit work", "\t\t\tcalibration only (option=calibrate)", "  --inflate-log=log\tInflate and output compressed log", "  --trigger-file=file\tExecute trigger cmd when file exists", "  --trigger-timeout=t\tExecute trigger af this time", "  --trigger=cmd\t\tSet this command as local trigger", "  --trigger-remote=cmd\tSet this command as remote trigger", "  --aux-path=path\tUse this path for fio state generated files", "", "Fio was written by Jens Axboe <jens.axboe@oracle.com>", "                   Jens Axboe <jaxboe@fusionio.com>", "                   Jens Axboe <axboe@fb.com>"], "warnings": []}
2016-11-24 09:57:14,237 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:57:14,238 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:57:36,230 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:57:36,286 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:57:38,523 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:38,530 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:57:38,583 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:57:38,588 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:57:38,642 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:38,647 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:57:38,709 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:57:38,713 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:57:38,809 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:38,824 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:38,838 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:38,853 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:57:38,865 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:57:38,937 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:57:38,942 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:57:39,024 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:57:39,032 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:57:39,087 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:39,093 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:57:39,135 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:57:39,234 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:57:39,252 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:57:39,311 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:57:39,316 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:57:40,938 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:57:40,945 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:57:41,001 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:41,006 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:57:41,326 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.029980", "end": "2016-11-24 01:57:41.306617", "failed": true, "rc": 1, "start": "2016-11-24 01:57:41.276637", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:57:41,327 p=8 u=root |  ...ignoring
2016-11-24 09:57:41,332 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:57:41,652 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028012", "end": "2016-11-24 01:57:41.630068", "failed": true, "rc": 1, "start": "2016-11-24 01:57:41.602056", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:57:41,652 p=8 u=root |  ...ignoring
2016-11-24 09:57:41,657 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:57:41,701 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:57:41,769 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:57:41,774 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:57:41,832 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:41,837 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:57:41,881 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:57:41,945 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:57:41,950 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:57:41,995 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:57:42,001 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:57:42,048 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:57:42,113 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:57:42,119 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:57:42,177 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:57:42,182 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:57:43,755 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -c \"genfio-test -s -b 4k -d /dev/sdb -r 60 -m $mode\"", "delta": "0:00:01.279477", "end": "2016-11-24 01:57:43.731367", "failed": true, "rc": 1, "start": "2016-11-24 01:57:42.451890", "stderr": "", "stdout": "fio: unable to open '/root/fio-file*' job file", "stdout_lines": ["fio: unable to open '/root/fio-file*' job file"], "warnings": []}
2016-11-24 09:57:43,758 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:57:43,758 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:58:18,908 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:58:18,966 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:58:21,456 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:58:21,463 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:58:21,518 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "'-s -b 4k -d /dev/sdb -r 60 -m $mode'", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:58:21,523 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:58:21,575 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:58:21,580 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:58:21,642 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:58:21,646 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:58:21,744 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:58:21,758 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:58:21,773 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:58:21,788 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:58:21,799 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:58:21,863 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:58:21,869 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:58:21,950 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:58:21,959 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:58:22,014 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:58:22,020 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:58:22,063 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:58:22,162 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:58:22,179 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:58:22,238 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:58:22,243 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:58:24,126 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 09:58:24,131 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:58:24,186 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:58:24,192 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:58:24,527 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039172", "end": "2016-11-24 01:58:24.502814", "failed": true, "rc": 1, "start": "2016-11-24 01:58:24.463642", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:58:24,527 p=8 u=root |  ...ignoring
2016-11-24 09:58:24,532 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:58:24,850 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030059", "end": "2016-11-24 01:58:24.830211", "failed": true, "rc": 1, "start": "2016-11-24 01:58:24.800152", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:58:24,851 p=8 u=root |  ...ignoring
2016-11-24 09:58:24,856 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:58:24,900 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:58:24,965 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:58:24,970 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:58:25,029 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:58:25,034 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:58:25,078 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:58:25,143 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:58:25,148 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:58:25,193 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 09:58:25,198 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:58:25,242 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:58:25,306 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:58:25,311 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:58:25,369 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 09:58:25,374 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:58:26,873 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -c \"genfio-test '-s -b 4k -d /dev/sdb -r 60 -m $mode'\"", "delta": "0:00:01.198626", "end": "2016-11-24 01:58:26.847451", "failed": true, "rc": 1, "start": "2016-11-24 01:58:25.648825", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:58:26,875 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:58:26,876 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 09:59:36,623 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 09:59:36,680 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 09:59:39,179 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:59:39,186 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 09:59:39,238 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "\"-s -b 4k -d /dev/sdb -r 60 -m $mode\"", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 09:59:39,243 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 09:59:39,295 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:59:39,301 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 09:59:39,362 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 09:59:39,367 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 09:59:39,463 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:59:39,477 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:59:39,491 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:59:39,507 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 09:59:39,518 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 09:59:39,583 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 09:59:39,588 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 09:59:39,669 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 09:59:39,678 p=7 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 09:59:39,732 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:59:39,738 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 09:59:39,781 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 09:59:39,880 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 09:59:39,897 p=7 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 09:59:39,955 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 09:59:39,960 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 09:59:42,366 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 09:59:42,371 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 09:59:42,426 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:59:42,431 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 09:59:42,742 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.032091", "end": "2016-11-24 01:59:42.722834", "failed": true, "rc": 1, "start": "2016-11-24 01:59:42.690743", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:59:42,743 p=7 u=root |  ...ignoring
2016-11-24 09:59:42,748 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 09:59:43,067 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033569", "end": "2016-11-24 01:59:43.044275", "failed": true, "rc": 1, "start": "2016-11-24 01:59:43.010706", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:59:43,068 p=7 u=root |  ...ignoring
2016-11-24 09:59:43,073 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 09:59:43,116 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 09:59:43,185 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 09:59:43,190 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 09:59:43,248 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:59:43,253 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 09:59:43,297 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 09:59:43,361 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 09:59:43,366 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 09:59:43,411 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 09:59:43,416 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 09:59:43,460 p=7 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 09:59:43,524 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 09:59:43,529 p=7 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 09:59:43,587 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 09:59:43,592 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 09:59:45,070 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -c \"genfio-test \"-s -b 4k -d /dev/sdb -r 60 -m $mode\"\"", "delta": "0:00:01.176579", "end": "2016-11-24 01:59:45.044580", "failed": true, "rc": 1, "start": "2016-11-24 01:59:43.868001", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 09:59:45,072 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 09:59:45,072 p=7 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 10:02:45,912 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 10:02:45,969 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 10:02:48,410 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:02:48,417 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 10:02:48,470 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 10:02:48,475 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 10:02:48,527 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:02:48,533 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 10:02:48,594 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 10:02:48,599 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 10:02:48,696 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:02:48,710 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:02:48,725 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:02:48,740 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:02:48,751 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 10:02:48,829 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 10:02:48,837 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 10:02:48,917 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 10:02:48,926 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 10:02:48,981 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:02:48,987 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 10:02:49,029 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 10:02:49,128 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 10:02:49,145 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 10:02:49,203 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:02:49,208 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 10:02:51,023 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 10:02:51,028 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 10:02:51,087 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:02:51,092 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 10:02:51,421 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037906", "end": "2016-11-24 02:02:51.398483", "failed": true, "rc": 1, "start": "2016-11-24 02:02:51.360577", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:02:51,421 p=8 u=root |  ...ignoring
2016-11-24 10:02:51,426 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 10:02:51,742 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033373", "end": "2016-11-24 02:02:51.721912", "failed": true, "rc": 1, "start": "2016-11-24 02:02:51.688539", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:02:51,742 p=8 u=root |  ...ignoring
2016-11-24 10:02:51,747 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 10:02:51,792 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 10:02:51,857 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 10:02:51,862 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 10:02:51,921 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:02:51,925 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 10:02:51,970 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 10:02:52,035 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 10:02:52,040 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 10:02:52,085 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 10:02:52,090 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 10:02:52,134 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 10:02:52,199 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 10:02:52,204 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 10:02:52,262 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:02:52,267 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 10:02:52,315 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got 'container_args'. String: docker run --rm --name={{ bench.name }}-{{ ansible_hostname }} --entrypoint=/bin/bash {{ docker_flags }} {{ bench.image }} -c '{{bench.entrypoint container_args }}'"}
2016-11-24 10:02:52,317 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 10:02:52,318 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 10:03:23,982 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 10:03:24,038 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 10:03:26,313 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:03:26,320 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 10:03:26,373 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 10:03:26,378 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 10:03:26,433 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:03:26,438 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 10:03:26,499 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 10:03:26,503 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 10:03:26,598 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:03:26,612 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:03:26,649 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:03:26,664 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:03:26,677 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 10:03:26,741 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 10:03:26,746 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 10:03:26,830 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 10:03:26,839 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 10:03:26,893 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:03:26,899 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 10:03:26,942 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 10:03:27,041 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 10:03:27,059 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 10:03:27,116 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:03:27,121 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 10:03:28,713 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 10:03:28,718 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 10:03:28,773 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:03:28,778 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 10:03:29,114 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.044898", "end": "2016-11-24 02:03:29.091354", "failed": true, "rc": 1, "start": "2016-11-24 02:03:29.046456", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:03:29,115 p=8 u=root |  ...ignoring
2016-11-24 10:03:29,119 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 10:03:29,436 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030777", "end": "2016-11-24 02:03:29.413883", "failed": true, "rc": 1, "start": "2016-11-24 02:03:29.383106", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:03:29,437 p=8 u=root |  ...ignoring
2016-11-24 10:03:29,442 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 10:03:29,485 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 10:03:29,548 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 10:03:29,553 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 10:03:29,611 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:03:29,616 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 10:03:29,659 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 10:03:29,725 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 10:03:29,730 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 10:03:29,780 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 10:03:29,785 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 10:03:29,829 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 10:03:29,893 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 10:03:29,898 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 10:03:29,958 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:03:29,963 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 10:03:31,425 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/fio -c genfio-test -s -b 4k -d /dev/sdb -r 60 -m $mode", "delta": "0:00:01.172082", "end": "2016-11-24 02:03:31.399896", "failed": true, "rc": 1, "start": "2016-11-24 02:03:30.227814", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:03:31,428 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 10:03:31,428 p=8 u=root |  192.168.140.81             : ok=22   changed=1    unreachable=0    failed=1   
2016-11-24 10:04:02,776 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 10:04:02,833 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 10:04:05,276 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:04:05,283 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 10:04:05,336 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 10:04:05,341 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 10:04:05,393 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:04:05,398 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 10:04:05,461 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 10:04:05,465 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 10:04:05,563 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:04:05,577 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:04:05,591 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:04:05,607 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 10:04:05,618 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 10:04:05,682 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 10:04:05,686 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 10:04:05,768 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 10:04:05,776 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 10:04:05,832 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:04:05,838 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 10:04:05,881 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 10:04:05,980 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 10:04:05,998 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 10:04:06,056 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 10:04:06,062 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 10:04:07,673 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 10:04:07,678 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 10:04:07,733 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:04:07,738 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 10:04:08,069 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037621", "end": "2016-11-24 02:04:08.042385", "failed": true, "rc": 1, "start": "2016-11-24 02:04:08.004764", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:04:08,069 p=8 u=root |  ...ignoring
2016-11-24 10:04:08,074 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 10:04:08,398 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038244", "end": "2016-11-24 02:04:08.377545", "failed": true, "rc": 1, "start": "2016-11-24 02:04:08.339301", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 10:04:08,399 p=8 u=root |  ...ignoring
2016-11-24 10:04:08,407 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 10:04:08,450 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 10:04:08,515 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 10:04:08,520 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 10:04:08,582 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:04:08,587 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 10:04:08,631 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 10:04:08,697 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 10:04:08,701 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 10:04:08,747 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 10:04:08,752 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 10:04:08,801 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 10:04:08,865 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 10:04:08,873 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 10:04:08,931 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:04:08,935 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 10:05:21,492 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 10:05:21,497 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 10:05:21,541 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 10:05:21,546 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 10:05:21,605 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 10:05:21,610 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 10:05:21,672 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 10:05:21,678 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 10:05:22,207 p=8 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7fcec5d87b40>) => {"failed": true, "item": "<built-in method get of dict object at 0x7fcec5d87b40>", "msg": "Failed to find required executable rsync"}
2016-11-24 10:05:22,209 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 10:05:22,210 p=8 u=root |  192.168.140.81             : ok=25   changed=2    unreachable=0    failed=1   
2016-11-24 16:37:36,540 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 16:37:36,600 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 16:37:41,012 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 16:37:41,020 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 16:37:41,077 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": "-s -b 4k -d /dev/sdb -r 60 -m $mode", 
            "devices": [
                "/dev/sdb:/dev/sdb"
            ], 
            "entrypoint": "genfio-test", 
            "get": [
                "/tmp/results"
            ], 
            "image": "ivotron/fio", 
            "name": "fio", 
            "volumes": [
                "/tmp/results:/results"
            ]
        }
    ]
}
2016-11-24 16:37:41,082 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 16:37:41,135 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 16:37:41,139 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 16:37:41,216 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 16:37:41,220 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 16:37:41,316 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 16:37:41,330 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 16:37:41,344 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 16:37:41,566 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 16:37:41,577 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 16:37:41,645 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 16:37:41,650 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 16:37:41,733 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 16:37:41,741 p=8 u=root |  TASK [run-bench : check that bench variable is defined] ************************
2016-11-24 16:37:41,797 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 16:37:41,802 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 16:37:41,846 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 16:37:41,945 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 16:37:41,963 p=8 u=root |  TASK [run-bench : check that required variables are defined] *******************
2016-11-24 16:37:42,023 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 16:37:42,028 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 16:37:44,109 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 16:37:44,114 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 16:37:44,175 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 16:37:44,181 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 16:37:44,507 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041242", "end": "2016-11-24 08:37:44.488386", "failed": true, "rc": 1, "start": "2016-11-24 08:37:44.447144", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 16:37:44,508 p=8 u=root |  ...ignoring
2016-11-24 16:37:44,514 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 16:37:44,854 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041767", "end": "2016-11-24 08:37:44.830952", "failed": true, "rc": 1, "start": "2016-11-24 08:37:44.789185", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 16:37:44,854 p=8 u=root |  ...ignoring
2016-11-24 16:37:44,859 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 16:37:44,904 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 16:37:44,969 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 16:37:44,979 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 16:37:45,038 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 16:37:45,043 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 16:37:45,093 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 16:37:45,160 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 16:37:45,165 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 16:37:45,211 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 16:37:45,216 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 16:37:45,260 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 16:37:45,326 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 16:37:45,331 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 16:37:45,391 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 16:37:45,396 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 16:38:58,014 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 16:38:58,019 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 16:38:58,062 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 16:38:58,067 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 16:38:58,122 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 16:38:58,127 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 16:38:58,190 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 16:38:58,196 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 16:38:59,627 p=8 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7f0677db7a28>) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/experiment/<built-in method get of dict object at 0x7f0677db7a28>\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "<built-in method get of dict object at 0x7f0677db7a28>", "msg": "rsync: link_stat \"/experiment/<built-in method get of dict object at 0x7f0677db7a28>\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\n", "rc": 11}
2016-11-24 16:38:59,629 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 16:38:59,630 p=8 u=root |  192.168.140.81             : ok=25   changed=2    unreachable=0    failed=1   
2016-11-24 17:29:25,481 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:29:25,538 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:29:27,943 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:29:27,950 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:29:28,003 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:29:28,008 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:29:28,071 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:29:28,075 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:29:28,172 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:29:28,186 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:29:28,200 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:29:28,214 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:29:28,226 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:29:28,293 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:29:28,298 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:29:28,380 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:29:28,390 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:29:28,432 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:29:28,530 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:29:28,547 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:29:30,210 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:29:30,217 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:29:30,273 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:29:30,279 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:29:30,608 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034365", "end": "2016-11-24 09:29:30.586114", "failed": true, "rc": 1, "start": "2016-11-24 09:29:30.551749", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:29:30,609 p=7 u=root |  ...ignoring
2016-11-24 17:29:30,614 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:29:30,930 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034069", "end": "2016-11-24 09:29:30.907345", "failed": true, "rc": 1, "start": "2016-11-24 09:29:30.873276", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:29:30,931 p=7 u=root |  ...ignoring
2016-11-24 17:29:30,936 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:29:30,980 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:29:31,045 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:29:31,050 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:29:31,109 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:29:31,114 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:29:31,162 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:29:31,225 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:29:31,230 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:29:31,276 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:29:31,281 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:29:31,324 p=7 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:29:31,390 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:29:31,397 p=7 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:29:31,458 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:29:31,463 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:29:45,466 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:29:45,471 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:29:45,514 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:29:45,519 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:29:45,573 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:29:45,578 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:29:45,641 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:29:45,647 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:29:46,937 p=7 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7f36f68cfb40>) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/experiment/<built-in method get of dict object at 0x7f36f68cfb40>\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "<built-in method get of dict object at 0x7f36f68cfb40>", "msg": "rsync: link_stat \"/experiment/<built-in method get of dict object at 0x7f36f68cfb40>\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\n", "rc": 11}
2016-11-24 17:29:46,940 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:29:46,940 p=7 u=root |  192.168.140.81             : ok=22   changed=2    unreachable=0    failed=1   
2016-11-24 17:33:07,995 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:33:08,053 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:33:10,362 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:33:10,370 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:33:10,423 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:33:10,428 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:33:10,491 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:33:10,496 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:33:10,593 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:33:10,607 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:33:10,621 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:33:10,634 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:33:10,645 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:33:10,711 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:33:10,716 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:33:10,794 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:33:10,803 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:33:10,847 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:33:10,942 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:33:10,958 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:33:12,745 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:33:12,751 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:33:12,810 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:33:12,815 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:33:13,159 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/dummybench)", "delta": "0:00:00.035419", "end": "2016-11-24 09:33:13.137281", "failed": true, "rc": 1, "start": "2016-11-24 09:33:13.101862", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:33:13,160 p=8 u=root |  ...ignoring
2016-11-24 17:33:13,165 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:33:13,486 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/dummybench)", "delta": "0:00:00.028098", "end": "2016-11-24 09:33:13.468292", "failed": true, "rc": 1, "start": "2016-11-24 09:33:13.440194", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:33:13,486 p=8 u=root |  ...ignoring
2016-11-24 17:33:13,491 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:33:13,538 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:33:13,602 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:33:13,607 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:33:13,665 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:33:13,670 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:33:13,713 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:33:13,778 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:33:13,783 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:33:13,828 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:33:13,833 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:33:13,877 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:33:13,943 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:33:13,948 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:33:14,008 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:33:14,013 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:33:15,554 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker run --rm --name=fio-rackform1 --entrypoint=/bin/bash  -e mode=read --device /dev/sdb:/dev/sdb -v /tmp/results:/results ivotron/dummybench -c 'genfio-test -s -b 4k -d /dev/sdb -r 2 -m $mode'", "delta": "0:00:01.256830", "end": "2016-11-24 09:33:15.531237", "failed": true, "rc": 127, "start": "2016-11-24 09:33:14.274407", "stderr": "docker: Error response from daemon: oci runtime error: exec: \"/bin/bash\": stat /bin/bash: no such file or directory.", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:33:15,557 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:33:15,557 p=8 u=root |  192.168.140.81             : ok=19   changed=1    unreachable=0    failed=1   
2016-11-24 17:34:52,176 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:34:52,234 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:34:54,443 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:34:54,450 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:34:54,503 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:34:54,508 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:34:54,570 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:34:54,576 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:34:54,674 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:34:54,688 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:34:54,702 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:34:54,716 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:34:54,727 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:34:54,794 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:34:54,799 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:34:54,879 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:34:54,889 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:34:54,936 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:34:55,033 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:34:55,049 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:34:56,696 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:34:56,702 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:34:56,761 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:34:56,766 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:34:57,104 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039488", "end": "2016-11-24 09:34:57.079608", "failed": true, "rc": 1, "start": "2016-11-24 09:34:57.040120", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:34:57,104 p=8 u=root |  ...ignoring
2016-11-24 17:34:57,109 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:34:57,441 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039106", "end": "2016-11-24 09:34:57.416248", "failed": true, "rc": 1, "start": "2016-11-24 09:34:57.377142", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:34:57,441 p=8 u=root |  ...ignoring
2016-11-24 17:34:57,446 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:34:57,489 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:34:57,558 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:34:57,563 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:34:57,620 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:34:57,625 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:34:57,669 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:34:57,733 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:34:57,738 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:34:57,784 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:34:57,789 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:34:57,832 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:34:57,896 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:34:57,901 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:34:57,958 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:34:57,963 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:35:11,989 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:35:11,994 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:35:12,037 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:35:12,042 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:35:12,097 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:35:12,102 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:35:12,163 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:35:12,172 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:35:13,975 p=8 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7f54ef90c5c8>) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/experiment/<built-in method get of dict object at 0x7f54ef90c5c8>\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "<built-in method get of dict object at 0x7f54ef90c5c8>", "msg": "rsync: link_stat \"/experiment/<built-in method get of dict object at 0x7f54ef90c5c8>\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\nrsync: [sender] write error: Broken pipe (32)\n", "rc": 11}
2016-11-24 17:35:13,977 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:35:13,978 p=8 u=root |  192.168.140.81             : ok=22   changed=2    unreachable=0    failed=1   
2016-11-24 17:36:18,854 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:36:18,912 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:36:21,393 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:36:21,400 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:36:21,457 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:36:21,462 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:36:21,526 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:36:21,530 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:36:21,624 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:36:21,639 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:36:21,653 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:36:21,668 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:36:21,679 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:36:21,744 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:36:21,748 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:36:21,828 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:36:21,838 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:36:21,881 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:36:21,979 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:36:21,996 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:36:23,609 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:36:23,613 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:36:23,669 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:36:23,674 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:36:24,007 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.045018", "end": "2016-11-24 09:36:23.984011", "failed": true, "rc": 1, "start": "2016-11-24 09:36:23.938993", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:36:24,008 p=8 u=root |  ...ignoring
2016-11-24 17:36:24,012 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:36:24,319 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.029586", "end": "2016-11-24 09:36:24.301661", "failed": true, "rc": 1, "start": "2016-11-24 09:36:24.272075", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:36:24,320 p=8 u=root |  ...ignoring
2016-11-24 17:36:24,325 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:36:24,369 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:36:24,437 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:36:24,443 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:36:24,500 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:36:24,505 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:36:24,549 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:36:24,613 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:36:24,618 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:36:24,663 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:36:24,668 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:36:24,712 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:36:24,777 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:36:24,782 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:36:24,841 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:36:24,846 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:36:38,805 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:36:38,810 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:36:38,854 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:36:38,859 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:36:38,914 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:36:38,918 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:36:38,981 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:36:38,987 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:36:39,041 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "the path /results/baseline/mode/read"
}
2016-11-24 17:36:39,047 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:36:40,827 p=8 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7fe8d99487f8>) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/experiment/<built-in method get of dict object at 0x7fe8d99487f8>\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "<built-in method get of dict object at 0x7fe8d99487f8>", "msg": "rsync: link_stat \"/experiment/<built-in method get of dict object at 0x7fe8d99487f8>\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\n", "rc": 11}
2016-11-24 17:36:40,829 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:36:40,830 p=8 u=root |  192.168.140.81             : ok=23   changed=2    unreachable=0    failed=1   
2016-11-24 17:37:28,334 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:37:28,390 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:37:30,872 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:37:30,879 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:37:30,936 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:37:30,941 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:37:31,005 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:37:31,010 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:37:31,107 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:37:31,121 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:37:31,135 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:37:31,150 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:37:31,160 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:37:31,225 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:37:31,229 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:37:31,312 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:37:31,321 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:37:31,368 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:37:31,464 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:37:31,483 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:37:33,084 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:37:33,091 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:37:33,146 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:37:33,152 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:37:33,488 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.046112", "end": "2016-11-24 09:37:33.467499", "failed": true, "rc": 1, "start": "2016-11-24 09:37:33.421387", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:37:33,488 p=8 u=root |  ...ignoring
2016-11-24 17:37:33,493 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:37:33,827 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038868", "end": "2016-11-24 09:37:33.803328", "failed": true, "rc": 1, "start": "2016-11-24 09:37:33.764460", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:37:33,828 p=8 u=root |  ...ignoring
2016-11-24 17:37:33,833 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:37:33,880 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:37:33,944 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:37:33,950 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:37:34,008 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:37:34,012 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:37:34,056 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:37:34,120 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:37:34,125 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:37:34,170 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:37:34,176 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:37:34,218 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:37:34,282 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:37:34,288 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:37:34,346 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:37:34,351 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:37:48,309 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:37:48,314 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:37:48,357 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:37:48,362 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:37:48,417 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:37:48,422 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:37:48,488 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:37:48,494 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:37:48,550 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "the path /results/baseline/mode/read"
}
2016-11-24 17:37:48,555 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:37:48,609 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "the get <built-in method get of dict object at 0x7f9f59c72d70>"
}
2016-11-24 17:37:48,615 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:37:49,965 p=8 u=root |  failed: [192.168.140.81] (item=<built-in method get of dict object at 0x7f9f59c74e88>) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/experiment/<built-in method get of dict object at 0x7f9f59c74e88>\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "<built-in method get of dict object at 0x7f9f59c74e88>", "msg": "rsync: link_stat \"/experiment/<built-in method get of dict object at 0x7f9f59c74e88>\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\n", "rc": 11}
2016-11-24 17:37:49,969 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:37:49,969 p=8 u=root |  192.168.140.81             : ok=24   changed=2    unreachable=0    failed=1   
2016-11-24 17:38:34,636 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:38:34,693 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:38:37,111 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:38:37,118 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:38:37,171 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:38:37,176 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:38:37,238 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:38:37,243 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:38:37,340 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:38:37,354 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:38:37,368 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:38:37,381 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:38:37,394 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:38:37,457 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:38:37,465 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:38:37,546 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:38:37,556 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:38:37,598 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:38:37,695 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:38:37,713 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:38:39,334 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:38:39,340 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:38:39,396 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:38:39,401 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:38:39,720 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.031976", "end": "2016-11-24 09:38:39.698849", "failed": true, "rc": 1, "start": "2016-11-24 09:38:39.666873", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:38:39,720 p=7 u=root |  ...ignoring
2016-11-24 17:38:39,725 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:38:40,044 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030933", "end": "2016-11-24 09:38:40.023262", "failed": true, "rc": 1, "start": "2016-11-24 09:38:39.992329", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:38:40,044 p=7 u=root |  ...ignoring
2016-11-24 17:38:40,049 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:38:40,093 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:38:40,158 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:38:40,163 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:38:40,221 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:38:40,226 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:38:40,273 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:38:40,341 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:38:40,346 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:38:40,392 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:38:40,397 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:38:40,441 p=7 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:38:40,506 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:38:40,510 p=7 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:38:40,569 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:38:40,574 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:38:54,570 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:38:54,575 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:38:54,618 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:38:54,623 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:38:54,678 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:38:54,683 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:38:54,746 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:38:54,751 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:38:54,805 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "the path /results/baseline/mode/read"
}
2016-11-24 17:38:54,810 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:38:54,864 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "the get [u'/tmp/results']"
}
2016-11-24 17:38:54,870 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:38:56,285 p=7 u=root |  failed: [192.168.140.81] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"/tmp/results\" \"issdm@192.168.140.81:/results/baseline/mode/read/\"", "failed": true, "item": "/tmp/results", "msg": "rsync: link_stat \"/tmp/results\" failed: No such file or directory (2)\nrsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.0]\n", "rc": 11}
2016-11-24 17:38:56,289 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:38:56,289 p=7 u=root |  192.168.140.81             : ok=24   changed=2    unreachable=0    failed=1   
2016-11-24 17:44:06,754 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:44:06,810 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:44:09,315 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:44:09,322 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:44:09,379 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:44:09,385 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:44:09,451 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:44:09,455 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:44:09,553 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:44:09,566 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:44:09,580 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:44:09,595 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:44:09,606 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:44:09,670 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:44:09,675 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:44:09,757 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:44:09,766 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:44:09,809 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:44:09,906 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:44:09,924 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:44:11,631 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 17:44:11,636 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:44:11,691 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:44:11,696 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:44:12,020 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036974", "end": "2016-11-24 09:44:11.997639", "failed": true, "rc": 1, "start": "2016-11-24 09:44:11.960665", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:44:12,020 p=9 u=root |  ...ignoring
2016-11-24 17:44:12,025 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:44:12,357 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036595", "end": "2016-11-24 09:44:12.334097", "failed": true, "rc": 1, "start": "2016-11-24 09:44:12.297502", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:44:12,357 p=9 u=root |  ...ignoring
2016-11-24 17:44:12,362 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:44:12,406 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:44:12,470 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:44:12,474 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:44:12,536 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:44:12,540 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:44:12,584 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:44:12,648 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:44:12,653 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:44:12,697 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 17:44:12,702 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:44:12,747 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:44:12,811 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:44:12,817 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:44:12,875 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:44:12,880 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:44:26,856 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 17:44:26,861 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:44:26,903 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 17:44:26,909 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:44:26,965 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:44:26,970 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:44:27,033 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:44:27,038 p=9 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:44:27,091 p=9 u=root |  ok: [192.168.140.81] => {
    "msg": "the path /results/baseline/mode/read"
}
2016-11-24 17:44:27,096 p=9 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-24 17:44:27,151 p=9 u=root |  ok: [192.168.140.81] => {
    "msg": "the get [u'/tmp/results']"
}
2016-11-24 17:44:27,156 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:44:28,375 p=9 u=root |  failed: [192.168.140.81] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"issdm@192.168.140.81:/tmp/results\" \"/results/baseline/mode/read/\"", "failed": true, "item": "/tmp/results", "msg": "rsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.1]\n", "rc": 11}
2016-11-24 17:44:28,378 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:44:28,379 p=9 u=root |  192.168.140.81             : ok=24   changed=2    unreachable=0    failed=1   
2016-11-24 17:46:59,948 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:47:00,004 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:47:02,266 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:47:02,273 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:47:02,325 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:47:02,331 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:47:02,395 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:47:02,400 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:47:02,497 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:02,511 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:02,525 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:02,538 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:02,549 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:47:02,621 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:47:02,625 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:47:02,681 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/run-bench.yml': line 33, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  file: '{{output_folder}}'\n    state: directory\n    ^ here\n"}
2016-11-24 17:47:02,684 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:47:02,684 p=8 u=root |  192.168.140.81             : ok=8    changed=0    unreachable=0    failed=1   
2016-11-24 17:47:33,001 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:47:33,057 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:47:35,318 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:47:35,325 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:47:35,381 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:47:35,386 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:47:35,447 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:47:35,452 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:47:35,549 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:35,562 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:35,576 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:35,589 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:47:35,600 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:47:35,668 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:47:35,672 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:47:35,726 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/vendor/baseliner/roles/run-bench/tasks/run-bench.yml': line 30, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  file: '{{output_folder}}'\n    state: directory\n    ^ here\n"}
2016-11-24 17:47:35,728 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:47:35,729 p=8 u=root |  192.168.140.81             : ok=8    changed=0    unreachable=0    failed=1   
2016-11-24 17:49:08,213 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:49:08,270 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:49:10,959 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:49:10,966 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:49:11,019 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:49:11,024 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:49:11,087 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:49:11,091 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:49:11,202 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:49:11,216 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:49:11,230 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:49:11,244 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:49:11,255 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:49:11,318 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:49:11,323 p=7 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:49:11,404 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:49:11,413 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:49:11,456 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:49:11,551 p=7 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:49:11,568 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:49:13,218 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:49:13,225 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:49:13,283 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:49:13,289 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:49:13,616 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.036815", "end": "2016-11-24 09:49:13.593406", "failed": true, "rc": 1, "start": "2016-11-24 09:49:13.556591", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:49:13,616 p=7 u=root |  ...ignoring
2016-11-24 17:49:13,621 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:49:13,939 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034218", "end": "2016-11-24 09:49:13.922854", "failed": true, "rc": 1, "start": "2016-11-24 09:49:13.888636", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:49:13,940 p=7 u=root |  ...ignoring
2016-11-24 17:49:13,945 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:49:13,989 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:49:14,053 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:49:14,058 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:49:14,116 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:49:14,121 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:49:14,165 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:49:14,243 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:49:14,248 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:49:14,293 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:49:14,298 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:49:14,342 p=7 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:49:14,406 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:49:14,411 p=7 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:49:14,469 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:49:14,474 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:49:28,459 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 17:49:28,464 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:49:28,507 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 17:49:28,512 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:49:28,567 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 17:49:28,571 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:49:28,633 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:49:28,638 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:49:29,120 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "There was an issue creating /results as requested: [Errno 13] Permission denied: '/results'", "path": "/results/baseline/mode/read", "state": "absent"}
2016-11-24 17:49:29,122 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:49:29,122 p=7 u=root |  192.168.140.81             : ok=22   changed=2    unreachable=0    failed=1   
2016-11-24 17:53:21,898 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:53:21,955 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:53:24,164 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:53:24,171 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:53:24,224 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:53:24,230 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:53:24,292 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:53:24,297 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:53:24,394 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:53:24,408 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:53:24,423 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:53:24,438 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:53:24,449 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:53:24,515 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:53:24,520 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:53:24,602 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:53:24,612 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:53:24,654 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:53:24,755 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:53:24,773 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:53:26,453 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:53:26,458 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:53:26,513 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:53:26,518 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:53:26,840 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033803", "end": "2016-11-24 09:53:26.818970", "failed": true, "rc": 1, "start": "2016-11-24 09:53:26.785167", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:53:26,840 p=8 u=root |  ...ignoring
2016-11-24 17:53:26,845 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:53:27,163 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039410", "end": "2016-11-24 09:53:27.145907", "failed": true, "rc": 1, "start": "2016-11-24 09:53:27.106497", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:53:27,164 p=8 u=root |  ...ignoring
2016-11-24 17:53:27,169 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:53:27,216 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:53:27,283 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:53:27,288 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:53:27,346 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:53:27,352 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:53:27,395 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:53:27,461 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:53:27,466 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:53:27,511 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:53:27,516 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:53:27,559 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:53:27,623 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:53:27,628 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:53:27,685 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:53:27,690 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:53:41,696 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:53:41,701 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:53:41,744 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:53:41,749 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:53:41,805 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:53:41,810 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:53:41,877 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:53:41,882 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:53:42,247 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:53:42,249 p=8 u=root |   [WARNING]: Consider using 'become', 'become_method', and 'become_user' rather than running sudo

2016-11-24 17:53:42,254 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:53:43,433 p=8 u=root |  failed: [192.168.140.81] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"issdm@192.168.140.81:/tmp/results\" \"/results/baseline/mode/read/\"", "failed": true, "item": "/tmp/results", "msg": "rsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.1]\n", "rc": 11}
2016-11-24 17:53:43,436 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:53:43,436 p=8 u=root |  192.168.140.81             : ok=23   changed=3    unreachable=0    failed=1   
2016-11-24 17:56:37,830 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:56:37,887 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:56:40,370 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:56:40,377 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:56:40,430 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:56:40,435 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:56:40,498 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:56:40,502 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:56:40,597 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:56:40,611 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:56:40,625 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:56:40,639 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:56:40,650 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:56:40,714 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:56:40,719 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:56:40,799 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:56:40,808 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:56:40,851 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:56:40,948 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:56:40,965 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:56:42,541 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 17:56:42,547 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:56:42,602 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:56:42,607 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:56:42,935 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039438", "end": "2016-11-24 09:56:42.912997", "failed": true, "rc": 1, "start": "2016-11-24 09:56:42.873559", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:56:42,935 p=9 u=root |  ...ignoring
2016-11-24 17:56:42,940 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:56:43,256 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030840", "end": "2016-11-24 09:56:43.238923", "failed": true, "rc": 1, "start": "2016-11-24 09:56:43.208083", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:56:43,257 p=9 u=root |  ...ignoring
2016-11-24 17:56:43,262 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:56:43,306 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:56:43,370 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:56:43,375 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:56:43,433 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:56:43,438 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:56:43,482 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:56:43,546 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:56:43,550 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:56:43,596 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 17:56:43,601 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:56:43,645 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:56:43,709 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:56:43,714 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:56:43,773 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:56:43,778 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:56:57,742 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 17:56:57,748 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:56:57,791 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 17:56:57,796 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:56:57,852 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 17:56:57,856 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:56:57,919 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:56:57,939 p=9 u=root |  TASK [run-bench : ensure '/results/baseline/mode/read' folder exists] **********
2016-11-24 17:56:58,228 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 17:56:58,231 p=9 u=root |   [WARNING]: Consider using 'become', 'become_method', and 'become_user' rather than running sudo

2016-11-24 17:56:58,236 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:56:59,382 p=9 u=root |  failed: [192.168.140.81] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"issdm@192.168.140.81:/tmp/results\" \"/results/baseline/mode/read/\"", "failed": true, "item": "/tmp/results", "msg": "rsync: mkdir \"/results/baseline/mode/read\" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(674) [Receiver=3.1.1]\nrsync: [Receiver] write error: Broken pipe (32)\n", "rc": 11}
2016-11-24 17:56:59,384 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:56:59,384 p=9 u=root |  192.168.140.81             : ok=23   changed=3    unreachable=0    failed=1   
2016-11-24 17:57:53,851 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-24 17:57:53,906 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-24 17:57:56,169 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:57:56,176 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 17:57:56,228 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 17:57:56,233 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 17:57:56,295 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 17:57:56,299 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 17:57:56,394 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:57:56,407 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:57:56,421 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:57:56,435 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 17:57:56,445 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:57:56,511 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 17:57:56,516 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:57:56,597 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:57:56,607 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:57:56,649 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:57:56,746 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:57:56,763 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:57:58,334 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:57:58,339 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:57:58,394 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:57:58,400 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:57:58,738 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037764", "end": "2016-11-24 09:57:58.713990", "failed": true, "rc": 1, "start": "2016-11-24 09:57:58.676226", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:57:58,739 p=8 u=root |  ...ignoring
2016-11-24 17:57:58,744 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:57:59,082 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041403", "end": "2016-11-24 09:57:59.057866", "failed": true, "rc": 1, "start": "2016-11-24 09:57:59.016463", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:57:59,082 p=8 u=root |  ...ignoring
2016-11-24 17:57:59,087 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:57:59,131 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:57:59,195 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:57:59,200 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:57:59,259 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:57:59,264 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:57:59,307 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:57:59,372 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:57:59,377 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:57:59,422 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:57:59,427 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:57:59,470 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:57:59,537 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:57:59,543 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:57:59,600 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:57:59,605 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:58:13,575 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:13,581 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:58:13,624 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:13,629 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:58:13,684 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:13,689 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:58:13,753 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 17:58:13,759 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:58:14,261 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 17:58:14,266 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:58:15,722 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 17:58:15,727 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:58:15,793 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-24 17:58:15,798 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:58:15,879 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:58:15,887 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:58:15,930 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:58:16,025 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:58:16,043 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:58:17,464 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:17,469 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:58:17,527 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:17,532 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:58:17,861 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041367", "end": "2016-11-24 09:58:17.841762", "failed": true, "rc": 1, "start": "2016-11-24 09:58:17.800395", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:17,862 p=8 u=root |  ...ignoring
2016-11-24 17:58:17,867 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:58:18,180 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028455", "end": "2016-11-24 09:58:18.158476", "failed": true, "rc": 1, "start": "2016-11-24 09:58:18.130021", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:18,181 p=8 u=root |  ...ignoring
2016-11-24 17:58:18,186 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:58:18,229 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:58:18,294 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 17:58:18,308 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:58:18,367 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:18,372 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:58:18,420 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:58:18,485 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:58:18,490 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:58:18,535 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:18,540 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:58:18,584 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:58:18,649 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:58:18,654 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:58:18,716 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:18,722 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:58:27,801 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:27,806 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:58:27,849 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:27,854 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:58:27,909 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:27,914 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:58:27,977 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 17:58:27,983 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:58:28,268 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 17:58:28,273 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:58:29,535 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 17:58:29,540 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:58:29,621 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randread'])
2016-11-24 17:58:29,630 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:58:29,709 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:58:29,717 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:58:29,762 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:58:29,856 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:58:29,873 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:58:31,307 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:31,312 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:58:31,369 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:31,375 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:58:31,702 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.032330", "end": "2016-11-24 09:58:31.682749", "failed": true, "rc": 1, "start": "2016-11-24 09:58:31.650419", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:31,703 p=8 u=root |  ...ignoring
2016-11-24 17:58:31,707 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:58:32,037 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037402", "end": "2016-11-24 09:58:32.018013", "failed": true, "rc": 1, "start": "2016-11-24 09:58:31.980611", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:32,038 p=8 u=root |  ...ignoring
2016-11-24 17:58:32,043 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:58:32,090 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:58:32,157 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 17:58:32,162 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:58:32,222 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:32,227 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:58:32,271 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:58:32,339 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:58:32,344 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:58:32,390 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:32,395 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:58:32,439 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:58:32,546 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:58:32,551 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:58:32,664 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:32,669 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:58:46,672 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:46,677 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:58:46,720 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:46,725 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:58:46,780 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:46,785 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:58:46,849 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 17:58:46,855 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:58:47,142 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 17:58:47,147 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:58:48,279 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 17:58:48,284 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 17:58:48,396 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randwrite'])
2016-11-24 17:58:48,400 p=8 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 17:58:48,559 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 17:58:48,567 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 17:58:48,612 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 17:58:48,707 p=8 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 17:58:48,724 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 17:58:50,207 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:58:50,212 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 17:58:50,271 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:50,276 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 17:58:50,598 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034277", "end": "2016-11-24 09:58:50.579394", "failed": true, "rc": 1, "start": "2016-11-24 09:58:50.545117", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:50,598 p=8 u=root |  ...ignoring
2016-11-24 17:58:50,603 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 17:58:50,925 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.032704", "end": "2016-11-24 09:58:50.902988", "failed": true, "rc": 1, "start": "2016-11-24 09:58:50.870284", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 17:58:50,925 p=8 u=root |  ...ignoring
2016-11-24 17:58:50,930 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 17:58:50,981 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 17:58:51,049 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 17:58:51,054 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 17:58:51,123 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:51,128 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 17:58:51,177 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 17:58:51,243 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 17:58:51,248 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 17:58:51,294 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:58:51,299 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 17:58:51,343 p=8 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 17:58:51,410 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 17:58:51,416 p=8 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 17:58:51,477 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:58:51,483 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 17:59:00,467 p=8 u=root |  changed: [192.168.140.81]
2016-11-24 17:59:00,472 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 17:59:00,515 p=8 u=root |  skipping: [192.168.140.81]
2016-11-24 17:59:00,520 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 17:59:00,576 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:59:00,581 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 17:59:00,643 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 17:59:00,649 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 17:59:00,936 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 17:59:00,941 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 17:59:02,102 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 17:59:02,107 p=8 u=root |  TASK [run-bench : non-parametrized execution] **********************************
2016-11-24 17:59:02,156 p=8 u=root |  skipping: [192.168.140.81] => (item={u'name': u'fio', u'image': u'ivotron/fio', u'args': u'-s -b 4k -d /dev/sdb -r 2 -m $mode', u'devices': [u'/dev/sdb:/dev/sdb'], u'entrypoint': u'genfio-test', u'volumes': [u'/tmp/results:/results'], u'fetch': [u'/tmp/results']}) 
2016-11-24 17:59:02,166 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-24 17:59:03,811 p=8 u=root |  ok: [192.168.140.81]
2016-11-24 17:59:03,817 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-24 17:59:04,106 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 17:59:04,129 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-24 17:59:05,137 p=8 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-24 17:59:05,141 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-24 17:59:05,141 p=8 u=root |  192.168.140.81             : ok=78   changed=18   unreachable=0    failed=0   
2016-11-24 18:01:04,783 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 18:01:04,840 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 18:01:07,110 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:07,117 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 18:01:07,170 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 18:01:07,175 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 18:01:07,238 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 18:01:07,242 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 18:01:07,337 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:01:07,351 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:01:07,364 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:01:07,378 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:01:07,388 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:01:07,455 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 18:01:07,459 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 18:01:07,541 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:01:07,550 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:01:07,593 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:01:07,690 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:01:07,708 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:01:09,297 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:09,304 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:01:09,358 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:09,363 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:01:09,691 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035704", "end": "2016-11-24 10:01:09.668099", "failed": true, "rc": 1, "start": "2016-11-24 10:01:09.632395", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:09,692 p=9 u=root |  ...ignoring
2016-11-24 18:01:09,696 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:01:10,022 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033561", "end": "2016-11-24 10:01:10.001245", "failed": true, "rc": 1, "start": "2016-11-24 10:01:09.967684", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:10,023 p=9 u=root |  ...ignoring
2016-11-24 18:01:10,027 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:01:10,077 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:01:10,139 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 18:01:10,145 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:01:10,202 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:10,207 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:01:10,250 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:01:10,313 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:01:10,318 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:01:10,363 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:10,368 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:01:10,412 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 18:01:10,476 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:01:10,481 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 18:01:10,542 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:10,547 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:01:23,537 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:23,542 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:01:23,585 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:23,590 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:01:23,648 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:23,653 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:01:23,715 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 18:01:23,720 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:01:24,196 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:01:24,201 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:01:25,399 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:01:25,404 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:01:25,469 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-24 18:01:25,473 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 18:01:25,569 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:01:25,577 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:01:25,621 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:01:25,714 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:01:25,731 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:01:27,179 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:27,184 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:01:27,239 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:27,244 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:01:27,567 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.030681", "end": "2016-11-24 10:01:27.546648", "failed": true, "rc": 1, "start": "2016-11-24 10:01:27.515967", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:27,568 p=9 u=root |  ...ignoring
2016-11-24 18:01:27,572 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:01:27,910 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037581", "end": "2016-11-24 10:01:27.890127", "failed": true, "rc": 1, "start": "2016-11-24 10:01:27.852546", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:27,911 p=9 u=root |  ...ignoring
2016-11-24 18:01:27,915 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:01:27,959 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:01:28,026 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 18:01:28,030 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:01:28,090 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:28,094 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:01:28,138 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:01:28,202 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:01:28,208 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:01:28,254 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:28,259 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:01:28,303 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 18:01:28,368 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:01:28,373 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 18:01:28,431 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:28,436 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:01:36,429 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:36,438 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:01:36,479 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:36,484 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:01:36,538 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:36,543 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:01:36,609 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 18:01:36,615 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:01:36,902 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:01:36,906 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:01:38,161 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:01:38,166 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:01:38,230 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randread'])
2016-11-24 18:01:38,235 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 18:01:38,316 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:01:38,324 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:01:38,367 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:01:38,462 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:01:38,479 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:01:39,905 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:39,909 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:01:39,965 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:39,970 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:01:40,289 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034460", "end": "2016-11-24 10:01:40.270445", "failed": true, "rc": 1, "start": "2016-11-24 10:01:40.235985", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:40,289 p=9 u=root |  ...ignoring
2016-11-24 18:01:40,294 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:01:40,607 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.027694", "end": "2016-11-24 10:01:40.587730", "failed": true, "rc": 1, "start": "2016-11-24 10:01:40.560036", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:40,607 p=9 u=root |  ...ignoring
2016-11-24 18:01:40,612 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:01:40,660 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:01:40,724 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 18:01:40,729 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:01:40,788 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:40,792 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:01:40,837 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:01:40,914 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:01:40,919 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:01:40,965 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:40,970 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:01:41,015 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 18:01:41,121 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:01:41,126 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 18:01:41,229 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:41,235 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:01:54,249 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:54,254 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:01:54,297 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:54,301 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:01:54,361 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:54,366 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:01:54,429 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 18:01:54,435 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:01:54,727 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:01:54,731 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:01:55,787 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:01:55,792 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:01:55,857 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randwrite'])
2016-11-24 18:01:55,862 p=9 u=root |  TASK [run-bench : run benchmarks] **********************************************
2016-11-24 18:01:55,942 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:01:55,950 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:01:55,993 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:01:56,086 p=9 u=root |  included: /vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:01:56,103 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:01:57,703 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:01:57,708 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:01:57,765 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:57,770 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:01:58,113 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037072", "end": "2016-11-24 10:01:58.085890", "failed": true, "rc": 1, "start": "2016-11-24 10:01:58.048818", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:58,114 p=9 u=root |  ...ignoring
2016-11-24 18:01:58,119 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:01:58,449 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037123", "end": "2016-11-24 10:01:58.425585", "failed": true, "rc": 1, "start": "2016-11-24 10:01:58.388462", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:01:58,449 p=9 u=root |  ...ignoring
2016-11-24 18:01:58,454 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:01:58,501 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:01:58,570 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 18:01:58,575 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:01:58,635 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:58,640 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:01:58,686 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:01:58,752 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:01:58,757 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:01:58,803 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:01:58,808 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:01:58,853 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 18:01:58,921 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:01:58,926 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 18:01:58,986 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:01:58,991 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:02:06,975 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:02:06,980 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:02:07,024 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:02:07,029 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:02:07,086 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:02:07,090 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:02:07,154 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 18:02:07,159 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:02:07,453 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:02:07,458 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:02:08,556 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:02:08,561 p=9 u=root |  TASK [run-bench : non-parametrized execution] **********************************
2016-11-24 18:02:08,611 p=9 u=root |  skipping: [192.168.140.81] => (item={u'name': u'fio', u'image': u'ivotron/fio', u'args': u'-s -b 4k -d /dev/sdb -r 1 -m $mode', u'devices': [u'/dev/sdb:/dev/sdb'], u'entrypoint': u'genfio-test', u'volumes': [u'/tmp/results:/results'], u'fetch': [u'/tmp/results']}) 
2016-11-24 18:02:08,617 p=9 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-24 18:02:09,879 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:02:09,885 p=9 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-24 18:02:10,176 p=9 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-24 18:02:10,199 p=9 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-24 18:02:11,170 p=9 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-24 18:02:11,175 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 18:02:11,175 p=9 u=root |  192.168.140.81             : ok=78   changed=17   unreachable=0    failed=0   
2016-11-24 18:47:34,595 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-24 18:47:34,651 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-24 18:47:37,073 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:47:37,080 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 18:47:37,133 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 18:47:37,137 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-24 18:47:37,205 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:47:37,215 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:47:37,259 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 18:47:37,321 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 18:47:37,326 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-24 18:47:37,365 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:47:37,370 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 18:47:37,468 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:47:37,499 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:47:37,527 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:47:37,556 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:47:37,566 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:47:37,627 p=9 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 18:47:37,632 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:47:37,727 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:47:37,744 p=9 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:47:39,377 p=9 u=root |  changed: [192.168.140.81]
2016-11-24 18:47:39,382 p=9 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:47:39,437 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:47:39,443 p=9 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:47:39,766 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035454", "end": "2016-11-24 10:47:39.742488", "failed": true, "rc": 1, "start": "2016-11-24 10:47:39.707034", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:47:39,766 p=9 u=root |  ...ignoring
2016-11-24 18:47:39,771 p=9 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:47:40,091 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039626", "end": "2016-11-24 10:47:40.071823", "failed": true, "rc": 1, "start": "2016-11-24 10:47:40.032197", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:47:40,092 p=9 u=root |  ...ignoring
2016-11-24 18:47:40,097 p=9 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:47:40,145 p=9 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:47:40,208 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 18:47:40,213 p=9 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:47:40,269 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:47:40,274 p=9 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:47:40,319 p=9 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:47:40,382 p=9 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:47:40,387 p=9 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:47:40,430 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:47:40,435 p=9 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:47:40,479 p=9 u=root |  TASK [run-bench : add volumes args] ********************************************
2016-11-24 18:47:40,544 p=9 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:47:40,550 p=9 u=root |  TASK [run-bench : set args value] **********************************************
2016-11-24 18:47:40,593 p=9 u=root |  skipping: [192.168.140.81]
2016-11-24 18:47:40,598 p=9 u=root |  TASK [run-bench : set args value when entrypoint is given] *********************
2016-11-24 18:47:40,661 p=9 u=root |  ok: [192.168.140.81]
2016-11-24 18:47:40,666 p=9 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:47:40,956 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "module_stderr": "Shared connection to 192.168.140.81 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/tmp/ansible_Vsguoz/ansible_module_command.py\", line 212, in <module>\r\n    main()\r\n  File \"/tmp/ansible_Vsguoz/ansible_module_command.py\", line 189, in main\r\n    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)\r\n  File \"/tmp/ansible_Vsguoz/ansible_modlib.zip/ansible/module_utils/basic.py\", line 2166, in run_command\r\n  File \"/usr/lib/python2.7/shlex.py\", line 279, in split\r\n    return list(lex)\r\n  File \"/usr/lib/python2.7/shlex.py\", line 269, in next\r\n    token = self.get_token()\r\n  File \"/usr/lib/python2.7/shlex.py\", line 96, in get_token\r\n    raw = self.read_token()\r\n  File \"/usr/lib/python2.7/shlex.py\", line 172, in read_token\r\n    raise ValueError, \"No closing quotation\"\r\nValueError: No closing quotation\r\n", "msg": "MODULE FAILURE"}
2016-11-24 18:47:40,958 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-24 18:47:40,959 p=9 u=root |  192.168.140.81             : ok=19   changed=1    unreachable=0    failed=1   
2016-11-24 18:54:48,010 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-24 18:54:48,066 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-24 18:54:51,068 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:54:51,076 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-24 18:54:51,130 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-24 18:54:51,135 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-24 18:54:51,201 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-24 18:54:51,212 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-24 18:54:51,272 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-24 18:54:51,334 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-24 18:54:51,339 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-24 18:54:51,379 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:54:51,383 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-24 18:54:51,482 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:54:51,511 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:54:51,540 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:54:51,569 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-24 18:54:51,579 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:54:51,641 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-24 18:54:51,646 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:54:51,739 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:54:51,761 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:54:53,478 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:54:53,483 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:54:53,540 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:54:53,545 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:54:53,865 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033160", "end": "2016-11-24 10:54:53.849304", "failed": true, "rc": 1, "start": "2016-11-24 10:54:53.816144", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:54:53,865 p=7 u=root |  ...ignoring
2016-11-24 18:54:53,870 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:54:54,186 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.031519", "end": "2016-11-24 10:54:54.169166", "failed": true, "rc": 1, "start": "2016-11-24 10:54:54.137647", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:54:54,186 p=7 u=root |  ...ignoring
2016-11-24 18:54:54,192 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:54:54,236 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:54:54,298 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 18:54:54,303 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:54:54,373 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:54:54,378 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:54:54,422 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:54:54,484 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:54:54,489 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:54:54,532 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:54:54,537 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:54:54,581 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-24 18:54:54,642 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:54:54,647 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-24 18:54:54,706 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:54:54,711 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:55:07,740 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:07,746 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:55:07,786 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:07,791 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:55:07,842 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:07,847 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:55:07,910 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-24 18:55:07,916 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:55:08,391 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:55:08,397 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:55:09,928 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:55:09,934 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:55:09,999 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-24 18:55:10,008 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:55:10,099 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:55:10,117 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:55:11,504 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:11,509 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:55:11,565 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:11,569 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:55:11,907 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038865", "end": "2016-11-24 10:55:11.882409", "failed": true, "rc": 1, "start": "2016-11-24 10:55:11.843544", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:11,908 p=7 u=root |  ...ignoring
2016-11-24 18:55:11,912 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:55:12,220 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.027442", "end": "2016-11-24 10:55:12.201148", "failed": true, "rc": 1, "start": "2016-11-24 10:55:12.173706", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:12,221 p=7 u=root |  ...ignoring
2016-11-24 18:55:12,226 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:55:12,273 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:55:12,335 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 18:55:12,341 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:55:12,396 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:12,401 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:55:12,445 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:55:12,507 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:55:12,512 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:55:12,555 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:12,560 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:55:12,604 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-24 18:55:12,666 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:55:12,671 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-24 18:55:12,734 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:12,739 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:55:20,750 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:20,755 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:55:20,794 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:20,799 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:55:20,851 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:20,856 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:55:20,929 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-24 18:55:20,935 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:55:21,221 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:55:21,225 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:55:23,043 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:55:23,048 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:55:23,110 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randread'])
2016-11-24 18:55:23,115 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:55:23,207 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:55:23,224 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:55:24,644 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:24,649 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:55:24,703 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:24,708 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:55:25,033 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038599", "end": "2016-11-24 10:55:25.010051", "failed": true, "rc": 1, "start": "2016-11-24 10:55:24.971452", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:25,033 p=7 u=root |  ...ignoring
2016-11-24 18:55:25,038 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:55:25,352 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.026557", "end": "2016-11-24 10:55:25.332365", "failed": true, "rc": 1, "start": "2016-11-24 10:55:25.305808", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:25,353 p=7 u=root |  ...ignoring
2016-11-24 18:55:25,357 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:55:25,401 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:55:25,465 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 18:55:25,470 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:55:25,527 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:25,531 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:55:25,575 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:55:25,638 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:55:25,643 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:55:25,686 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:25,691 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:55:25,735 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-24 18:55:25,797 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:55:25,802 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-24 18:55:25,861 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:25,866 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:55:38,883 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:38,888 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:55:38,932 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:38,937 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:55:38,989 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:38,994 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:55:39,056 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-24 18:55:39,062 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:55:39,369 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:55:39,374 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:55:40,409 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:55:40,416 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-24 18:55:40,479 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randwrite'])
2016-11-24 18:55:40,484 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-24 18:55:40,575 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-24 18:55:40,593 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-24 18:55:42,068 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:42,074 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-24 18:55:42,126 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:42,131 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-24 18:55:42,463 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041852", "end": "2016-11-24 10:55:42.443614", "failed": true, "rc": 1, "start": "2016-11-24 10:55:42.401762", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:42,463 p=7 u=root |  ...ignoring
2016-11-24 18:55:42,468 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-24 18:55:42,833 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.040129", "end": "2016-11-24 10:55:42.816229", "failed": true, "rc": 1, "start": "2016-11-24 10:55:42.776100", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-24 18:55:42,833 p=7 u=root |  ...ignoring
2016-11-24 18:55:42,838 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-24 18:55:42,882 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-24 18:55:42,944 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 18:55:42,949 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-24 18:55:43,006 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:43,011 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-24 18:55:43,055 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-24 18:55:43,117 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-24 18:55:43,123 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-24 18:55:43,166 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:43,171 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-24 18:55:43,215 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-24 18:55:43,277 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-24 18:55:43,282 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-24 18:55:43,341 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:43,346 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-24 18:55:51,325 p=7 u=root |  changed: [192.168.140.81]
2016-11-24 18:55:51,330 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-24 18:55:51,371 p=7 u=root |  skipping: [192.168.140.81]
2016-11-24 18:55:51,376 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-24 18:55:51,428 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:51,433 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-24 18:55:51,542 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-24 18:55:51,549 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-24 18:55:51,877 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-24 18:55:51,882 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-24 18:55:52,903 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-24 18:55:52,909 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-24 18:55:54,299 p=7 u=root |  ok: [192.168.140.81]
2016-11-24 18:55:54,305 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-24 18:55:54,592 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-24 18:55:54,614 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-24 18:55:55,570 p=7 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-24 18:55:55,573 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-24 18:55:55,574 p=7 u=root |  192.168.140.81             : ok=75   changed=17   unreachable=0    failed=0   
2016-11-25 01:13:53,912 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:13:53,968 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:13:56,344 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:13:56,351 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:13:56,409 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {
    "assertion": "benchmarks is defined", 
    "changed": false, 
    "evaluated_to": false, 
    "failed": true
}
2016-11-25 01:13:56,411 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:13:56,411 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-25 01:16:46,206 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:16:46,262 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:16:48,539 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:16:48,546 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:16:48,590 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: [{u'get': [u'/tmp/results'], u'args': u'{{ maxbw }} write,read,randread {{ params[\"limits\"] }} {{ params[\"blksize_kb\"] }} /dev/sdb 2 /tmp/results', u'name': u'fio', u'parameters': {u'blksize_kb': [4, 256, 4096], u'limits': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']}, u'script': u'run-fio.py'}]: 'params' is undefined\n\nThe error appears to have been in '/experiment/vendor/baseliner/roles/run-bench/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- debug: msg='{{ benchmarks | default(\"\") }}'\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2016-11-25 01:16:48,592 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:16:48,593 p=8 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-25 01:17:21,133 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:17:21,189 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:17:23,518 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:17:23,525 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:17:23,570 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: [{u'get': [u'/tmp/results'], u'args': u'{{ maxbw }} write,read,randread {{ params[\"limits\"] | default(\"\") }} {{ params[\"blksize_kb\"] | default(\"\") }} /dev/sdb 2 /tmp/results', u'name': u'fio', u'parameters': {u'blksize_kb': [4, 256, 4096], u'limits': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']}, u'script': u'run-fio.py'}]: 'params' is undefined\n\nThe error appears to have been in '/experiment/vendor/baseliner/roles/run-bench/tasks/main.yml': line 2, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n---\n- debug: msg='{{ benchmarks | default(\"\") }}'\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2016-11-25 01:17:23,572 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:17:23,572 p=7 u=root |  192.168.140.81             : ok=1    changed=0    unreachable=0    failed=1   
2016-11-25 01:18:32,505 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:18:32,560 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:18:34,842 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:18:34,849 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:18:34,905 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": " write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", 
            "get": [
                "/tmp/results"
            ], 
            "name": "fio", 
            "parameters": {
                "blksize_kb": [
                    4, 
                    256, 
                    4096
                ], 
                "limits": [
                    "20,20,60", 
                    "25,25,50", 
                    "10,10,80", 
                    "30,30,40", 
                    "20,20,20", 
                    "30,30,30"
                ]
            }, 
            "script": "run-fio.py"
        }
    ]
}
2016-11-25 01:18:34,910 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:18:34,963 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:18:34,967 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:18:35,039 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:18:35,051 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:18:35,093 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:18:35,162 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:18:35,169 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:18:35,177 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:18:35,219 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:18:35,223 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:18:35,423 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,469 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,498 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,527 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,556 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,585 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,614 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,643 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,676 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,705 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,734 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,763 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,792 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,821 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,850 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,883 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,912 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,941 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:18:35,952 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:18:36,024 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:18:36,025 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:18:36,029 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:18:36,069 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:18:36,075 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:18:36,301 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480036716.13-132044086956458/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480036716.13-132044086956458/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:18:36,303 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:18:36,304 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-25 01:28:53,453 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:28:53,510 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:28:56,014 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:28:56,022 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:28:56,082 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": [
        {
            "args": " write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", 
            "get": [
                "/tmp/results"
            ], 
            "name": "fio", 
            "parameters": {
                "blksize_kb": [
                    4, 
                    256, 
                    4096
                ], 
                "limits": [
                    "20,20,60", 
                    "25,25,50", 
                    "10,10,80", 
                    "30,30,40", 
                    "20,20,20", 
                    "30,30,30"
                ]
            }, 
            "script": "run-fio.py"
        }
    ]
}
2016-11-25 01:28:56,088 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:28:56,141 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:28:56,146 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:28:56,215 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:28:56,226 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:28:56,285 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:28:56,351 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:28:56,366 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:28:56,370 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:28:56,411 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:28:56,416 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:28:56,615 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,644 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,673 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,702 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,731 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,761 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,790 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,823 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,854 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,883 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,913 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,942 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:56,972 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,001 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,030 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,064 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,093 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,122 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:28:57,133 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:28:57,197 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:28:57,206 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:28:57,210 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:28:57,250 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:28:57,256 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:28:57,489 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037337.31-265874900136438/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037337.31-265874900136438/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:28:57,491 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:28:57,492 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-25 01:29:31,690 p=10 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:29:31,745 p=10 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:29:34,086 p=10 u=root |  ok: [192.168.140.81]
2016-11-25 01:29:34,093 p=10 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:29:34,148 p=10 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:29:34,153 p=10 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:29:34,220 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:29:34,232 p=10 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:29:34,274 p=10 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:29:34,351 p=10 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:29:34,352 p=10 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:29:34,356 p=10 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:29:34,395 p=10 u=root |  skipping: [192.168.140.81]
2016-11-25 01:29:34,399 p=10 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:29:34,598 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,627 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,655 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,684 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,713 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,742 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,770 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,799 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,832 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,861 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,890 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,919 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,949 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:34,977 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:35,006 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:35,035 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:35,068 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:35,097 p=10 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:29:35,107 p=10 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:29:35,182 p=10 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:29:35,194 p=10 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:29:35,198 p=10 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:29:35,238 p=10 u=root |  skipping: [192.168.140.81]
2016-11-25 01:29:35,244 p=10 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:29:35,478 p=10 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037375.3-150466418128995/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037375.3-150466418128995/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:29:35,482 p=10 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:29:35,482 p=10 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:30:11,491 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:30:11,546 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:30:13,945 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:30:13,953 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:30:14,008 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:30:14,012 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:30:14,081 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:30:14,092 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:30:14,134 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:30:14,200 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:30:14,213 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:30:14,218 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:30:14,257 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:30:14,262 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:30:14,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,492 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,522 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,554 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,584 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,615 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,645 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,676 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,711 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,742 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,772 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,803 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,834 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,864 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,895 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,926 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,961 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:14,992 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:30:15,003 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:30:15,073 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:30:15,077 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:30:15,081 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:30:15,122 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:30:15,128 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:30:15,181 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "cmd run-fio.py  write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-25 01:30:15,186 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:30:15,413 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037415.24-66868523491592/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037415.24-66868523491592/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:30:15,415 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:30:15,416 p=7 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-25 01:31:31,142 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:31:31,197 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:31:33,589 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:31:33,596 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:31:33,651 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:31:33,655 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:31:33,723 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:31:33,734 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:31:33,778 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:31:33,840 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:31:33,857 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:31:33,861 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:31:33,900 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:31:33,905 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:31:34,106 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,139 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,172 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,205 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,237 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,270 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,303 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,335 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,373 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,405 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,439 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,472 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,504 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,537 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,569 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,607 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,639 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,672 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:31:34,683 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:31:34,755 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:31:34,756 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:31:34,761 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:31:34,801 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:31:34,806 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:31:34,859 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "cmd run-fio.py  write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-25 01:31:34,864 p=8 u=root |  TASK [run-bench : show vars] ***************************************************
2016-11-25 01:31:35,386 p=8 u=root |  changed: [192.168.140.81]
2016-11-25 01:31:35,392 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:31:35,614 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037495.45-66522072502813/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037495.45-66522072502813/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:31:35,617 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:31:35,618 p=8 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-25 01:32:20,499 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:32:20,555 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:32:22,778 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:32:22,785 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:32:22,840 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:32:22,844 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:32:22,914 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:32:22,925 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:32:22,969 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:32:23,031 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:32:23,046 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:32:23,051 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:32:23,090 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:32:23,094 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:32:23,295 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,330 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,362 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,396 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,428 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,462 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,494 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,527 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,565 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,598 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,631 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,664 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,697 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,730 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,762 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,795 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,833 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,867 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:32:23,878 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:32:23,951 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:32:23,952 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:32:23,957 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:32:24,010 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:32:24,016 p=8 u=root |  TASK [run-bench : show vars] ***************************************************
2016-11-25 01:32:24,548 p=8 u=root |  changed: [192.168.140.81]
2016-11-25 01:32:24,553 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:32:24,605 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "foo {u'changed': True, u'end': u'2016-11-24 17:32:24.527646', u'stdout': u'20,20,60', u'cmd': u'echo $limits', u'rc': 0, u'start': u'2016-11-24 17:32:24.524687', u'stderr': u'', u'delta': u'0:00:00.002959', 'stdout_lines': [u'20,20,60'], u'warnings': []}"
}
2016-11-25 01:32:24,611 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:32:24,839 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Usage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037544.67-57485643963813/run-fio.py\", line 21, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037544.67-57485643963813/run-fio.py\", line 21, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:32:24,842 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:32:24,842 p=8 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-25 01:35:01,790 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:35:01,846 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:35:04,103 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:35:04,110 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:35:04,166 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:35:04,170 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:35:04,238 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:35:04,251 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:35:04,294 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:35:04,363 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:35:04,371 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:35:04,375 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:35:04,415 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:35:04,419 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:35:04,628 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,658 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,687 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,716 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,745 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,775 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,803 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,833 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,862 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,895 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,924 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,953 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:04,982 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,011 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,040 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,069 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,102 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,131 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:05,142 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:35:05,215 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:35:05,216 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:35:05,220 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:35:05,260 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:35:05,266 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:35:05,357 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '\"run-fio.py' in expected paths."}
2016-11-25 01:35:05,359 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:35:05,360 p=7 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:35:36,190 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:35:36,245 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:35:38,733 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:35:38,740 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:35:38,799 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:35:38,803 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:35:38,871 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:35:38,883 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:35:38,925 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:35:38,989 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:35:39,002 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:35:39,006 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:35:39,046 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:35:39,050 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:35:39,247 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,275 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,304 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,333 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,361 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,390 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,419 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,448 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,482 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,510 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,539 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,568 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,597 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,625 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,654 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,687 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,716 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,745 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:35:39,755 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:35:39,827 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:35:39,828 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:35:39,832 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:35:39,872 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:35:39,877 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:35:39,967 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '\"run-fio.py' in expected paths."}
2016-11-25 01:35:39,969 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:35:39,970 p=8 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:36:23,188 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:36:23,243 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:36:25,808 p=9 u=root |  ok: [192.168.140.81]
2016-11-25 01:36:25,815 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:36:25,869 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:36:25,874 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:36:25,940 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:36:25,952 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:36:25,994 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:36:26,057 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:36:26,070 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:36:26,075 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:36:26,116 p=9 u=root |  skipping: [192.168.140.81]
2016-11-25 01:36:26,120 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:36:26,316 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,344 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,373 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,416 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,445 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,473 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,502 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,535 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,564 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,593 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,621 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,650 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,679 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,708 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,736 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,769 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,798 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,827 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:36:26,837 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:36:26,901 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:36:26,911 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:36:26,915 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:36:26,955 p=9 u=root |  skipping: [192.168.140.81]
2016-11-25 01:36:26,960 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:36:27,051 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '\"run-fio.py' in expected paths."}
2016-11-25 01:36:27,053 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:36:27,054 p=9 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:37:25,910 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:37:25,967 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:37:28,408 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:37:28,415 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:37:28,469 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:37:28,474 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:37:28,540 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:37:28,551 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:37:28,595 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:37:28,656 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:37:28,672 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:37:28,676 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:37:28,715 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:37:28,719 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:37:28,915 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:28,943 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:28,972 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,000 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,029 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,057 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,086 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,114 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,147 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,176 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,205 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,234 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,262 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,291 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,319 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,348 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,381 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,410 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:37:29,420 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:37:29,493 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:37:29,494 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:37:29,498 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:37:29,537 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:37:29,543 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:37:29,635 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '\"run-fio.py' in expected paths."}
2016-11-25 01:37:29,637 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:37:29,637 p=7 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:37:57,977 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:37:58,033 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:38:00,392 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:38:00,399 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:38:00,454 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:38:00,458 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:38:00,527 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:38:00,539 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:38:00,581 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:38:00,650 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:38:00,661 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:38:00,665 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:38:00,703 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:38:00,708 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:38:00,907 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:00,936 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:00,964 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:00,993 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,022 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,051 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,080 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,109 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,143 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,172 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,201 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,230 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,259 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,288 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,317 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,346 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,380 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,409 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:38:01,419 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:38:01,489 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:38:01,493 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:38:01,498 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:38:01,538 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:38:01,551 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:38:01,642 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '\"./run-fio.py' in expected paths."}
2016-11-25 01:38:01,645 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:38:01,645 p=8 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:39:43,364 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:39:43,420 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:39:45,746 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:39:45,753 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:39:45,807 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:39:45,812 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:39:45,888 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:39:45,899 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:39:45,945 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:39:46,006 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:39:46,020 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:39:46,025 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:39:46,064 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:39:46,068 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:39:46,265 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,294 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,323 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,351 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,380 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,408 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,437 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,466 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,499 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,528 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,557 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,585 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,614 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,643 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,671 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,700 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,733 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,762 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:39:46,772 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:39:46,841 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:39:46,845 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:39:46,850 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:39:46,890 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:39:46,896 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:39:47,123 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Traceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037986.95-223702943908292/run-fio.py\", line 7, in <module>\r\n    print(\"len \" + len(sys.argv))\r\nTypeError: cannot concatenate 'str' and 'int' objects\r\n", "stdout_lines": ["Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480037986.95-223702943908292/run-fio.py\", line 7, in <module>", "    print(\"len \" + len(sys.argv))", "TypeError: cannot concatenate 'str' and 'int' objects"]}
2016-11-25 01:39:47,125 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:39:47,126 p=8 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:40:21,915 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:40:21,973 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:40:24,322 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:40:24,330 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:40:24,388 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:40:24,393 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:40:24,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:40:24,472 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:40:24,516 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:40:24,587 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:40:24,592 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:40:24,597 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:40:24,636 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:40:24,640 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:40:24,846 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:24,874 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:24,903 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:24,932 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:24,960 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:24,989 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,017 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,046 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,108 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,137 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,165 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,194 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,222 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,251 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,279 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,312 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,341 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:25,351 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:40:25,415 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:40:25,425 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:40:25,430 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:40:25,469 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:40:25,475 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:40:25,692 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "Traceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038025.53-217067028716019/run-fio.py\", line 7, in <module>\r\n    print(\"len \" + len(sys.argv))\r\nTypeError: cannot concatenate 'str' and 'int' objects\r\n", "stdout_lines": ["Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038025.53-217067028716019/run-fio.py\", line 7, in <module>", "    print(\"len \" + len(sys.argv))", "TypeError: cannot concatenate 'str' and 'int' objects"]}
2016-11-25 01:40:25,695 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:40:25,695 p=7 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:40:44,396 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:40:44,453 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:40:46,890 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:40:46,897 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:40:46,951 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:40:46,956 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:40:47,024 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:40:47,035 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:40:47,079 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:40:47,143 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:40:47,162 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:40:47,166 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:40:47,206 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:40:47,211 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:40:47,417 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,449 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,480 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,511 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,544 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,576 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,608 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,640 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,675 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,707 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,739 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,772 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,802 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,833 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,865 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,894 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,928 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,957 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:40:47,968 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:40:48,038 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:40:48,042 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:40:48,047 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:40:48,088 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:40:48,094 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:40:48,326 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 5\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480038048.15-139368723092349/run-fio.py', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038048.15-139368723092349/run-fio.py\", line 24, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["len 5", "['/home/issdm/.ansible/tmp/ansible-tmp-1480038048.15-139368723092349/run-fio.py', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038048.15-139368723092349/run-fio.py\", line 24, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:40:48,329 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:40:48,329 p=7 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-25 01:44:19,664 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:44:19,720 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:44:22,254 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:44:22,264 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:44:22,318 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:44:22,323 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:44:22,390 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:44:22,401 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:44:22,444 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:44:22,523 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:44:22,524 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:44:22,528 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:44:22,567 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:44:22,571 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:44:22,771 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,802 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,832 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,862 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,893 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,923 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,954 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:22,988 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,019 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,050 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,080 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,111 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,141 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,171 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,202 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,237 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,268 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,298 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:44:23,309 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:44:23,373 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:44:23,382 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:44:23,388 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:44:23,428 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:44:23,433 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:44:23,489 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "args  write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-25 01:44:23,495 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:44:23,723 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 5\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480038263.55-33839600378424/run-fio.py', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038263.55-33839600378424/run-fio.py\", line 24, in <module>\r\n    device = sys.argv[5]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["len 5", "['/home/issdm/.ansible/tmp/ansible-tmp-1480038263.55-33839600378424/run-fio.py', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038263.55-33839600378424/run-fio.py\", line 24, in <module>", "    device = sys.argv[5]", "IndexError: list index out of range"]}
2016-11-25 01:44:23,725 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:44:23,726 p=7 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-25 01:45:04,170 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:45:04,226 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:45:06,773 p=7 u=root |  ok: [192.168.140.81]
2016-11-25 01:45:06,780 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:45:06,835 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:45:06,840 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:45:06,906 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:45:06,918 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:45:06,960 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:45:07,024 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:45:07,037 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:45:07,041 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:45:07,082 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:45:07,086 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:45:07,310 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,341 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,371 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,401 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,431 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,462 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,492 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,527 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,558 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,589 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,620 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,651 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,684 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,715 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,746 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,781 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,812 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,842 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:45:07,853 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:45:07,927 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:45:07,928 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:45:07,932 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:45:07,972 p=7 u=root |  skipping: [192.168.140.81]
2016-11-25 01:45:07,977 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:45:08,028 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "args foo,bar write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-25 01:45:08,034 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:45:08,251 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480038308.09-90247981945661/run-fio.py', 'foo,bar', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038308.09-90247981945661/run-fio.py\", line 25, in <module>\r\n    runtime = sys.argv[6]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480038308.09-90247981945661/run-fio.py', 'foo,bar', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038308.09-90247981945661/run-fio.py\", line 25, in <module>", "    runtime = sys.argv[6]", "IndexError: list index out of range"]}
2016-11-25 01:45:08,254 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:45:08,254 p=7 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-25 01:46:40,659 p=7 u=root |  ERROR! playbooks must be a list of plays

The error appears to have been in '/experiment/playbook_with_maxbw.yml': line 1, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


maxbw: 53762,46537,355,660
^ here

2016-11-25 01:47:29,468 p=7 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/experiment/playbook_with_maxbw.yml': line 5, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - run-bench
maxbw: "53762,46537,355,660"
^ here

2016-11-25 01:48:37,442 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-25 01:48:37,509 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-25 01:48:39,981 p=8 u=root |  ok: [192.168.140.81]
2016-11-25 01:48:39,989 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-25 01:48:40,043 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-25 01:48:40,047 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-25 01:48:40,115 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-25 01:48:40,126 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-25 01:48:40,169 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-25 01:48:40,233 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-25 01:48:40,246 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-25 01:48:40,252 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-25 01:48:40,292 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:48:40,296 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-25 01:48:40,494 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,525 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,555 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,586 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,616 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,647 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,678 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,708 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,743 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,774 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,805 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,835 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,866 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,896 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,927 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,958 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:40,993 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:41,024 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-25 01:48:41,034 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-25 01:48:41,098 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-25 01:48:41,107 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-25 01:48:41,112 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-25 01:48:41,154 p=8 u=root |  skipping: [192.168.140.81]
2016-11-25 01:48:41,159 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-25 01:48:41,210 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-25 01:48:41,215 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-25 01:48:41,439 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480038521.27-215483961031352/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038521.27-215483961031352/run-fio.py\", line 25, in <module>\r\n    runtime = sys.argv[6]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480038521.27-215483961031352/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480038521.27-215483961031352/run-fio.py\", line 25, in <module>", "    runtime = sys.argv[6]", "IndexError: list index out of range"]}
2016-11-25 01:48:41,441 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-25 01:48:41,442 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:49:05,971 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:49:06,028 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-26 23:49:10,071 p=7 u=root |  ok: [192.168.140.81]
2016-11-26 23:49:10,078 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-26 23:49:10,134 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-26 23:49:10,138 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-26 23:49:10,206 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-26 23:49:10,218 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-26 23:49:10,261 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-26 23:49:11,012 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-26 23:49:11,026 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-26 23:49:11,031 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-26 23:49:11,070 p=7 u=root |  skipping: [192.168.140.81]
2016-11-26 23:49:11,075 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-26 23:49:11,271 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,301 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,334 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,365 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,395 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,434 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,465 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,496 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,526 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,557 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,592 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,623 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,654 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,684 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,715 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,745 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,776 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,807 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:49:11,822 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-26 23:49:11,885 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-26 23:49:11,894 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-26 23:49:11,899 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-26 23:49:11,940 p=7 u=root |  skipping: [192.168.140.81]
2016-11-26 23:49:11,946 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-26 23:49:11,998 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-26 23:49:12,004 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-26 23:49:12,234 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "env {'LANG': 'en_US.UTF-8', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'XDG_RUNTIME_DIR': '/run/user/1001', 'limits': '20,20,60', 'SHLVL': '1', 'SSH_TTY': '/dev/pts/1', 'PWD': '/home/issdm', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games', 'SSH_CLIENT': '192.168.140.2 44080 22', 'LOGNAME': 'issdm', 'USER': 'issdm', 'HOME': '/home/issdm', 'blksize_kb': '4', 'MAIL': '/var/mail/issdm', 'SSH_CONNECTION': '192.168.140.2 44080 192.168.140.81 22', 'XDG_SESSION_ID': '98', '_': '/bin/sh'}\r\nlen 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204152.06-237261578288509/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204152.06-237261578288509/run-fio.py\", line 27, in <module>\r\n    runtime = sys.argv[6]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["env {'LANG': 'en_US.UTF-8', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'XDG_RUNTIME_DIR': '/run/user/1001', 'limits': '20,20,60', 'SHLVL': '1', 'SSH_TTY': '/dev/pts/1', 'PWD': '/home/issdm', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games', 'SSH_CLIENT': '192.168.140.2 44080 22', 'LOGNAME': 'issdm', 'USER': 'issdm', 'HOME': '/home/issdm', 'blksize_kb': '4', 'MAIL': '/var/mail/issdm', 'SSH_CONNECTION': '192.168.140.2 44080 192.168.140.81 22', 'XDG_SESSION_ID': '98', '_': '/bin/sh'}", "len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204152.06-237261578288509/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204152.06-237261578288509/run-fio.py\", line 27, in <module>", "    runtime = sys.argv[6]", "IndexError: list index out of range"]}
2016-11-26 23:49:12,236 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-26 23:49:12,237 p=7 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:54:54,819 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:54:54,874 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-26 23:54:57,164 p=8 u=root |  ok: [192.168.140.81]
2016-11-26 23:54:57,171 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-26 23:54:57,230 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-26 23:54:57,234 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-26 23:54:57,314 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-26 23:54:57,325 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-26 23:54:57,368 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-26 23:54:57,437 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'BLKSIZE_KB', 'value': [4, 256, 4096]})
2016-11-26 23:54:57,446 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'LIMITS', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-26 23:54:57,450 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-26 23:54:57,490 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:54:57,494 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-26 23:54:57,693 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,724 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,755 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,785 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,816 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,846 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,877 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,907 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,942 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:57,972 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,004 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,034 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,065 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,095 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,126 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,156 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,191 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,222 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:54:58,233 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-26 23:54:58,307 p=8 u=root |  ok: [192.168.140.81] => (item=[u'LIMITS', u'20,20,60'])
2016-11-26 23:54:58,307 p=8 u=root |  ok: [192.168.140.81] => (item=[u'BLKSIZE_KB', 4])
2016-11-26 23:54:58,312 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-26 23:54:58,352 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:54:58,357 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-26 23:54:58,412 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results"
}
2016-11-26 23:54:58,418 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-26 23:54:58,647 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "env {'LANG': 'en_US.UTF-8', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'XDG_RUNTIME_DIR': '/run/user/1001', 'LIMITS': '20,20,60', 'SHLVL': '1', 'SSH_TTY': '/dev/pts/1', 'PWD': '/home/issdm', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games', 'SSH_CLIENT': '192.168.140.2 44081 22', 'LOGNAME': 'issdm', 'USER': 'issdm', 'HOME': '/home/issdm', 'BLKSIZE_KB': '4', 'MAIL': '/var/mail/issdm', 'SSH_CONNECTION': '192.168.140.2 44081 192.168.140.81 22', 'XDG_SESSION_ID': '99', '_': '/bin/sh'}\r\nlen 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204498.47-134300180516770/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nUsage:\r\n  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)\r\n  2 - modes list (comma-separated; one per container)\r\n  3 - limits list (comma-separated; one per container)\r\n  4 - blksize\r\n  5 - device\r\n  6 - runtime\r\n  7 - output_folder\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204498.47-134300180516770/run-fio.py\", line 27, in <module>\r\n    runtime = sys.argv[6]\r\nIndexError: list index out of range\r\n", "stdout_lines": ["env {'LANG': 'en_US.UTF-8', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'XDG_RUNTIME_DIR': '/run/user/1001', 'LIMITS': '20,20,60', 'SHLVL': '1', 'SSH_TTY': '/dev/pts/1', 'PWD': '/home/issdm', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games', 'SSH_CLIENT': '192.168.140.2 44081 22', 'LOGNAME': 'issdm', 'USER': 'issdm', 'HOME': '/home/issdm', 'BLKSIZE_KB': '4', 'MAIL': '/var/mail/issdm', 'SSH_CONNECTION': '192.168.140.2 44081 192.168.140.81 22', 'XDG_SESSION_ID': '99', '_': '/bin/sh'}", "len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204498.47-134300180516770/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Usage:", "  1 - maxbw list (comma-separated; one per mode: read,write,randread,randwrite)", "  2 - modes list (comma-separated; one per container)", "  3 - limits list (comma-separated; one per container)", "  4 - blksize", "  5 - device", "  6 - runtime", "  7 - output_folder", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204498.47-134300180516770/run-fio.py\", line 27, in <module>", "    runtime = sys.argv[6]", "IndexError: list index out of range"]}
2016-11-26 23:54:58,653 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-26 23:54:58,653 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:56:48,257 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:56:48,312 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-26 23:56:53,241 p=8 u=root |  ok: [192.168.140.81]
2016-11-26 23:56:53,248 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-26 23:56:53,307 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-26 23:56:53,312 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-26 23:56:53,381 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-26 23:56:53,392 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-26 23:56:53,436 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-26 23:56:53,511 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-26 23:56:53,519 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-26 23:56:53,524 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-26 23:56:53,569 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:56:53,573 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-26 23:56:53,773 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,803 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,834 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,864 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,895 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,926 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,956 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:53,991 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,022 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,053 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,084 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,114 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,145 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,175 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,206 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,242 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,272 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,303 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:56:54,314 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-26 23:56:54,376 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-26 23:56:54,387 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-26 23:56:54,391 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-26 23:56:54,444 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:56:54,450 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-26 23:56:54,502 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread \"$limits\" \"$blksize_kb\" /dev/sdb 2 /tmp/results"
}
2016-11-26 23:56:54,507 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-26 23:56:54,745 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 8\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204614.57-270104921220522/run-fio.py', '53762,46537,355,660', 'write,read,randread', '', '', '/dev/sdb', '2', '/tmp/results']\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204614.57-270104921220522/run-fio.py\", line 34, in <module>\r\n    sum += limit\r\nTypeError: unsupported operand type(s) for +=: 'int' and 'str'\r\n", "stdout_lines": ["len 8", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204614.57-270104921220522/run-fio.py', '53762,46537,355,660', 'write,read,randread', '', '', '/dev/sdb', '2', '/tmp/results']", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204614.57-270104921220522/run-fio.py\", line 34, in <module>", "    sum += limit", "TypeError: unsupported operand type(s) for +=: 'int' and 'str'"]}
2016-11-26 23:56:54,747 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-26 23:56:54,747 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:58:20,575 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:58:20,630 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-26 23:58:23,115 p=7 u=root |  ok: [192.168.140.81]
2016-11-26 23:58:23,122 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-26 23:58:23,182 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-26 23:58:23,187 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-26 23:58:23,254 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-26 23:58:23,266 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-26 23:58:23,309 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-26 23:58:23,380 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-26 23:58:23,389 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-26 23:58:23,394 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-26 23:58:23,434 p=7 u=root |  skipping: [192.168.140.81]
2016-11-26 23:58:23,438 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-26 23:58:23,646 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,676 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,708 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,739 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,770 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,801 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,832 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,862 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,898 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,929 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:23,960 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,002 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,034 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,065 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,096 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,132 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,163 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,194 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:24,205 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-26 23:58:24,266 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-26 23:58:24,277 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-26 23:58:24,282 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-26 23:58:24,321 p=7 u=root |  skipping: [192.168.140.81]
2016-11-26 23:58:24,327 p=7 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-26 23:58:24,384 p=7 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread ${limits} ${blksize_kb}\" /dev/sdb 2 /tmp/results"
}
2016-11-26 23:58:24,389 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-26 23:58:24,600 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 2, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "/bin/sh: 1: Syntax error: Unterminated quoted string\r\n", "stdout_lines": ["/bin/sh: 1: Syntax error: Unterminated quoted string"]}
2016-11-26 23:58:24,603 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-26 23:58:24,603 p=7 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:58:44,496 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:58:44,552 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-26 23:58:47,225 p=8 u=root |  ok: [192.168.140.81]
2016-11-26 23:58:47,232 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-26 23:58:47,292 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-26 23:58:47,297 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-26 23:58:47,364 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-26 23:58:47,375 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-26 23:58:47,419 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-26 23:58:47,483 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-26 23:58:47,497 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-26 23:58:47,501 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-26 23:58:47,542 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:58:47,546 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-26 23:58:47,750 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,781 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,811 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,842 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,872 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,903 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,934 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:47,969 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,000 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,031 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,062 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,092 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,123 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,154 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,184 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,220 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,250 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,281 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-26 23:58:48,292 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-26 23:58:48,369 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-26 23:58:48,370 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-26 23:58:48,374 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-26 23:58:48,415 p=8 u=root |  skipping: [192.168.140.81]
2016-11-26 23:58:48,421 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-26 23:58:48,472 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "args 53762,46537,355,660 write,read,randread ${limits} ${blksize_kb} /dev/sdb 2 /tmp/results"
}
2016-11-26 23:58:48,477 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-26 23:58:48,710 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204728.53-155294957342231/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204728.53-155294957342231/run-fio.py\", line 11, in <module>\r\n    raise Exception(\"Bad num of arguments\")\r\nException: Bad num of arguments\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204728.53-155294957342231/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204728.53-155294957342231/run-fio.py\", line 11, in <module>", "    raise Exception(\"Bad num of arguments\")", "Exception: Bad num of arguments"]}
2016-11-26 23:58:48,713 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-26 23:58:48,713 p=8 u=root |  192.168.140.81             : ok=24   changed=0    unreachable=0    failed=1   
2016-11-26 23:59:59,716 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-26 23:59:59,771 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:00:02,014 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 00:00:02,021 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:00:02,077 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:00:02,081 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:00:02,152 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:00:02,163 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:00:02,207 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:00:02,268 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:00:02,283 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:00:02,288 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:00:02,329 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:00:02,334 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:00:02,538 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,570 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,601 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,632 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,662 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,694 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,725 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,756 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,791 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,823 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,854 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,889 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,921 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,953 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:02,985 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:03,021 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:03,057 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:03,089 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:03,099 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:00:03,162 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:00:03,171 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:00:03,176 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:00:03,218 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:00:03,223 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 00:00:03,765 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 00:00:03,770 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:00:04,011 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204803.84-42456224243085/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204803.84-42456224243085/run-fio.py\", line 11, in <module>\r\n    raise Exception(\"Bad num of arguments\")\r\nException: Bad num of arguments\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204803.84-42456224243085/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204803.84-42456224243085/run-fio.py\", line 11, in <module>", "    raise Exception(\"Bad num of arguments\")", "Exception: Bad num of arguments"]}
2016-11-27 00:00:04,015 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:00:04,015 p=8 u=root |  192.168.140.81             : ok=24   changed=1    unreachable=0    failed=1   
2016-11-27 00:00:34,410 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:00:34,466 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:00:37,244 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 00:00:37,251 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:00:37,305 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:00:37,310 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:00:37,377 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:00:37,388 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:00:37,433 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:00:37,497 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:00:37,512 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:00:37,517 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:00:37,561 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:00:37,565 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:00:37,767 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,800 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,832 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,865 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,902 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,935 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:37,972 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,005 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,047 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,080 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,114 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,147 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,180 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,213 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,250 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,283 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,316 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,349 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:00:38,360 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:00:38,433 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:00:38,434 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:00:38,438 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:00:38,479 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:00:39,202 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 00:00:39,851 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 00:00:39,857 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 00:00:39,914 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": {
        "changed": true, 
        "cmd": "echo 53762,46537,355,660 write,read,randread ${limits} ${blksize_kb} /dev/sdb 2 /tmp/results", 
        "delta": "0:00:00.003674", 
        "end": "2016-11-26 16:00:39.831857", 
        "rc": 0, 
        "start": "2016-11-26 16:00:39.828183", 
        "stderr": "", 
        "stdout": "53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results", 
        "stdout_lines": [
            "53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
        ], 
        "warnings": []
    }
}
2016-11-27 00:00:39,920 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:00:40,153 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480204839.98-215569158974274/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204839.98-215569158974274/run-fio.py\", line 11, in <module>\r\n    raise Exception(\"Bad num of arguments\")\r\nException: Bad num of arguments\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480204839.98-215569158974274/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480204839.98-215569158974274/run-fio.py\", line 11, in <module>", "    raise Exception(\"Bad num of arguments\")", "Exception: Bad num of arguments"]}
2016-11-27 00:00:40,156 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:00:40,156 p=8 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 00:03:17,126 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:03:17,182 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:03:19,815 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 00:03:19,822 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:03:19,880 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:03:19,885 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:03:19,958 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:03:19,969 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:03:20,013 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:03:20,077 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:03:20,090 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:03:20,095 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:03:20,136 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:03:20,140 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:03:20,341 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,370 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,399 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,427 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,456 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,485 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,513 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,546 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,575 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,604 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,632 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,661 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,689 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,735 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,763 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,796 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,825 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,854 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:03:20,864 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:03:20,935 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:03:20,940 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:03:20,944 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:03:21,006 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:03:21,012 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:03:21,244 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "failed": true, "rc": 1, "stderr": "Shared connection to 192.168.140.81 closed.\r\n", "stdout": "len 6\r\n['/home/issdm/.ansible/tmp/ansible-tmp-1480205001.07-268092686738644/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']\r\nTraceback (most recent call last):\r\n  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480205001.07-268092686738644/run-fio.py\", line 11, in <module>\r\n    raise Exception(\"Bad num of arguments\")\r\nException: Bad num of arguments\r\n", "stdout_lines": ["len 6", "['/home/issdm/.ansible/tmp/ansible-tmp-1480205001.07-268092686738644/run-fio.py', '53762,46537,355,660', 'write,read,randread', '/dev/sdb', '2', '/tmp/results']", "Traceback (most recent call last):", "  File \"/home/issdm/.ansible/tmp/ansible-tmp-1480205001.07-268092686738644/run-fio.py\", line 11, in <module>", "    raise Exception(\"Bad num of arguments\")", "Exception: Bad num of arguments"]}
2016-11-27 00:03:21,246 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:03:21,247 p=8 u=root |  192.168.140.81             : ok=23   changed=0    unreachable=0    failed=1   
2016-11-27 00:55:04,456 p=12 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:55:04,511 p=12 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:55:07,056 p=12 u=root |  ok: [192.168.140.81]
2016-11-27 00:55:07,063 p=12 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:55:07,127 p=12 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:55:07,132 p=12 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:55:07,204 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:55:07,218 p=12 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:55:07,263 p=12 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:55:07,348 p=12 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:55:07,363 p=12 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:55:07,368 p=12 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:55:07,418 p=12 u=root |  skipping: [192.168.140.81]
2016-11-27 00:55:07,424 p=12 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:55:07,631 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,662 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,692 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,723 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,754 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,785 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,815 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,846 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,881 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,912 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,943 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:07,973 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,003 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,034 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,064 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,093 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,126 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,155 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:55:08,166 p=12 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:55:08,228 p=12 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:55:08,240 p=12 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:55:08,245 p=12 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:55:08,285 p=12 u=root |  skipping: [192.168.140.81]
2016-11-27 00:55:08,291 p=12 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:55:08,363 p=12 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 00:55:08,379 p=12 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 00:55:09,422 p=12 u=root |  changed: [192.168.140.81]
2016-11-27 00:55:09,427 p=12 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:55:09,976 p=12 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.003932", "end": "2016-11-26 16:55:09.946523", "failed": true, "rc": 127, "start": "2016-11-26 16:55:09.942591", "stderr": "/bin/sh: 1: run-fio.py: not found", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 00:55:09,979 p=12 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:55:09,979 p=12 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 00:55:56,368 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:55:56,427 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:56:12,986 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 00:56:12,993 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:56:13,059 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:56:13,063 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:56:13,135 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:56:13,146 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:56:13,194 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:56:13,263 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:56:13,277 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:56:13,283 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:56:13,325 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:56:13,330 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:56:13,529 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,558 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,591 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,621 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,649 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,679 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,708 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,743 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,772 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,801 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,830 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,859 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,887 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,917 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,945 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:13,979 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:14,008 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:14,037 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:56:14,047 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:56:14,142 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:56:14,143 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:56:14,148 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:56:14,195 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 00:56:14,201 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:56:14,273 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 00:56:14,289 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 00:56:15,301 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 00:56:15,312 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:56:15,840 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.004491", "end": "2016-11-26 16:56:15.815918", "failed": true, "rc": 127, "start": "2016-11-26 16:56:15.811427", "stderr": "/bin/sh: 1: /tmp/run-fio.py: not found", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 00:56:15,843 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:56:15,843 p=8 u=root |  192.168.140.81             : ok=25   changed=0    unreachable=0    failed=1   
2016-11-27 00:56:57,331 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:56:57,389 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:56:59,771 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 00:56:59,779 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:56:59,842 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:56:59,847 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:56:59,916 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:56:59,928 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:56:59,977 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:57:00,046 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:57:00,059 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:57:00,065 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:57:00,112 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:57:00,117 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:57:00,347 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,375 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,404 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,432 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,489 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,518 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,548 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,585 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,615 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,645 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,676 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,706 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,736 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,767 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,797 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,832 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,862 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:57:00,873 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:57:00,937 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:57:00,951 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:57:00,957 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:57:00,999 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:57:01,004 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:57:01,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 00:57:01,095 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 00:57:02,082 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 00:57:02,087 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:57:02,665 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.027541", "end": "2016-11-26 16:57:02.640223", "failed": true, "rc": 1, "start": "2016-11-26 16:57:02.612682", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 34, in <module>\n    sum += limit\nTypeError: unsupported operand type(s) for +=: 'int' and 'str'", "stdout": "len 8\n['/tmp/run-fio.py', '53762,46537,355,660', 'write,read,randread', '20,20,60', '4', '/dev/sdb', '2', '/tmp/results']", "stdout_lines": ["len 8", "['/tmp/run-fio.py', '53762,46537,355,660', 'write,read,randread', '20,20,60', '4', '/dev/sdb', '2', '/tmp/results']"], "warnings": []}
2016-11-27 00:57:02,667 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:57:02,667 p=7 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 00:58:22,317 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:58:22,374 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:58:24,760 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 00:58:24,767 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:58:24,823 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:58:24,827 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:58:24,901 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:58:24,913 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:58:24,962 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:58:25,025 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:58:25,038 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:58:25,042 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:58:25,084 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:58:25,089 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:58:25,290 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:26,963 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:26,992 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,021 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,050 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,107 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,136 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,169 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,198 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,227 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,256 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,285 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,314 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,343 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,372 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,405 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,435 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:58:27,445 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:58:27,508 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:58:27,519 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:58:27,524 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:58:27,565 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:58:27,569 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:58:29,088 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 00:58:29,103 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 00:58:30,127 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 00:58:30,133 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:58:32,008 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.327435", "end": "2016-11-26 16:58:31.982184", "failed": true, "rc": 1, "start": "2016-11-26 16:58:30.654749", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 56, in <module>\n    raise Exception(\"Limit should be a percentage of max bandwidth\")\nException: Limit should be a percentage of max bandwidth", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 00:58:32,011 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:58:32,011 p=7 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 00:59:46,512 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 00:59:46,569 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 00:59:50,137 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 00:59:50,144 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 00:59:50,202 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 00:59:50,206 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 00:59:50,274 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 00:59:50,285 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 00:59:50,337 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 00:59:50,398 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 00:59:50,412 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 00:59:50,417 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 00:59:50,457 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:59:50,461 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 00:59:50,671 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,700 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,729 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,758 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,790 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,819 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,848 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,877 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,906 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,935 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,964 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:50,992 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,026 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,055 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,084 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,113 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,142 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,171 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 00:59:51,181 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 00:59:51,242 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 00:59:51,254 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 00:59:51,259 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 00:59:51,298 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 00:59:51,303 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:59:51,369 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 00:59:51,389 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 00:59:52,415 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 00:59:52,420 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 00:59:54,125 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.173160", "end": "2016-11-26 16:59:54.104858", "failed": true, "rc": 1, "start": "2016-11-26 16:59:52.931698", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 63, in <module>\n    limitkb = (limit_percentage / 100.0) * maxbw[1]\nTypeError: can't multiply sequence by non-int of type 'float'", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 00:59:54,128 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 00:59:54,128 p=7 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 01:00:28,748 p=13 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:00:28,804 p=13 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:00:43,119 p=13 u=root |  ok: [192.168.140.81]
2016-11-27 01:00:43,126 p=13 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:00:43,180 p=13 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:00:43,185 p=13 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:00:43,256 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:00:43,267 p=13 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:00:43,312 p=13 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:00:43,376 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:00:43,391 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:00:43,395 p=13 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:00:43,436 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 01:00:43,440 p=13 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:00:43,639 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,667 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,696 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,724 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,753 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,782 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,810 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,858 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,887 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,916 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,944 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:43,973 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,002 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,031 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,059 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,093 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,122 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,151 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:00:44,161 p=13 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:00:44,237 p=13 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:00:44,240 p=13 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:00:44,244 p=13 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:00:44,285 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 01:00:44,290 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:00:44,357 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:00:44,372 p=13 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:00:45,332 p=13 u=root |  changed: [192.168.140.81]
2016-11-27 01:00:45,338 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:00:46,977 p=13 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.159565", "end": "2016-11-26 17:00:46.955175", "failed": true, "rc": 1, "start": "2016-11-26 17:00:45.795610", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 75, in <module>\n    cname = \"fio-\" + k\nTypeError: cannot concatenate 'str' and 'int' objects", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 01:00:46,980 p=13 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:00:46,981 p=13 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 01:01:16,179 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:01:16,234 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:01:18,725 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:01:18,733 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:01:18,792 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:01:18,797 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:01:18,864 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:01:18,875 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:01:18,919 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:01:18,990 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:01:19,009 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:01:19,014 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:01:19,054 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:01:19,059 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:01:19,261 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,290 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,318 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,347 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,376 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,404 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,433 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,461 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,495 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,534 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,563 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,591 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,620 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,649 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,678 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,706 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,740 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,768 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:01:19,779 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:01:19,847 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:01:19,852 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:01:19,857 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:01:19,897 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:01:19,902 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:01:19,968 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:01:19,983 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:01:20,998 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:01:21,008 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:01:22,736 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.199289", "end": "2016-11-26 17:01:22.710344", "failed": true, "rc": 1, "start": "2016-11-26 17:01:21.511055", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 85, in <module>\n    ).format(flags, cname, device, limitkb, results_folder, img, args, mode)\nIndexError: tuple index out of range", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 01:01:22,739 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:01:22,739 p=8 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 01:02:14,521 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:02:14,578 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:02:17,093 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:02:17,100 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:02:17,162 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:02:17,166 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:02:17,235 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:02:17,247 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:02:17,290 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:02:17,368 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:02:17,369 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:02:17,373 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:02:17,414 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:02:17,418 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:02:17,619 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,647 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,676 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,705 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,733 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,762 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,791 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,820 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,853 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,886 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,918 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,947 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:17,976 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,009 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,038 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,075 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,104 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,133 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:18,143 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:02:18,208 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:02:18,218 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:02:18,222 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:02:18,265 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:02:18,270 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:02:18,337 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:02:18,356 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:02:19,367 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:02:19,372 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:02:21,123 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.195591", "end": "2016-11-26 17:02:21.098094", "failed": true, "rc": 1, "start": "2016-11-26 17:02:19.902503", "stderr": "invalid argument \"$/dev/sdb:kb\" for --device-write-bps: bad format for device path: $/dev/sdb:kb\nSee 'docker create --help'.\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 86, in <module>\n    sh(cmd, shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command 'docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps $/dev/sdb:$9307kb  --device-read-bps $/dev/sdb:$9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write' returned non-zero exit status 125", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 01:02:21,126 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:02:21,126 p=8 u=root |  192.168.140.81             : ok=25   changed=1    unreachable=0    failed=1   
2016-11-27 01:02:51,275 p=13 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:02:51,348 p=13 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:02:53,603 p=13 u=root |  ok: [192.168.140.81]
2016-11-27 01:02:53,610 p=13 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:02:53,665 p=13 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:02:53,669 p=13 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:02:53,739 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:02:53,750 p=13 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:02:53,794 p=13 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:02:53,856 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:02:53,870 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:02:53,874 p=13 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:02:53,913 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 01:02:53,917 p=13 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:02:54,120 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,150 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,179 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,207 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,236 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,265 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,294 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,323 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,351 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,385 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,414 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,443 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,471 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,500 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,529 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,558 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,591 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,620 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:02:54,630 p=13 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:02:54,702 p=13 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:02:54,703 p=13 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:02:54,708 p=13 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:02:54,768 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 01:02:54,773 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:02:54,840 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:02:54,855 p=13 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:02:55,846 p=13 u=root |  changed: [192.168.140.81]
2016-11-27 01:02:55,851 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:03:13,009 p=13 u=root |  changed: [192.168.140.81]
2016-11-27 01:03:13,014 p=13 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:03:13,066 p=13 u=root |  ok: [192.168.140.81]
2016-11-27 01:03:13,071 p=13 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:03:13,123 p=13 u=root |  fatal: [192.168.140.81]: FAILED! => {"failed": true, "msg": "Unexpected templating type error occurred on ({{ output_folder + \"/\" + item.key + \"/\" + item.value }}): coercing to Unicode: need string or buffer, int found"}
2016-11-27 01:03:13,126 p=13 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:03:13,126 p=13 u=root |  192.168.140.81             : ok=27   changed=2    unreachable=0    failed=1   
2016-11-27 01:06:30,403 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:06:30,458 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:06:32,993 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:06:33,000 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:06:33,057 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:06:33,062 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:06:33,130 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:06:33,142 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:06:33,185 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:06:33,259 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:06:33,264 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:06:33,268 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:06:33,309 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:06:33,314 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:06:33,510 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,539 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,567 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,596 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,624 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,653 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,681 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,714 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,743 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,772 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,801 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,844 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,873 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,902 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,930 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,964 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:33,992 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:34,022 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:06:34,032 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:06:34,093 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:06:34,104 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:06:34,109 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:06:34,166 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:06:34,171 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:06:34,242 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:06:34,257 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:06:35,199 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:06:35,204 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:06:52,362 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:06:52,367 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:06:52,419 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:06:52,424 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:06:52,487 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:06:52,498 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:06:52,504 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:06:52,807 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:06:52,813 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:06:52,858 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:06:52,925 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:06:52,937 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:06:52,941 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:06:52,982 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:06:52,987 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:06:53,053 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:06:53,069 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:06:53,592 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:06:53,597 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:11,041 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:07:11,046 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:07:11,098 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:11,103 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:07:11,166 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:07:11,178 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:07:11,183 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:07:11,479 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:07:11,484 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:07:11,531 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:07:11,593 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:07:11,604 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:07:11,608 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:07:11,648 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:07:11,653 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:11,735 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:07:11,750 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:07:12,268 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:12,273 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:29,305 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:07:29,310 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:07:29,362 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:29,367 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:07:29,440 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:07:29,443 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'10,10,80'})
2016-11-27 01:07:29,449 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:07:30,766 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:07:30,771 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:07:30,816 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:07:30,879 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:07:30,890 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,40'])
2016-11-27 01:07:30,895 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:07:30,934 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:07:30,943 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:31,013 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:07:31,028 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:07:31,541 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:31,546 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:48,622 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:07:48,627 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:07:48,680 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:48,685 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:07:48,747 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:07:48,760 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,40'})
2016-11-27 01:07:48,766 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:07:49,052 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:07:49,057 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:07:49,102 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:07:49,165 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:07:49,176 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,20'])
2016-11-27 01:07:49,181 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:07:49,221 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:07:49,226 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:07:49,292 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:07:49,307 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:07:49,826 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:07:49,831 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:06,938 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:08:06,943 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:08:07,001 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:07,006 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:08:07,070 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:08:07,082 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,20'})
2016-11-27 01:08:07,088 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:08:07,388 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:08:07,393 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:08:07,437 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:08:07,499 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:08:07,510 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 01:08:07,516 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:08:07,556 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:08:07,561 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:07,630 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:08:07,646 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:08:08,181 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:08,186 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:25,385 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:08:25,390 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:08:25,442 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:25,447 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:08:25,525 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:08:25,526 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 01:08:25,531 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:08:25,830 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:08:25,835 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:08:25,880 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:08:25,951 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:08:25,954 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:08:25,959 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:08:25,999 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:08:26,004 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:26,070 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:08:26,085 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:08:26,625 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:26,630 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:43,614 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:08:43,619 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:08:43,672 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:43,677 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:08:43,744 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:08:43,757 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:08:43,763 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:08:44,053 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:08:44,059 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:08:44,108 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:08:44,174 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:08:44,184 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:08:44,189 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:08:44,234 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:08:44,239 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:08:44,314 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:08:44,330 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:08:44,850 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:08:44,855 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:02,085 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:09:02,090 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:09:02,145 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:02,150 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:09:02,241 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:09:02,242 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:09:02,247 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:09:02,539 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:09:02,544 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:09:02,590 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:09:02,657 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:09:02,666 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:09:02,671 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:09:02,711 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:09:02,716 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:02,783 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:09:02,798 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:09:03,336 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:03,341 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:20,642 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:09:20,648 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:09:20,701 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:20,706 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:09:20,775 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:09:20,782 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'10,10,80'})
2016-11-27 01:09:20,788 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:09:21,082 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:09:21,091 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:09:21,136 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:09:21,199 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:09:21,211 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,40'])
2016-11-27 01:09:21,215 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:09:21,256 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:09:21,261 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:21,329 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:09:21,344 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:09:21,880 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:21,885 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:39,092 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:09:39,097 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:09:39,150 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:39,155 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:09:39,232 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:09:39,235 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,40'})
2016-11-27 01:09:39,241 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:09:39,534 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:09:39,539 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:09:39,583 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:09:39,650 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:09:39,666 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,20'])
2016-11-27 01:09:39,670 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:09:39,711 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:09:39,716 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:39,781 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:09:39,796 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:09:40,322 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:40,327 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:57,546 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:09:57,551 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:09:57,604 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:57,609 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:09:57,675 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:09:57,690 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,20'})
2016-11-27 01:09:57,696 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:09:57,997 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:09:58,002 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:09:58,047 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:09:58,119 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:09:58,136 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 01:09:58,140 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:09:58,185 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:09:58,190 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:09:58,256 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:09:58,271 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:09:58,810 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:09:58,816 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:10:17,289 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:10:17,294 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:10:17,348 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:10:17,353 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:10:17,429 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 01:10:17,430 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:10:17,435 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:10:17,742 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:10:17,747 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:10:17,792 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:10:17,856 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:10:17,867 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:10:17,872 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:10:17,916 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:10:17,921 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:10:17,988 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:10:18,004 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:10:18,550 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:10:18,555 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:10:47,866 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:10:47,871 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:10:47,925 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:10:47,930 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:10:47,994 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:10:48,012 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:10:48,018 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:10:48,316 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:10:48,321 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:10:48,445 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:10:48,514 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:10:48,526 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:10:48,530 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:10:48,571 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:10:48,576 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:10:48,647 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:10:48,662 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:10:49,194 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:10:49,199 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:11:22,698 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:11:22,702 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:11:22,757 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:11:22,763 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:11:22,828 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:11:22,840 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:11:22,846 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:11:23,138 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:11:23,143 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:11:23,189 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:11:23,257 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:11:23,266 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:11:23,271 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:11:23,313 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:11:23,318 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:11:23,389 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:11:23,404 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:11:23,933 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:11:23,938 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:11:48,304 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:11:48,310 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:11:48,364 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:11:48,369 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:11:48,439 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:11:48,450 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'10,10,80'})
2016-11-27 01:11:48,455 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:11:48,751 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:11:48,756 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:11:48,803 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:11:48,875 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:11:48,879 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,40'])
2016-11-27 01:11:48,884 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:11:48,925 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:11:48,930 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:11:48,999 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:11:49,014 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:11:49,541 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:11:49,547 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:12:28,437 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:12:28,443 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:12:28,497 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:12:28,502 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:12:28,565 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:12:28,578 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,40'})
2016-11-27 01:12:28,583 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:12:28,874 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:12:28,879 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:12:28,937 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:12:29,013 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:12:29,021 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,20'])
2016-11-27 01:12:29,026 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:12:29,067 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:12:29,072 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:12:29,142 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:12:29,157 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:12:29,691 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:12:29,696 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:13:46,972 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:13:46,978 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:13:47,032 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:13:47,037 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:13:47,099 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:13:47,112 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,20'})
2016-11-27 01:13:47,118 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:13:47,418 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:13:47,423 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:13:47,469 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:13:47,543 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:13:47,548 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 01:13:47,552 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:13:47,594 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 01:13:47,599 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:13:47,665 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:13:47,680 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:13:48,216 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:13:48,222 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:14:43,233 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 01:14:43,238 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:14:43,292 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:14:43,297 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:14:43,372 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:14:43,374 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 01:14:43,380 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:14:43,677 p=7 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:14:43,682 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:14:43,735 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 01:14:45,199 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 01:14:45,205 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 01:14:45,502 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 01:14:45,525 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 01:14:47,648 p=7 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 01:14:47,652 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:14:47,652 p=7 u=root |  192.168.140.81             : ok=151  changed=37   unreachable=0    failed=0   
2016-11-27 01:37:35,119 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:37:35,179 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:37:37,693 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:37:37,700 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:37:37,754 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:37:37,759 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:37:37,846 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:37:37,857 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:37:37,900 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:37:37,964 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:37:37,978 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:37:37,982 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:37:38,029 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:37:38,033 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:37:38,239 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,260 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,282 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,304 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,326 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,348 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,370 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,392 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,418 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,440 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,462 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,484 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,507 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,528 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,551 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,572 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,594 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,620 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:37:38,630 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:37:38,697 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:37:38,704 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:37:38,709 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:37:38,749 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:37:38,754 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:37:38,821 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:37:38,832 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:37:39,794 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:37:39,799 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:37:56,921 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:37:56,926 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:37:56,998 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:37:57,015 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:37:57,072 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:37:57,077 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:37:57,151 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:37:57,159 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:37:57,165 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:37:57,474 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:37:57,480 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:37:58,712 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:37:58,718 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:37:58,789 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:37:58,798 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:37:58,802 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:37:58,843 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:37:58,848 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:37:58,914 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:37:58,942 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:37:59,479 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:37:59,484 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:16,343 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:38:16,348 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:38:16,418 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:38:16,435 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:38:16,492 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:16,497 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:38:16,571 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:38:16,585 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:38:16,591 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:38:16,900 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:38:16,905 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:38:18,066 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:38:18,071 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:38:18,148 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:38:18,151 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:38:18,156 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:38:18,196 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:38:18,201 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:18,271 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:38:18,282 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:38:18,820 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:18,825 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:35,919 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:38:35,924 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:38:35,998 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:38:36,015 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:38:36,071 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:36,076 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:38:36,142 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:38:36,156 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'10,10,80'})
2016-11-27 01:38:36,162 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:38:36,489 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:38:36,494 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:38:37,545 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:38:37,551 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:38:37,622 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:38:37,626 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,40'])
2016-11-27 01:38:37,632 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:38:37,674 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:38:37,678 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:37,752 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:38:37,764 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:38:38,285 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:38,290 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:55,206 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:38:55,210 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:38:55,287 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:38:55,304 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:38:55,361 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:55,366 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:38:55,432 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:38:55,447 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,40'})
2016-11-27 01:38:55,453 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:38:55,746 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:38:55,751 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:38:57,047 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:38:57,053 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:38:57,122 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:38:57,132 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,20'])
2016-11-27 01:38:57,137 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:38:57,180 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:38:57,185 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:38:57,253 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:38:57,264 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:38:57,785 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:38:57,790 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:14,722 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:39:14,730 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:39:14,800 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:39:14,818 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:39:14,875 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:14,880 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:39:14,948 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:39:14,962 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,20'})
2016-11-27 01:39:14,967 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:39:15,781 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:39:15,787 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:39:17,004 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:39:17,013 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:39:17,085 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:39:17,089 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 01:39:17,094 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:39:17,136 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:39:17,140 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:17,207 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:39:17,218 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:39:17,747 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:17,753 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:34,945 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:39:34,953 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:39:35,029 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:39:35,045 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:39:35,103 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:35,108 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:39:35,174 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:39:35,188 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 01:39:35,194 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:39:35,492 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:39:35,497 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:39:36,546 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:39:36,555 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:39:36,619 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:39:36,631 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:39:36,636 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:39:36,680 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:39:36,684 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:36,752 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:39:36,764 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:39:37,285 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:37,290 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:54,400 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:39:54,405 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:39:54,477 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:39:54,494 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:39:54,550 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:54,556 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:39:54,622 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:39:54,637 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:39:54,643 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:39:54,948 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:39:54,953 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:39:55,984 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:39:55,990 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:39:56,063 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:39:56,072 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:39:56,076 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:39:56,116 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:39:56,121 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:39:56,192 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:39:56,203 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:39:56,798 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:39:56,802 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:14,052 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:40:14,057 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:40:14,130 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:40:14,148 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:40:14,205 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:14,210 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:40:14,294 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:40:14,294 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:40:14,300 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:40:14,607 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:40:14,612 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:40:15,674 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:40:15,681 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:40:15,746 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:40:15,756 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:40:15,761 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:40:15,803 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:40:15,808 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:15,878 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:40:15,889 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:40:16,423 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:16,429 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:33,747 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:40:33,753 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:40:33,824 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:40:33,842 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:40:33,909 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:33,915 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:40:33,994 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:40:33,997 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'10,10,80'})
2016-11-27 01:40:34,002 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:40:34,323 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:40:34,328 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:40:35,380 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:40:35,385 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:40:35,449 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:40:35,460 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,40'])
2016-11-27 01:40:35,465 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:40:35,506 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:40:35,511 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:35,577 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:40:35,590 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:40:36,138 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:36,144 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:53,152 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:40:53,157 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:40:53,229 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:40:53,246 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:40:53,305 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:53,310 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:40:53,394 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:40:53,397 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,40'})
2016-11-27 01:40:53,402 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:40:53,705 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:40:53,710 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:40:54,762 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:40:54,767 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:40:54,835 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:40:54,843 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,20'])
2016-11-27 01:40:54,848 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:40:54,894 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:40:54,898 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:40:54,966 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:40:54,977 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:40:55,527 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:40:55,532 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:41:12,577 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:41:12,582 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:41:12,654 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:41:12,670 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:41:12,730 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:41:12,735 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:41:12,807 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:41:12,826 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,20'})
2016-11-27 01:41:12,832 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:41:13,148 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:41:13,153 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:41:14,198 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:41:14,203 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:41:14,278 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 01:41:14,279 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 01:41:14,284 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:41:14,325 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:41:14,333 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:41:14,400 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:41:14,411 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:41:14,965 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:41:14,971 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:41:32,216 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:41:32,221 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:41:32,295 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:41:32,312 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:41:32,372 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:41:32,377 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:41:32,445 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 01:41:32,465 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 01:41:32,470 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:41:32,788 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:41:32,794 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:41:33,883 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:41:33,888 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:41:33,953 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:41:33,968 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:41:33,972 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:41:34,017 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:41:34,022 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:41:34,090 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:41:34,102 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:41:34,651 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:41:34,657 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:42:03,736 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:42:03,741 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:42:03,817 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:42:03,834 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:42:03,898 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:42:03,903 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:42:03,986 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:42:03,989 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:42:03,995 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:42:04,300 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:42:04,305 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:42:05,363 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:42:05,369 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:42:05,436 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:42:05,445 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:42:05,450 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:42:05,496 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:42:05,501 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:42:05,568 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:42:05,580 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:42:06,137 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:42:06,142 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:42:43,254 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:42:43,259 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:42:43,331 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:42:43,347 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:42:43,405 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:42:43,410 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:42:43,494 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 01:42:43,499 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:42:43,504 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:42:43,829 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:42:43,834 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:42:44,914 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:42:44,920 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:42:44,991 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 01:42:44,996 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:42:45,000 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:42:45,043 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:42:45,048 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:42:45,114 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:42:45,126 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:42:45,663 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:42:45,668 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:42:56,461 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:10.471288", "end": "2016-11-26 17:42:56.436328", "failed": true, "rc": 1, "start": "2016-11-26 17:42:45.965040", "stderr": "Error response from daemon: Get https://registry-1.docker.io/v2/ivotron/fio/manifests/latest: Get https://auth.docker.io/token?account=ljishen&scope=repository%3Aivotron%2Ffio%3Apull&service=registry.docker.io: dial tcp: lookup auth.docker.io on 192.168.140.2:53: read udp 192.168.140.81:43291->192.168.140.2:53: i/o timeout\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 35, in <module>\n    sh(['docker', 'pull', 'ivotron/fio'])\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command '['docker', 'pull', 'ivotron/fio']' returned non-zero exit status 1", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 01:42:56,464 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 01:42:56,464 p=8 u=root |  192.168.140.81             : ok=151  changed=42   unreachable=0    failed=1   
2016-11-27 01:57:38,517 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 01:57:38,572 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 01:57:40,948 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:57:40,955 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 01:57:41,018 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 01:57:41,022 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 01:57:41,091 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 01:57:41,103 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 01:57:41,147 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 01:57:41,214 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 01:57:41,225 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'25,25,50', u'10,10,80', u'30,30,40', u'20,20,20', u'30,30,30']})
2016-11-27 01:57:41,230 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 01:57:41,269 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:57:41,274 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 01:57:41,494 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,516 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,538 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,560 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,582 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,604 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,626 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,648 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,670 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,696 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,718 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,741 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,762 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,784 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,806 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,828 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,850 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,872 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 01:57:41,886 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:57:41,951 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:57:41,960 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 01:57:41,965 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:57:42,011 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:57:42,016 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:57:42,083 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:57:42,095 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:57:43,625 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:57:43,630 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:58:00,753 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:58:00,758 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:58:00,836 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:58:00,852 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:58:00,913 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:58:00,918 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:58:00,999 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:58:01,007 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 01:58:01,012 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:58:01,498 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:58:01,504 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:58:02,755 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:58:02,760 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:58:02,823 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:58:02,834 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'25,25,50'])
2016-11-27 01:58:02,839 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:58:02,882 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:58:02,887 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:58:02,953 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:58:02,964 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:58:03,504 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:58:03,510 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:58:20,344 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 01:58:20,348 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 01:58:20,419 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 01:58:20,436 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 01:58:20,495 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:58:20,500 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 01:58:20,583 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 01:58:20,585 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'25,25,50'})
2016-11-27 01:58:20,591 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 01:58:20,886 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 01:58:20,891 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 01:58:21,926 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 01:58:21,931 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 01:58:22,003 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 01:58:22,013 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'10,10,80'])
2016-11-27 01:58:22,018 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 01:58:22,059 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 01:58:22,064 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:58:22,131 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 01:58:22,142 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 01:58:22,657 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 01:58:22,662 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 01:58:27,165 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 02:01:36,711 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:01:36,766 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:01:39,308 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:01:39,315 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:01:39,375 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:01:39,379 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:01:39,447 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:01:39,458 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:01:39,502 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:01:39,571 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:01:39,583 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:01:39,588 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:01:39,627 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:01:39,632 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:01:39,747 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,769 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,791 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,813 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,834 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,856 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:01:39,866 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:01:39,943 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:01:39,943 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:01:39,948 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:01:39,987 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:01:39,991 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:01:40,062 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:01:40,073 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:01:41,031 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:01:41,036 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:01:58,344 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:01:58,349 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:01:58,421 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:01:58,438 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:01:58,494 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:01:58,499 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:01:58,578 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:01:58,580 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:01:58,587 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:01:58,890 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:01:58,896 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:02:00,112 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:02:00,119 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:02:00,189 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:02:00,200 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:02:00,205 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:02:00,246 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:02:00,251 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:00,318 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:02:00,329 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:02:00,842 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:00,847 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:17,837 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:02:17,842 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:02:17,912 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:02:17,929 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:02:17,986 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:17,991 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:02:18,057 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:02:18,073 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:02:18,078 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:02:19,395 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:02:19,400 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:02:20,464 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:02:20,469 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:02:20,532 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:02:20,555 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:02:20,559 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:02:20,610 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:02:20,615 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:20,681 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:02:20,692 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:02:21,212 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:21,218 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:38,369 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:02:38,375 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:02:38,452 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:02:38,472 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:02:38,541 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:38,547 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:02:38,622 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:02:38,640 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:02:38,646 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:02:39,411 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:02:39,416 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:02:40,614 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:02:40,620 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:02:40,693 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:02:40,704 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:02:40,709 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:02:40,755 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:02:40,760 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:40,833 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:02:40,846 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:02:41,380 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:41,385 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:02:58,535 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:02:58,539 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:02:58,610 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:02:58,627 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:02:58,686 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:02:58,692 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:02:58,757 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:02:58,772 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:02:58,778 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:02:59,073 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:02:59,078 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:03:00,275 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:03:00,281 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:03:00,347 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:03:00,358 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:03:00,363 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:03:00,403 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:03:00,408 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:03:00,473 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:03:00,485 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:03:00,996 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:03:01,001 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:03:30,013 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:03:30,018 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:03:30,088 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:03:30,105 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:03:30,162 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:03:30,167 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:03:30,241 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:03:30,254 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:03:30,260 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:03:30,579 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:03:30,584 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:03:31,910 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:03:31,915 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:03:31,988 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:03:31,992 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:03:31,997 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:03:32,037 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 02:03:32,042 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:03:32,109 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:03:32,120 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:03:32,634 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:03:32,639 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:04:21,295 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 02:04:21,300 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:04:21,371 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:04:21,388 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:04:21,450 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:04:21,455 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:04:21,528 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:04:21,543 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:04:21,549 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:04:21,853 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:04:21,858 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:04:23,185 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:04:23,190 p=9 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 02:04:24,542 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 02:04:24,548 p=9 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 02:04:24,858 p=9 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:04:24,881 p=9 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 02:04:25,633 p=9 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 02:04:25,637 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:04:25,637 p=9 u=root |  192.168.140.81             : ok=67   changed=19   unreachable=0    failed=0   
2016-11-27 02:08:59,656 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:08:59,711 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:09:02,023 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:09:02,031 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:09:02,085 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:09:02,090 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:09:02,157 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:09:02,169 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:09:02,212 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:09:02,280 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:09:02,288 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:09:02,293 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:09:02,332 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:09:02,337 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:09:02,446 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,470 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,492 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,514 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,536 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,558 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:09:02,568 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:09:02,634 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:09:02,643 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:09:02,647 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:09:02,687 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:09:02,692 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:09:02,763 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:09:02,775 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:09:03,762 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:03,767 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:09:04,272 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:04,278 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:09:04,334 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:09:04,339 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:09:21,367 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:21,372 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:09:21,444 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:09:21,464 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:09:21,523 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:09:21,528 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:09:21,607 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:09:21,616 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:09:21,623 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:09:22,109 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:09:22,115 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:09:23,550 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:09:23,555 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:09:23,619 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:09:23,629 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:09:23,633 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:09:23,674 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:09:23,682 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:09:23,750 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:09:23,762 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:09:24,278 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:09:24,283 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:09:24,576 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:24,581 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:09:24,636 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:09:24,642 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:09:41,679 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:41,684 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:09:41,753 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:09:41,773 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:09:41,834 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:09:41,839 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:09:41,903 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:09:41,918 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:09:41,924 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:09:42,213 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:09:42,221 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:09:43,310 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:09:43,315 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:09:43,380 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:09:43,391 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:09:43,396 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:09:43,435 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:09:43,439 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:09:43,513 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:09:43,525 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:09:44,045 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:09:44,051 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:09:44,339 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:09:44,345 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:09:44,399 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:09:44,404 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:01,585 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:01,590 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:10:01,661 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:10:01,680 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:10:01,737 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:01,742 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:10:01,811 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:10:01,825 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:10:01,831 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:10:02,122 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:10:02,128 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:10:03,341 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:10:03,346 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:10:03,412 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:10:03,421 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:10:03,426 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:10:03,469 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:10:03,474 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:03,545 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:10:03,557 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:10:04,075 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:04,081 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:10:04,387 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:04,392 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:10:04,450 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:10:04,455 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:21,824 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:21,829 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:10:21,907 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:10:21,932 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:10:21,991 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:21,998 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:10:22,070 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:10:22,085 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:10:22,092 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:10:22,400 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:10:22,407 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:10:23,497 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:10:23,503 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:10:23,566 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:10:23,578 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:10:23,583 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:10:23,623 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:10:23,629 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:23,706 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:10:23,720 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:10:24,248 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:24,253 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:10:24,559 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:24,567 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:10:24,630 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:10:24,635 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:53,994 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:53,999 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:10:54,072 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:10:54,092 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:10:54,148 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:54,153 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:10:54,219 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:10:54,233 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:10:54,239 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:10:54,540 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:10:54,545 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:10:55,582 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:10:55,588 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:10:55,705 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:10:55,716 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:10:55,721 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:10:55,816 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:10:55,821 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:10:55,996 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:10:56,009 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:10:56,529 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:10:56,535 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:10:56,847 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:10:56,853 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:10:56,912 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:10:56,917 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:11:51,800 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:11:51,808 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:11:51,890 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:11:51,916 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:11:51,977 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:11:51,984 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:11:52,060 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:11:52,075 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:11:52,082 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:11:53,878 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:11:53,883 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:11:55,095 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:11:55,101 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 02:11:56,529 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:11:56,539 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 02:11:56,871 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:11:56,899 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 02:11:57,510 p=8 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 02:11:57,514 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:11:57,514 p=8 u=root |  192.168.140.81             : ok=79   changed=26   unreachable=0    failed=0   
2016-11-27 02:14:03,084 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:14:03,148 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:14:05,567 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:14:05,575 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:14:05,630 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:14:05,635 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:14:05,708 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:14:05,723 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:14:05,777 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:14:05,841 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:14:05,855 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:14:05,861 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:14:05,902 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:14:05,907 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:14:06,027 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,057 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,085 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,113 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,140 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,167 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:06,179 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:14:06,254 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:14:06,255 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:14:06,259 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:14:06,303 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:14:06,308 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:14:06,384 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:14:06,395 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:14:07,399 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:14:07,409 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:14:07,944 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:14:07,950 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:14:08,015 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:14:08,020 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:14:24,481 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 02:14:54,324 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:14:54,380 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:14:56,848 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:14:56,856 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:14:56,914 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:14:56,918 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:14:56,998 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:14:57,010 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:14:57,055 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:14:57,121 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:14:57,139 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:14:57,143 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:14:57,184 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:14:57,189 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:14:57,301 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,325 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,348 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,370 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,393 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,415 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:14:57,425 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:14:57,487 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:14:57,497 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:14:57,503 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:14:57,544 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:14:57,549 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:14:57,621 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:14:57,651 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:14:58,612 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:14:58,621 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:14:59,168 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:14:59,174 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:14:59,229 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:14:59,234 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:01,230 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.701554", "end": "2016-11-26 18:15:01.206278", "failed": true, "rc": 1, "start": "2016-11-26 18:14:59.504724", "stderr": "Error response from daemon: Conflict. The name \"/fio-1\" is already in use by container 264ae4a3d68b452f5d4c30078feda7151db0313b2171c668a019d37785cb092e. You have to remove (or rename) that container to be able to reuse that name.\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 97, in <module>\n    sh(cmd, shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command 'docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write' returned non-zero exit status 1", "stdout": "maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['20', '20', '60']\nbs=4\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results", "stdout_lines": ["maxbw=['53762', '46537', '355', '660']", "modes=['write', 'read', 'randread']", "limits=['20', '20', '60']", "bs=4", "device=/dev/sdb", "runtime=2", "output_folder=/tmp/results"], "warnings": []}
2016-11-27 02:15:01,232 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:15:01,233 p=8 u=root |  192.168.140.81             : ok=15   changed=1    unreachable=0    failed=1   
2016-11-27 02:15:14,747 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:15:14,813 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:15:17,127 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:17,135 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:15:17,197 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:15:17,204 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:15:17,277 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:15:17,291 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:15:17,335 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:15:17,407 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:15:17,417 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:15:17,423 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:15:17,463 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:15:17,468 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:15:17,573 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,597 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,619 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,645 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,668 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,691 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:15:17,701 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:15:17,763 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:15:17,774 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:15:17,780 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:15:17,820 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:15:17,826 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:17,902 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:15:17,914 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:15:18,894 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:18,899 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:15:19,439 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:15:19,444 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:15:19,511 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:15:19,519 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:36,386 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:15:36,607 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:15:36,664 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['20', '20', '60']\nbs=4\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:10752kb  --device-read-bps /dev/sdb:10752kb  --volume /tmp/results/mode/read/limit/10752:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:213kb  --device-read-bps /dev/sdb:213kb  --volume /tmp/results/mode/randread/limit/213:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m randread"
}
2016-11-27 02:15:36,669 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:15:36,741 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:15:36,763 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:15:36,819 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:36,824 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:15:36,889 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:15:36,905 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:15:36,911 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:15:37,233 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:15:37,239 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:15:38,552 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:15:38,557 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:15:38,621 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:15:38,633 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:15:38,638 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:15:38,678 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:15:38,687 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:38,763 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:15:38,775 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:15:39,312 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:39,319 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:15:39,618 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:15:39,628 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:15:39,684 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:15:39,690 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:56,588 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:15:56,593 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:15:56,648 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['30', '30', '30']\nbs=4\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:13961kb  --device-read-bps /dev/sdb:13961kb  --volume /tmp/results/mode/write/limit/13961:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:16128kb  --device-read-bps /dev/sdb:16128kb  --volume /tmp/results/mode/read/limit/16128:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:106kb  --device-read-bps /dev/sdb:106kb  --volume /tmp/results/mode/randread/limit/106:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m randread"
}
2016-11-27 02:15:56,653 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:15:56,722 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:15:56,744 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:15:56,800 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:56,805 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:15:56,871 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:15:56,889 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:15:56,894 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:15:57,209 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:15:57,214 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:15:58,406 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:15:58,412 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:15:58,476 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:15:58,488 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:15:58,493 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:15:58,535 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:15:58,540 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:15:58,621 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:15:58,636 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:15:59,164 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:15:59,170 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:15:59,472 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:15:59,478 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:15:59,558 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:15:59,564 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:16:16,835 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:16:16,841 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:16:16,897 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['20', '20', '60']\nbs=256\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:10752kb  --device-read-bps /dev/sdb:10752kb  --volume /tmp/results/mode/read/limit/10752:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:213kb  --device-read-bps /dev/sdb:213kb  --volume /tmp/results/mode/randread/limit/213:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m randread"
}
2016-11-27 02:16:16,903 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:16:16,981 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:16:17,009 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:16:17,065 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:16:17,071 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:16:17,142 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:16:17,156 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:16:17,163 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:16:17,482 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:16:17,491 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:16:18,640 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:16:18,645 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:16:18,723 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:16:18,724 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:16:18,729 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:16:18,771 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:16:18,777 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:16:18,859 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:16:18,874 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:16:19,409 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:16:19,415 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:16:19,728 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:16:19,733 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:16:19,791 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:16:19,796 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:16:37,007 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:16:37,013 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:16:37,072 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['30', '30', '30']\nbs=256\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:13961kb  --device-read-bps /dev/sdb:13961kb  --volume /tmp/results/mode/write/limit/13961:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:16128kb  --device-read-bps /dev/sdb:16128kb  --volume /tmp/results/mode/read/limit/16128:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:106kb  --device-read-bps /dev/sdb:106kb  --volume /tmp/results/mode/randread/limit/106:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m randread"
}
2016-11-27 02:16:37,077 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:16:37,153 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:16:37,178 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:16:37,238 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:16:37,243 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:16:37,312 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:16:37,326 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:16:37,332 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:16:37,629 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:16:37,635 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:16:38,754 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:16:38,760 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:16:38,849 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:16:38,851 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:16:38,860 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:16:38,901 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:16:38,907 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:16:38,988 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:16:39,004 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:16:39,522 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:16:39,528 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:16:39,828 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:16:39,833 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:16:39,894 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:16:39,900 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:17:12,133 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:17:12,138 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:17:12,195 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['20', '20', '60']\nbs=4096\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:10752kb  --device-read-bps /dev/sdb:10752kb  --volume /tmp/results/mode/read/limit/10752:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:213kb  --device-read-bps /dev/sdb:213kb  --volume /tmp/results/mode/randread/limit/213:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m randread"
}
2016-11-27 02:17:12,204 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:17:12,295 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:17:12,321 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:17:12,378 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:17:12,383 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:17:12,449 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:17:12,469 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:17:12,474 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:17:12,774 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:17:12,784 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:17:13,980 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:17:13,986 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:17:14,054 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:17:14,065 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:17:14,070 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:17:14,114 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:17:14,119 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:17:14,190 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:17:14,202 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:17:14,748 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:17:14,754 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:17:15,148 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:17:15,153 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:17:15,209 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:17:15,215 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:18:16,338 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:18:16,343 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:18:16,402 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output maxbw=['53762', '46537', '355', '660']\nmodes=['write', 'read', 'randread']\nlimits=['30', '30', '30']\nbs=4096\ndevice=/dev/sdb\nruntime=2\noutput_folder=/tmp/results\ndocker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:13961kb  --device-read-bps /dev/sdb:13961kb  --volume /tmp/results/mode/write/limit/13961:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:16128kb  --device-read-bps /dev/sdb:16128kb  --volume /tmp/results/mode/read/limit/16128:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:106kb  --device-read-bps /dev/sdb:106kb  --volume /tmp/results/mode/randread/limit/106:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4096k -m randread"
}
2016-11-27 02:18:16,408 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:18:16,481 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:18:16,502 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:18:16,560 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:18:16,566 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:18:16,634 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:18:16,649 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:18:16,655 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:18:16,981 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:18:16,986 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:18:18,046 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:18:18,054 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 02:18:19,468 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:18:19,474 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 02:18:19,778 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:18:19,822 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 02:18:20,626 p=8 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 02:18:20,629 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:18:20,630 p=8 u=root |  192.168.140.81             : ok=85   changed=25   unreachable=0    failed=0   
2016-11-27 02:18:44,965 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:18:45,021 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:18:47,627 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:18:47,634 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:18:47,689 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:18:47,694 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:18:47,765 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:18:47,776 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:18:47,830 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:18:47,917 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:18:47,939 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:18:47,945 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:18:47,992 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:18:47,998 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:18:48,115 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,143 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,170 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,197 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,225 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,252 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:18:48,264 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:18:48,326 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:18:48,338 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:18:48,343 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:18:48,383 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:18:48,389 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:18:48,470 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:18:48,485 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:18:49,530 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:18:49,541 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:18:50,096 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:18:50,105 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:18:50,183 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:18:50,189 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:18:50,542 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.032067", "end": "2016-11-26 18:18:50.518125", "failed": true, "rc": 1, "start": "2016-11-26 18:18:50.486058", "stderr": "rm: missing operand\nTry 'rm --help' for more information.\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 39, in <module>\n    sh(['rm', '-r', output_folder+\"/*\"], shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command '['rm', '-r', '/tmp/results/*']' returned non-zero exit status 1", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:18:50,546 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:18:50,546 p=8 u=root |  192.168.140.81             : ok=15   changed=2    unreachable=0    failed=1   
2016-11-27 02:20:06,120 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:20:06,176 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:20:08,612 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:20:08,619 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:20:08,673 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:20:08,678 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:20:08,746 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:20:08,757 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:20:08,801 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:20:08,869 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:20:08,882 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:20:08,888 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:20:08,930 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:20:08,935 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:20:09,058 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,089 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,111 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,134 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,156 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,178 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:20:09,188 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:20:09,250 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:20:09,261 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:20:09,265 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:20:09,305 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:20:09,310 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:20:09,391 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:20:09,403 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:20:10,412 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:20:10,418 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:20:10,951 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:20:10,957 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:20:11,023 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:20:11,028 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:20:11,365 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.031372", "end": "2016-11-26 18:20:11.345799", "failed": true, "rc": 1, "start": "2016-11-26 18:20:11.314427", "stderr": "rm: missing operand\nTry 'rm --help' for more information.\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 39, in <module>\n    sh(['rm', '-fr', output_folder], shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command '['rm', '-fr', '/tmp/results']' returned non-zero exit status 1", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:20:11,368 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:20:11,368 p=8 u=root |  192.168.140.81             : ok=15   changed=2    unreachable=0    failed=1   
2016-11-27 02:23:54,523 p=11 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:23:54,579 p=11 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:23:56,931 p=11 u=root |  ok: [192.168.140.81]
2016-11-27 02:23:56,938 p=11 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:23:56,993 p=11 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:23:56,998 p=11 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:23:57,068 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:23:57,080 p=11 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:23:57,131 p=11 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:23:57,221 p=11 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:23:57,222 p=11 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:23:57,226 p=11 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:23:57,273 p=11 u=root |  skipping: [192.168.140.81]
2016-11-27 02:23:57,278 p=11 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:23:57,394 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,419 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,441 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,464 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,486 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,508 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:23:57,518 p=11 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:23:57,580 p=11 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:23:57,592 p=11 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:23:57,598 p=11 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:23:57,638 p=11 u=root |  skipping: [192.168.140.81]
2016-11-27 02:23:57,643 p=11 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:23:57,718 p=11 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:23:57,730 p=11 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:23:58,721 p=11 u=root |  changed: [192.168.140.81]
2016-11-27 02:23:58,727 p=11 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:23:59,797 p=11 u=root |  changed: [192.168.140.81]
2016-11-27 02:23:59,802 p=11 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:23:59,863 p=11 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:23:59,869 p=11 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:24:00,207 p=11 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 53762,46537,355,660 write,read,randread $limits $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:00.029371", "end": "2016-11-26 18:24:00.179043", "failed": true, "rc": 1, "start": "2016-11-26 18:24:00.149672", "stderr": "rm: cannot remove ‘/tmp/results/mode/read/limit/5376/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/read/limit/13440/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/read/limit/16128/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/read/limit/10752/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/213/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/71/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/142/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/177/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/284/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/randread/limit/106/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/write/limit/13961/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/write/limit/11634/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/write/limit/4653/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/mode/write/limit/9307/out.json’: Permission denied\nrm: cannot remove ‘/tmp/results/out.json’: Permission denied\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 39, in <module>\n    sh(\"rm -fr {}/*\".format(output_folder), shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command 'rm -fr /tmp/results/*' returned non-zero exit status 1", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:24:00,209 p=11 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:24:00,210 p=11 u=root |  192.168.140.81             : ok=15   changed=2    unreachable=0    failed=1   
2016-11-27 02:24:21,976 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:24:22,035 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:24:24,597 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:24:24,604 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:24:24,677 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:24:24,682 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:24:24,752 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:24:24,763 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:24:24,819 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:24:24,892 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 02:24:24,897 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': [u'20,20,60', u'30,30,30']})
2016-11-27 02:24:24,903 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:24:24,943 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:24:24,948 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:24:25,068 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,095 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,122 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,150 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,177 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,205 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:24:25,216 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:24:25,288 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:24:25,291 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:24:25,297 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:24:25,341 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:24:25,346 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:24:25,426 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:24:25,440 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:24:26,512 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:24:26,521 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:24:27,090 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:24:27,097 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:24:27,158 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:24:27,164 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:24:44,240 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:24:44,245 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:24:44,301 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:10752kb  --device-read-bps /dev/sdb:10752kb  --volume /tmp/results/mode/read/limit/10752:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:213kb  --device-read-bps /dev/sdb:213kb  --volume /tmp/results/mode/randread/limit/213:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m randread"
}
2016-11-27 02:24:44,307 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:24:44,387 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:24:44,414 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:24:44,470 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:24:44,476 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:24:44,542 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:24:44,556 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:24:44,564 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:24:45,082 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:24:45,088 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:24:46,471 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:24:46,476 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:24:46,539 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 02:24:46,549 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:24:46,554 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:24:46,593 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:24:46,598 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:24:46,676 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:24:46,691 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:24:47,199 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:24:47,204 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:24:47,520 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:24:47,526 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:24:47,587 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:24:47,593 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:04,456 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:04,461 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:04,518 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:13961kb  --device-read-bps /dev/sdb:13961kb  --volume /tmp/results/mode/write/limit/13961:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:16128kb  --device-read-bps /dev/sdb:16128kb  --volume /tmp/results/mode/read/limit/16128:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:106kb  --device-read-bps /dev/sdb:106kb  --volume /tmp/results/mode/randread/limit/106:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m randread"
}
2016-11-27 02:25:04,524 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:25:04,601 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:25:04,627 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:25:04,683 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:25:04,689 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:25:04,758 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 02:25:04,772 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:25:04,779 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:25:05,076 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:25:05,082 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:25:06,166 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:25:06,171 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:25:06,236 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:25:06,245 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:25:06,254 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:25:06,295 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:25:06,299 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:06,380 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:25:06,395 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:25:06,930 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:25:06,936 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:25:07,306 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:07,311 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:07,415 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:25:07,421 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:24,463 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:24,468 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:24,524 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:9307kb  --device-read-bps /dev/sdb:9307kb  --volume /tmp/results/mode/write/limit/9307:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m write\ndocker create --entrypoint=genfio-test  --name=fio-2  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:10752kb  --device-read-bps /dev/sdb:10752kb  --volume /tmp/results/mode/read/limit/10752:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m read\ndocker create --entrypoint=genfio-test  --name=fio-3  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:213kb  --device-read-bps /dev/sdb:213kb  --volume /tmp/results/mode/randread/limit/213:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 256k -m randread"
}
2016-11-27 02:25:24,530 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:25:24,609 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:25:24,635 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:25:24,695 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:25:24,701 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:25:24,786 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:25:24,790 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:25:24,796 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:25:25,132 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:25:25,141 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:25:26,452 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:25:26,457 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:25:26,536 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 02:25:26,545 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:25:26,550 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:25:26,598 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:25:26,603 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:26,682 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:25:26,694 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:25:27,271 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:27,277 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:25:27,572 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:27,579 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:27,639 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 256 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:25:27,646 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:44,639 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:44,644 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:44,700 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output "
}
2016-11-27 02:25:44,705 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:25:44,775 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:25:44,796 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:25:44,852 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:25:44,857 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:25:44,925 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 02:25:44,944 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:25:44,950 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:25:47,195 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:25:47,202 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:25:48,375 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:25:48,385 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:25:48,467 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'20,20,60'])
2016-11-27 02:25:48,467 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:25:48,473 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:25:48,514 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:25:48,520 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:25:48,607 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:25:48,619 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:25:49,158 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:25:49,165 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:25:49,462 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:25:49,469 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:25:49,525 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 20,20,60 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:25:49,531 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:26:18,618 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:26:18,623 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:26:18,689 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output "
}
2016-11-27 02:26:18,694 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:26:18,771 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:26:18,792 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:26:18,860 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:26:18,865 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:26:18,944 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:26:18,963 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'20,20,60'})
2016-11-27 02:26:18,969 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:26:19,279 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:26:19,289 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:26:20,480 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:26:20,488 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:26:20,559 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4096])
2016-11-27 02:26:20,570 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits', u'30,30,30'])
2016-11-27 02:26:20,576 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:26:20,618 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:26:20,624 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:26:20,709 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 02:26:20,727 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 02:26:21,266 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:26:21,271 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 02:26:21,592 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:26:21,598 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:26:21,654 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 53762,46537,355,660 write,read,randread 30,30,30 4096 /dev/sdb 2 /tmp/results"
}
2016-11-27 02:26:21,659 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:27:22,802 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:27:22,807 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 02:27:22,864 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "output "
}
2016-11-27 02:27:22,869 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:27:22,948 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:27:22,969 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:27:23,041 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:27:23,046 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:27:23,141 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 02:27:23,162 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits', 'value': u'30,30,30'})
2016-11-27 02:27:23,168 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:27:23,517 p=8 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 02:27:23,522 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:27:24,563 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:27:24,568 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 02:27:25,907 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:27:25,913 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 02:27:26,206 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:27:26,229 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 02:27:26,854 p=8 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 02:27:26,859 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:27:26,859 p=8 u=root |  192.168.140.81             : ok=85   changed=27   unreachable=0    failed=0   
2016-11-27 02:44:42,920 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:44:42,976 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:44:45,373 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:44:45,380 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:44:45,434 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:44:45,438 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:44:45,504 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:44:45,516 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:44:45,561 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:44:45,625 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 02:44:45,629 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:44:45,668 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:44:45,673 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:44:45,775 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:44:45,805 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:44:45,835 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:44:45,863 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:44:45,875 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:44:45,937 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-27 02:44:45,943 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:44:46,051 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:44:46,068 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:44:48,064 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:44:48,069 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:44:48,132 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:44:48,137 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:44:48,481 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037985", "end": "2016-11-26 18:44:48.458267", "failed": true, "rc": 1, "start": "2016-11-26 18:44:48.420282", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:44:48,482 p=8 u=root |  ...ignoring
2016-11-27 02:44:48,487 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:44:48,807 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035857", "end": "2016-11-26 18:44:48.790095", "failed": true, "rc": 1, "start": "2016-11-26 18:44:48.754238", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:44:48,808 p=8 u=root |  ...ignoring
2016-11-27 02:44:48,813 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:44:48,858 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:44:48,921 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 02:44:48,927 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:44:48,984 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:44:48,989 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:44:49,034 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:44:49,096 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:44:49,101 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:44:49,146 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:44:49,151 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:44:49,195 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:44:49,258 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:44:49,264 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:44:49,324 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:44:49,330 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:46:01,939 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:46:01,944 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:46:01,984 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:46:01,989 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:46:02,062 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:46:02,098 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:46:02,154 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:46:02,159 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:46:02,225 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 02:46:02,231 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:46:02,792 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:46:02,798 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:46:04,442 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:46:04,447 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:46:04,515 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-27 02:46:04,520 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:46:04,611 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:46:04,625 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:46:06,362 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:46:06,367 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:46:06,420 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:46:06,425 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:46:06,758 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.032145", "end": "2016-11-26 18:46:06.733832", "failed": true, "rc": 1, "start": "2016-11-26 18:46:06.701687", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:46:06,758 p=8 u=root |  ...ignoring
2016-11-27 02:46:06,763 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:46:07,101 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037774", "end": "2016-11-26 18:46:07.081786", "failed": true, "rc": 1, "start": "2016-11-26 18:46:07.044012", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:46:07,102 p=8 u=root |  ...ignoring
2016-11-27 02:46:07,107 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:46:07,154 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:46:07,218 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 02:46:07,224 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:46:07,284 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:46:07,289 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:46:07,337 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:46:07,401 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:46:07,408 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:46:07,454 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:46:07,460 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:46:07,505 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:46:07,567 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:46:07,575 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:46:07,635 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:46:07,641 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:47:15,108 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:47:15,114 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:47:15,159 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:47:15,164 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:47:15,243 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:47:15,278 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:47:15,346 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:47:15,351 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:47:15,419 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 02:47:15,427 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:47:15,761 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:47:15,771 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:47:16,826 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:47:16,832 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:47:16,939 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randread'])
2016-11-27 02:47:16,944 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:47:17,094 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:47:17,111 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:47:18,551 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:47:18,557 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:47:18,617 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:47:18,623 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:47:18,971 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038905", "end": "2016-11-26 18:47:18.947284", "failed": true, "rc": 1, "start": "2016-11-26 18:47:18.908379", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:47:18,971 p=8 u=root |  ...ignoring
2016-11-27 02:47:18,977 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:47:19,305 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039267", "end": "2016-11-26 18:47:19.285840", "failed": true, "rc": 1, "start": "2016-11-26 18:47:19.246573", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:47:19,306 p=8 u=root |  ...ignoring
2016-11-27 02:47:19,311 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:47:19,366 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:47:19,442 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 02:47:19,447 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:47:19,515 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:47:19,520 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:47:19,572 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:47:19,647 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:47:19,652 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:47:19,704 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:47:19,709 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:47:19,761 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:47:19,824 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:47:19,829 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:47:19,905 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:47:19,910 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:48:31,920 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:48:31,925 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:48:31,965 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:48:31,971 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:48:32,049 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:48:32,093 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:48:32,149 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:48:32,155 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:48:32,225 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 02:48:32,232 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:48:32,532 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:48:32,538 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:48:33,812 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:48:33,817 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:48:33,882 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randwrite'])
2016-11-27 02:48:33,888 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:48:33,992 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:48:34,010 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:48:35,590 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:48:35,595 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:48:35,649 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:48:35,655 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:48:35,987 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037493", "end": "2016-11-26 18:48:35.962556", "failed": true, "rc": 1, "start": "2016-11-26 18:48:35.925063", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:48:35,988 p=8 u=root |  ...ignoring
2016-11-27 02:48:35,994 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:48:36,321 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038646", "end": "2016-11-26 18:48:36.300471", "failed": true, "rc": 1, "start": "2016-11-26 18:48:36.261825", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:48:36,321 p=8 u=root |  ...ignoring
2016-11-27 02:48:36,327 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:48:36,373 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:48:36,437 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 02:48:36,443 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:48:36,500 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:48:36,506 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:48:36,553 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:48:36,616 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:48:36,622 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:48:36,667 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:48:36,673 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:48:36,719 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:48:36,781 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:48:36,788 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:48:36,847 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:48:36,853 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:49:43,848 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:49:43,852 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:49:43,892 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:49:43,898 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:49:43,977 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:49:44,024 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:49:44,135 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:49:44,141 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:49:44,209 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 02:49:44,216 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:49:44,515 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:49:44,521 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:49:45,926 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:49:45,933 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 02:49:47,357 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:49:47,362 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 02:49:47,684 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:49:47,707 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 02:49:48,688 p=8 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 02:49:48,691 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 02:49:48,692 p=8 u=root |  192.168.140.81             : ok=79   changed=13   unreachable=0    failed=0   
2016-11-27 02:49:51,065 p=7 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/experiment/vars_with_maxbw.yml': line 34, column 10, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - 4096
maxbw: ""read-sdb-4096k-seq"
         ^ here
We could be wrong, but this one looks like it might be an issue with
unbalanced quotes.  If starting a value with a quote, make sure the
line ends with the same set of quotes.  For instance this arbitrary
example:

    foo: "bad" "wolf"

Could be written as:

    foo: '"bad" "wolf"'

2016-11-27 02:55:57,407 p=8 u=root |  192.168.140.81 | SUCCESS | rc=0 >>


2016-11-27 02:55:58,774 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 02:55:58,831 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 02:56:01,779 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:56:01,786 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 02:56:01,841 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 02:56:01,846 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 02:56:01,920 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 02:56:01,934 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 02:56:01,979 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 02:56:02,045 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 02:56:02,050 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 02:56:02,090 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:56:02,096 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 02:56:02,195 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:56:02,224 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:56:02,252 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:56:02,280 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 02:56:02,292 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:56:02,355 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-27 02:56:02,359 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:56:02,453 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:56:02,467 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:56:04,373 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:56:04,379 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:56:04,433 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:56:04,438 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:56:04,777 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037869", "end": "2016-11-26 18:56:04.754246", "failed": true, "rc": 1, "start": "2016-11-26 18:56:04.716377", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:56:04,778 p=8 u=root |  ...ignoring
2016-11-27 02:56:04,782 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:56:05,111 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028222", "end": "2016-11-26 18:56:05.090052", "failed": true, "rc": 1, "start": "2016-11-26 18:56:05.061830", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:56:05,112 p=8 u=root |  ...ignoring
2016-11-27 02:56:05,117 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:56:05,165 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:56:05,228 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 02:56:05,233 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:56:05,290 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:56:05,295 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:56:05,341 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:56:05,416 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:56:05,421 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:56:05,474 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:56:05,479 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:56:05,531 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:56:05,605 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:56:05,611 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:56:05,681 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:56:05,686 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:57:18,234 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:57:18,239 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 02:57:18,279 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:57:18,285 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 02:57:18,365 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 02:57:18,410 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 02:57:18,466 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:57:18,472 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 02:57:18,538 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 02:57:18,545 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 02:57:19,076 p=8 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 02:57:19,083 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 02:57:20,339 p=8 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 02:57:20,344 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 02:57:20,407 p=8 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-27 02:57:20,412 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 02:57:20,516 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 02:57:20,533 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 02:57:22,029 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 02:57:22,034 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 02:57:22,099 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:57:22,104 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 02:57:22,449 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.039274", "end": "2016-11-26 18:57:22.428944", "failed": true, "rc": 1, "start": "2016-11-26 18:57:22.389670", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:57:22,449 p=8 u=root |  ...ignoring
2016-11-27 02:57:22,454 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 02:57:22,776 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.033086", "end": "2016-11-26 18:57:22.752176", "failed": true, "rc": 1, "start": "2016-11-26 18:57:22.719090", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 02:57:22,777 p=8 u=root |  ...ignoring
2016-11-27 02:57:22,783 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 02:57:22,833 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 02:57:22,898 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 02:57:22,903 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 02:57:22,961 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:57:22,967 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 02:57:23,014 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 02:57:23,078 p=8 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 02:57:23,084 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 02:57:23,128 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 02:57:23,134 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 02:57:23,181 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 02:57:23,245 p=8 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 02:57:23,251 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 02:57:23,311 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 02:57:23,317 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 02:58:17,961 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 03:01:26,538 p=8 u=root |  192.168.140.81 | SUCCESS | rc=0 >>


2016-11-27 03:01:27,984 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:01:28,040 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:01:42,608 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:01:42,615 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:01:42,670 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:01:42,675 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:01:42,742 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:01:42,754 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:01:42,798 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:01:42,862 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 03:01:42,866 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:01:42,906 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:01:42,910 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:01:43,003 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:01:43,025 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:01:43,047 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:01:43,070 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:01:43,080 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:01:43,143 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'read'])
2016-11-27 03:01:43,148 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:01:43,242 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 03:01:43,256 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 03:01:45,443 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:01:45,449 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 03:01:45,506 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:01:45,512 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 03:01:45,846 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034975", "end": "2016-11-26 19:01:45.826575", "failed": true, "rc": 1, "start": "2016-11-26 19:01:45.791600", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:01:45,847 p=7 u=root |  ...ignoring
2016-11-27 03:01:45,853 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 03:01:46,170 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.029631", "end": "2016-11-26 19:01:46.153905", "failed": true, "rc": 1, "start": "2016-11-26 19:01:46.124274", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:01:46,170 p=7 u=root |  ...ignoring
2016-11-27 03:01:46,175 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 03:01:46,221 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 03:01:46,285 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 03:01:46,292 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 03:01:46,350 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:01:46,356 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 03:01:46,403 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 03:01:46,468 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 03:01:46,474 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 03:01:46,519 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:01:46,526 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 03:01:46,571 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 03:01:46,634 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 03:01:46,640 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 03:01:46,700 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:01:46,706 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 03:02:59,291 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:02:59,296 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:02:59,336 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:02:59,341 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:02:59,416 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 03:02:59,452 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:02:59,510 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:02:59,516 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:02:59,586 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 03:02:59,592 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:03:00,153 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 03:03:00,160 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:03:01,426 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 03:03:01,432 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:03:01,497 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'write'])
2016-11-27 03:03:01,505 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:03:01,608 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 03:03:01,622 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 03:03:03,097 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:03:03,103 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 03:03:03,157 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:03:03,162 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 03:03:03,495 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035577", "end": "2016-11-26 19:03:03.470090", "failed": true, "rc": 1, "start": "2016-11-26 19:03:03.434513", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:03:03,496 p=7 u=root |  ...ignoring
2016-11-27 03:03:03,501 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 03:03:03,838 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.040584", "end": "2016-11-26 19:03:03.814507", "failed": true, "rc": 1, "start": "2016-11-26 19:03:03.773923", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:03:03,839 p=7 u=root |  ...ignoring
2016-11-27 03:03:03,844 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 03:03:03,890 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 03:03:03,954 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 03:03:03,960 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 03:03:04,018 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:03:04,024 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 03:03:04,069 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 03:03:04,132 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 03:03:04,138 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 03:03:04,182 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:03:04,188 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 03:03:04,233 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 03:03:04,296 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 03:03:04,303 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 03:03:04,363 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:03:04,369 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 03:04:11,841 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:04:11,846 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:04:11,886 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:04:11,892 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:04:11,971 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 03:04:12,016 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:04:12,072 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:04:12,078 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:04:12,157 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 03:04:12,162 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:04:12,493 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 03:04:12,498 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:04:13,769 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 03:04:13,775 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:04:13,839 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randread'])
2016-11-27 03:04:13,846 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:04:13,949 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 03:04:13,963 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 03:04:15,433 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:04:15,438 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 03:04:15,493 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:04:15,499 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 03:04:15,828 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037659", "end": "2016-11-26 19:04:15.807139", "failed": true, "rc": 1, "start": "2016-11-26 19:04:15.769480", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:04:15,828 p=7 u=root |  ...ignoring
2016-11-27 03:04:15,834 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 03:04:16,152 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.028810", "end": "2016-11-26 19:04:16.131945", "failed": true, "rc": 1, "start": "2016-11-26 19:04:16.103135", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:04:16,152 p=7 u=root |  ...ignoring
2016-11-27 03:04:16,158 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 03:04:16,205 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 03:04:16,270 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 03:04:16,276 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 03:04:16,335 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:04:16,341 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 03:04:16,388 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 03:04:16,453 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 03:04:16,460 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 03:04:16,507 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:04:16,513 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 03:04:16,559 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 03:04:16,623 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 03:04:16,629 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 03:04:16,689 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:04:16,695 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 03:05:28,662 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:05:28,667 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:05:28,707 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:05:28,712 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:05:28,783 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 03:05:28,820 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:05:28,876 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:05:28,881 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:05:28,952 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 03:05:28,959 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:05:29,278 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 03:05:29,284 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:05:30,308 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 03:05:30,318 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:05:30,381 p=7 u=root |  ok: [192.168.140.81] => (item=[u'mode', u'randwrite'])
2016-11-27 03:05:30,387 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:05:30,478 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.81
2016-11-27 03:05:30,492 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 03:05:31,959 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:05:31,965 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 03:05:32,021 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:05:32,026 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 03:05:32,375 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037776", "end": "2016-11-26 19:05:32.350533", "failed": true, "rc": 1, "start": "2016-11-26 19:05:32.312757", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:05:32,376 p=7 u=root |  ...ignoring
2016-11-27 03:05:32,381 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 03:05:32,722 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035852", "end": "2016-11-26 19:05:32.696563", "failed": true, "rc": 1, "start": "2016-11-26 19:05:32.660711", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:05:32,723 p=7 u=root |  ...ignoring
2016-11-27 03:05:32,728 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 03:05:32,773 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 03:05:32,836 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 03:05:32,842 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 03:05:32,900 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:05:32,906 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 03:05:32,953 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 03:05:33,016 p=7 u=root |  ok: [192.168.140.81] => (item=/dev/sdb:/dev/sdb)
2016-11-27 03:05:33,022 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 03:05:33,066 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:05:33,073 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 03:05:33,119 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 03:05:33,184 p=7 u=root |  ok: [192.168.140.81] => (item=/tmp/results:/results)
2016-11-27 03:05:33,191 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 03:05:33,254 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:05:33,260 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 03:06:40,289 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:06:40,294 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:06:40,335 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:06:40,340 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:06:40,410 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 03:06:40,446 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:06:40,558 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:06:40,563 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:06:40,684 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 03:06:40,690 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:06:41,037 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 03:06:41,049 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:06:42,145 p=7 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 03:06:42,152 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 03:06:43,536 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:06:43,542 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 03:06:43,858 p=7 u=root |  ok: [192.168.140.81 -> localhost]
2016-11-27 03:06:43,881 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 03:06:44,861 p=7 u=root |  changed: [192.168.140.81 -> localhost] => (item=192.168.140.81)
2016-11-27 03:06:44,865 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:06:44,866 p=7 u=root |  192.168.140.81             : ok=79   changed=13   unreachable=0    failed=0   
2016-11-27 03:06:46,884 p=7 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/experiment/vars_with_maxbw.yml': line 34, column 10, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - 4096
maxbw: ""read-sdb-4096k-seq"
         ^ here
We could be wrong, but this one looks like it might be an issue with
unbalanced quotes.  If starting a value with a quote, make sure the
line ends with the same set of quotes.  For instance this arbitrary
example:

    foo: "bad" "wolf"

Could be written as:

    foo: '"bad" "wolf"'

2016-11-27 03:12:24,353 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:12:24,410 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:12:38,746 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 03:12:38,753 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:12:38,824 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:12:38,829 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:12:38,908 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:12:38,919 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:12:38,972 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:12:39,048 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:12:39,065 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 03:12:39,071 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:12:39,121 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 03:12:39,126 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:12:39,690 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,712 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,733 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,755 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,779 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,801 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,823 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,845 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,867 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,889 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,911 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,932 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,954 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:39,980 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,003 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,025 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,047 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,068 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,090 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,112 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,134 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,156 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,182 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,204 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,226 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,248 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,270 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,292 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,313 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,336 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,358 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,384 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,407 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,429 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,451 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,473 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,495 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,517 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,539 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,561 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,588 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,610 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,632 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,654 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,676 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,698 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,720 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,742 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,768 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,791 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,813 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,835 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,857 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,879 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,901 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,923 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,949 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:40,981 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,009 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,037 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,064 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,091 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,119 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,146 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,173 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,201 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:12:41,214 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:12:41,292 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:12:41,299 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 03:12:41,305 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:12:41,350 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 03:12:41,356 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:12:41,439 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:12:41,453 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:12:42,580 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 03:12:42,589 p=9 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 03:12:43,182 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 03:12:43,188 p=9 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 03:12:43,256 p=9 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 54753,45750,330,745 write,read,randread 60,20,20 4 /dev/sdb 120 /tmp/results"
}
2016-11-27 03:12:43,261 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:12:43,607 p=9 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 120 /tmp/results", "delta": "0:00:00.021679", "end": "2016-11-26 19:12:43.589062", "failed": true, "rc": 1, "start": "2016-11-26 19:12:43.567383", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 32, in <module>\n    if output_folder.trim() == \"\":\nAttributeError: 'str' object has no attribute 'trim'", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:12:43,609 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:12:43,610 p=9 u=root |  192.168.140.81             : ok=75   changed=2    unreachable=0    failed=1   
2016-11-27 03:13:32,684 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:13:32,739 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:13:47,264 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 03:13:47,271 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:13:47,338 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:13:47,343 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:13:47,422 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:13:47,433 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:13:47,485 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:13:47,569 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:13:47,578 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 03:13:47,582 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:13:47,621 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:13:47,627 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:13:48,187 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,209 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,231 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,253 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,277 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,300 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,322 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,344 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,366 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,388 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,410 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,433 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,455 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,482 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,504 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,526 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,549 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,571 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,593 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,615 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,637 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,664 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,687 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,709 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,731 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,753 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,775 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,798 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,820 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,842 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,869 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,891 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,914 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,936 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,958 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:48,980 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,002 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,024 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,047 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,074 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,096 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,119 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,141 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,163 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,185 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,210 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,232 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,253 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,280 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,302 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,324 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,346 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,367 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,389 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,411 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,433 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,459 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,481 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,503 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,526 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,547 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,569 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,591 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,613 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,635 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,661 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:13:49,672 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:13:49,737 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:13:49,747 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 03:13:49,752 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:13:49,796 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:13:49,801 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:13:49,875 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:13:49,886 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:13:50,985 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 03:13:50,990 p=8 u=root |  TASK [run-bench : command] *****************************************************
2016-11-27 03:13:51,591 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 03:13:51,597 p=8 u=root |  TASK [run-bench : debug] *******************************************************
2016-11-27 03:13:51,657 p=8 u=root |  ok: [192.168.140.81] => {
    "msg": "executing executing run-fio.py 54753,45750,330,745 write,read,randread 60,20,20 4 /dev/sdb 120 /tmp/results"
}
2016-11-27 03:13:51,663 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:16:09,511 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 120 /tmp/results", "delta": "0:02:17.529133", "end": "2016-11-26 19:16:09.485609", "failed": true, "rc": 1, "start": "2016-11-26 19:13:51.956476", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 114, in <module>\n    raise Exception(\"Non-zero exit from one of the containers\")\nException: Non-zero exit from one of the containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:16:09,519 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:16:09,519 p=8 u=root |  192.168.140.81             : ok=75   changed=2    unreachable=0    failed=1   
2016-11-27 03:24:29,577 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:24:29,634 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:24:32,070 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 03:24:32,077 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:24:32,135 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:24:32,140 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:24:32,208 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:24:32,219 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:24:32,262 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:24:32,333 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:24:32,342 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 03:24:32,348 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:24:32,388 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:24:32,393 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:24:32,909 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:32,931 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:32,954 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:32,975 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:32,998 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,020 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,042 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,068 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,090 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,111 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,134 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,156 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,177 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,200 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,222 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,248 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,270 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,292 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,314 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,336 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,358 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,380 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,402 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,424 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,451 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,473 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,495 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,517 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,539 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,561 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,583 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,605 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,627 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,653 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,725 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,747 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,769 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,791 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,812 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,834 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,855 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,877 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,899 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,925 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,947 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,970 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:33,992 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,014 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,036 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,058 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,080 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,107 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,129 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,151 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,173 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,195 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,217 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,239 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,261 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,283 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,310 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,332 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,355 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,377 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,399 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,421 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:24:34,432 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:24:34,507 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 03:24:34,508 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:24:34,513 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:24:34,556 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:24:34,561 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:24:34,631 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:24:34,643 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:24:35,614 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 03:24:35,620 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:26:53,225 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 120 /tmp/results", "delta": "0:02:17.117126", "end": "2016-11-26 19:26:53.202023", "failed": true, "rc": 1, "start": "2016-11-26 19:24:36.084897", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 115, in <module>\n    raise Exception(\"Non-zero exit from one of the containers\")\nException: Non-zero exit from one of the containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:26:53,228 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:26:53,228 p=8 u=root |  192.168.140.81             : ok=73   changed=1    unreachable=0    failed=1   
2016-11-27 03:29:22,538 p=13 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:29:22,595 p=13 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:29:24,843 p=13 u=root |  ok: [192.168.140.81]
2016-11-27 03:29:24,851 p=13 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:29:24,907 p=13 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:29:24,912 p=13 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:29:24,979 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:29:24,990 p=13 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:29:25,034 p=13 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:29:25,096 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:29:25,110 p=13 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'30,30,30']})
2016-11-27 03:29:25,114 p=13 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:29:25,154 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 03:29:25,159 p=13 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:29:25,244 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:29:25,267 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:29:25,291 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:29:25,300 p=13 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:29:25,362 p=13 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:29:25,372 p=13 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 03:29:25,377 p=13 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:29:25,416 p=13 u=root |  skipping: [192.168.140.81]
2016-11-27 03:29:25,421 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:29:25,487 p=13 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:29:25,498 p=13 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:29:26,464 p=13 u=root |  changed: [192.168.140.81]
2016-11-27 03:29:26,469 p=13 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:29:44,188 p=13 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:17.217431", "end": "2016-11-26 19:29:44.165770", "failed": true, "rc": 1, "start": "2016-11-26 19:29:26.948339", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 116, in <module>\n    raise Exception(\"Non-zero exit from one of the containers:\\n{}\".format(exit_codes))\nException: Non-zero exit from one of the containers:\n0\n0\n0", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:29:44,190 p=13 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:29:44,191 p=13 u=root |  192.168.140.81             : ok=10   changed=1    unreachable=0    failed=1   
2016-11-27 03:32:59,847 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:32:59,903 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:33:02,187 p=8 u=root |  ok: [192.168.140.81]
2016-11-27 03:33:02,194 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:33:02,254 p=8 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:33:02,259 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:33:02,326 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:33:02,338 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:33:02,380 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:33:02,452 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:33:02,457 p=8 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'30,30,30']})
2016-11-27 03:33:02,461 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:33:02,502 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:33:02,506 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:33:02,590 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:33:02,614 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:33:02,636 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:33:02,645 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:33:02,713 p=8 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:33:02,719 p=8 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 03:33:02,724 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:33:02,763 p=8 u=root |  skipping: [192.168.140.81]
2016-11-27 03:33:02,768 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:33:02,834 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:33:02,845 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:33:03,806 p=8 u=root |  changed: [192.168.140.81]
2016-11-27 03:33:03,811 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:33:21,462 p=8 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:17.135559", "end": "2016-11-26 19:33:21.437448", "failed": true, "rc": 1, "start": "2016-11-26 19:33:04.301889", "stderr": "Traceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 116, in <module>\n    raise Exception(\"Non-zero exit from one of the containers:\\n{}\".format(exit_codes))\nException: Non-zero exit from one of the containers:\n0\n0\n0", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:33:21,465 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:33:21,465 p=8 u=root |  192.168.140.81             : ok=10   changed=1    unreachable=0    failed=1   
2016-11-27 03:37:32,841 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:37:32,899 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:37:35,381 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 03:37:35,388 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:37:35,444 p=9 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:37:35,448 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:37:35,519 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:37:35,530 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:37:35,573 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:37:35,651 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'30,30,30']})
2016-11-27 03:37:35,651 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:37:35,655 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:37:35,695 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 03:37:35,700 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:37:35,784 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:37:35,808 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:37:35,830 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:37:35,840 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:37:35,904 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:37:35,913 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 03:37:35,918 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:37:35,957 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 03:37:35,962 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:37:36,029 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:37:36,041 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:37:37,003 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 03:37:37,009 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:37:54,790 p=9 u=root |  changed: [192.168.140.81]
2016-11-27 03:37:54,794 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:37:54,866 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.81
2016-11-27 03:37:54,883 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:37:54,942 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 03:37:54,948 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:37:55,012 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 03:37:55,027 p=9 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 03:37:55,033 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:37:55,512 p=9 u=root |  changed: [192.168.140.81 -> localhost]
2016-11-27 03:37:55,518 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:37:56,982 p=9 u=root |  changed: [192.168.140.81] => (item=/tmp/results)
2016-11-27 03:37:56,987 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:37:57,053 p=9 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 256])
2016-11-27 03:37:57,062 p=9 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 03:37:57,067 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:37:57,107 p=9 u=root |  skipping: [192.168.140.81]
2016-11-27 03:37:57,111 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:37:57,175 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:37:57,187 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:37:57,702 p=9 u=root |  ok: [192.168.140.81]
2016-11-27 03:37:57,708 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:40:19,917 p=9 u=root |   [ERROR]: User interrupted execution

2016-11-27 03:48:54,221 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:48:54,277 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:48:56,636 p=7 u=root |  ok: [192.168.140.81]
2016-11-27 03:48:56,644 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:48:56,698 p=7 u=root |  ok: [192.168.140.81] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:48:56,703 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:48:56,770 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.81
2016-11-27 03:48:56,782 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:48:56,825 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:48:56,888 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:48:56,902 p=7 u=root |  ok: [192.168.140.81] => (item={'key': u'limits_pct', 'value': [u'30,30,30']})
2016-11-27 03:48:56,907 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:48:56,946 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:48:56,951 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:48:57,035 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:48:57,059 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:48:57,081 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.81
2016-11-27 03:48:57,091 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:48:57,153 p=7 u=root |  ok: [192.168.140.81] => (item=[u'blksize_kb', 4])
2016-11-27 03:48:57,164 p=7 u=root |  ok: [192.168.140.81] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 03:48:57,168 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:48:57,208 p=7 u=root |  skipping: [192.168.140.81]
2016-11-27 03:48:57,213 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:48:57,278 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.81
2016-11-27 03:48:57,290 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:48:58,257 p=7 u=root |  changed: [192.168.140.81]
2016-11-27 03:48:58,262 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:49:00,093 p=7 u=root |  fatal: [192.168.140.81]: FAILED! => {"changed": true, "cmd": "/tmp/run-fio.py 54753,45750,330,745 write,read,randread $limits_pct $blksize_kb /dev/sdb 2 /tmp/results", "delta": "0:00:01.318460", "end": "2016-11-26 19:49:00.067091", "failed": true, "rc": 1, "start": "2016-11-26 19:48:58.748631", "stderr": "Error response from daemon: Conflict. The name \"/fio-1\" is already in use by container 8104f311023b1c3537573f126b38616701c5dcf08cae671b510cb387f2664c35. You have to remove (or rename) that container to be able to reuse that name.\nTraceback (most recent call last):\n  File \"/tmp/run-fio.py\", line 101, in <module>\n    sh(cmd, shell=True)\n  File \"/usr/lib/python2.7/subprocess.py\", line 573, in check_output\n    raise CalledProcessError(retcode, cmd, output=output)\nsubprocess.CalledProcessError: Command 'docker create --entrypoint=genfio-test  --name=fio-1  --device /dev/sdb:/dev/sdb  --device-write-bps /dev/sdb:13725kb  --device-read-bps /dev/sdb:13725kb  --volume /tmp/results/mode/write/maxbw/45750/limit/13725:/results  ivotron/fio -s -d /dev/sdb -r 2 -b 4k -m write' returned non-zero exit status 1", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 03:49:00,096 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 03:49:00,097 p=7 u=root |  192.168.140.81             : ok=10   changed=1    unreachable=0    failed=1   
2016-11-27 03:50:17,175 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 03:50:17,234 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 03:50:19,828 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:50:19,834 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 03:50:19,888 p=8 u=root |  ok: [192.168.140.82] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 03:50:19,893 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 03:50:19,961 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.82
2016-11-27 03:50:19,971 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 03:50:20,014 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 03:50:20,079 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 03:50:20,093 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 03:50:20,097 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 03:50:20,138 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 03:50:20,142 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 03:50:20,641 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,664 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,686 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,708 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,730 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,752 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,777 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,799 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,821 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,843 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,865 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,887 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,909 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,931 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,953 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:20,979 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,002 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,024 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,046 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,068 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,090 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,112 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,134 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,156 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,183 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,205 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,227 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,249 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,271 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,293 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,315 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,337 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,364 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,436 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,458 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,481 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,503 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,525 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,546 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,568 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,590 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,611 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,638 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,660 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,682 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,704 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,726 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,748 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,770 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,792 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,813 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,840 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,862 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,884 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,906 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,928 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,950 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,972 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:21,994 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,020 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,043 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,065 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,087 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,109 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,131 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,153 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 03:50:22,164 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:50:22,243 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 03:50:22,245 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 03:50:22,249 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:50:22,292 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 03:50:22,297 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:50:22,365 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 03:50:22,376 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:50:23,361 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 03:50:23,366 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:52:38,413 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 03:52:38,417 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:52:38,492 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 03:52:38,509 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:52:38,567 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:52:38,572 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:52:38,639 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 03:52:38,653 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 03:52:38,659 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:52:39,270 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 03:52:39,276 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:52:40,664 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 03:52:40,669 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:52:40,747 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 03:52:40,748 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 03:52:40,752 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:52:40,796 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 03:52:40,800 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:52:40,867 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 03:52:40,879 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:52:41,424 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:52:41,429 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:54:56,391 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 03:54:56,396 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:54:56,467 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 03:54:56,484 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:54:56,543 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:54:56,548 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:54:56,614 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 03:54:56,629 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 03:54:56,635 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:54:56,936 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 03:54:56,941 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:54:58,021 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 03:54:58,026 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:54:58,093 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 03:54:58,105 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 03:54:58,109 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:54:58,153 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 03:54:58,158 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:54:58,227 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 03:54:58,238 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:54:58,796 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:54:58,801 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:57:13,516 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 03:57:13,521 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:57:13,593 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 03:57:13,610 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:57:13,670 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:57:13,675 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:57:13,751 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 03:57:13,759 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 03:57:13,764 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:57:14,074 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 03:57:14,078 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 03:57:15,098 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 03:57:15,103 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 03:57:15,175 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 03:57:15,183 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 03:57:15,187 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 03:57:15,231 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 03:57:15,236 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:57:15,305 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 03:57:15,316 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 03:57:15,873 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:57:15,878 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 03:59:30,685 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 03:59:30,690 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 03:59:30,763 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 03:59:30,779 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 03:59:30,842 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 03:59:30,847 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 03:59:30,917 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 03:59:30,931 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 03:59:30,936 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 03:59:31,243 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 03:59:31,248 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 04:15:23,403 p=8 u=root |  failed: [192.168.140.82] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"issdm@192.168.140.82:/tmp/results/\" \"/results/with_limits/repetition/1//blksize_kb/4/limits_pct/50,25,25/\"", "failed": true, "item": "/tmp/results", "msg": "Error reading response length from authentication socket.\r\nConnection closed by 192.168.140.82\r\nrsync: connection unexpectedly closed (0 bytes received so far) [Receiver]\nrsync error: unexplained error (code 255) at io.c(226) [Receiver=3.1.1]\n", "rc": 255}
2016-11-27 04:15:23,405 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 04:15:23,406 p=8 u=root |  192.168.140.82             : ok=105  changed=12   unreachable=0    failed=1   
2016-11-27 05:08:42,828 p=8 u=root |  192.168.140.82 | SUCCESS | rc=0 >>


2016-11-27 05:08:43,922 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 05:08:43,978 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 05:08:45,596 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:08:45,602 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 05:08:45,655 p=7 u=root |  ok: [192.168.140.82] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 05:08:45,659 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 05:08:45,724 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.82
2016-11-27 05:08:45,735 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 05:08:45,778 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 05:08:45,841 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 05:08:45,845 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 05:08:45,884 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:08:45,888 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 05:08:45,979 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:08:46,001 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:08:46,023 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:08:46,046 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:08:46,055 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:08:46,120 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'read'])
2016-11-27 05:08:46,124 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:08:46,221 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:08:46,234 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:08:47,956 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:08:47,961 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:08:48,014 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:08:48,018 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:08:48,350 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.042603", "end": "2016-11-26 21:18:19.922731", "failed": true, "rc": 1, "start": "2016-11-26 21:18:19.880128", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:08:48,352 p=7 u=root |  ...ignoring
2016-11-27 05:08:48,356 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:08:48,682 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038744", "end": "2016-11-26 21:18:20.255571", "failed": true, "rc": 1, "start": "2016-11-26 21:18:20.216827", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:08:48,683 p=7 u=root |  ...ignoring
2016-11-27 05:08:48,687 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:08:48,735 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:08:48,796 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 05:08:48,801 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:08:48,856 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:08:48,860 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:08:48,904 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:08:48,965 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:08:48,969 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:08:49,012 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:08:49,017 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:08:49,060 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:08:49,121 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:08:49,126 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:08:49,183 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:08:49,188 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:10:01,651 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:10:01,655 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:10:01,696 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:10:01,701 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:10:01,772 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:10:01,807 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:10:01,869 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:10:01,874 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:10:01,942 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 05:10:01,948 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:10:02,474 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:10:02,480 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:10:03,705 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:10:03,710 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:10:03,778 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'write'])
2016-11-27 05:10:03,783 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:10:03,873 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:10:03,886 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:10:05,926 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:10:05,930 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:10:05,984 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:10:05,988 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:10:06,323 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038489", "end": "2016-11-26 21:19:37.899536", "failed": true, "rc": 1, "start": "2016-11-26 21:19:37.861047", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:10:06,324 p=7 u=root |  ...ignoring
2016-11-27 05:10:06,328 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:10:06,658 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034072", "end": "2016-11-26 21:19:38.236925", "failed": true, "rc": 1, "start": "2016-11-26 21:19:38.202853", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:10:06,659 p=7 u=root |  ...ignoring
2016-11-27 05:10:06,663 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:10:06,706 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:10:06,768 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 05:10:06,773 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:10:06,828 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:10:06,833 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:10:06,876 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:10:06,938 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:10:06,943 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:10:06,985 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:10:06,990 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:10:07,033 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:10:07,096 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:10:07,100 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:10:07,161 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:10:07,166 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:11:14,507 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:11:14,511 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:11:14,551 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:11:14,555 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:11:14,625 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:11:14,660 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:11:14,716 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:11:14,721 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:11:14,785 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 05:11:14,790 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:11:15,079 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:11:15,084 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:11:16,325 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:11:16,331 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:11:16,393 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'randread'])
2016-11-27 05:11:16,402 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:11:16,494 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:11:16,508 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:11:17,966 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:11:17,970 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:11:18,024 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:11:18,029 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:11:18,360 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.041040", "end": "2016-11-26 21:20:49.947157", "failed": true, "rc": 1, "start": "2016-11-26 21:20:49.906117", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:11:18,361 p=7 u=root |  ...ignoring
2016-11-27 05:11:18,366 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:11:18,692 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034025", "end": "2016-11-26 21:20:50.274713", "failed": true, "rc": 1, "start": "2016-11-26 21:20:50.240688", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:11:18,693 p=7 u=root |  ...ignoring
2016-11-27 05:11:18,698 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:11:18,741 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:11:18,803 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 05:11:18,808 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:11:18,863 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:11:18,867 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:11:18,911 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:11:18,973 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:11:18,978 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:11:19,022 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:11:19,026 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:11:19,070 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:11:19,131 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:11:19,136 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:11:19,195 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:11:19,200 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:12:31,111 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:12:31,115 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:12:31,155 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:12:31,160 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:12:31,230 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:12:31,266 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:12:31,329 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:12:31,334 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:12:31,405 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 05:12:31,411 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:12:31,710 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:12:31,715 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:12:32,717 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:12:32,722 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:12:32,788 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'randwrite'])
2016-11-27 05:12:32,793 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:12:32,882 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:12:32,896 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:12:34,408 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:12:34,413 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:12:34,470 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:12:34,475 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:12:34,808 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.040023", "end": "2016-11-26 21:22:06.397540", "failed": true, "rc": 1, "start": "2016-11-26 21:22:06.357517", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:12:34,809 p=7 u=root |  ...ignoring
2016-11-27 05:12:34,814 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:12:35,141 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038243", "end": "2016-11-26 21:22:06.730993", "failed": true, "rc": 1, "start": "2016-11-26 21:22:06.692750", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:12:35,142 p=7 u=root |  ...ignoring
2016-11-27 05:12:35,146 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:12:35,190 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:12:35,258 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 05:12:35,263 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:12:35,320 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:12:35,324 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:12:35,368 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:12:35,431 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:12:35,435 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:12:35,481 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:12:35,485 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:12:35,529 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:12:35,591 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:12:35,595 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:12:35,655 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:12:35,659 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:13:42,552 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:13:42,556 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:13:42,598 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:13:42,603 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:13:42,674 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:13:42,710 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:13:42,823 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:13:42,828 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:13:42,954 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 05:13:42,959 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:13:43,305 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:13:43,309 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:13:44,410 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:13:44,415 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 05:13:45,997 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"cache_update_time": 1480170687, "cache_updated": false, "changed": false, "failed": true, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"     install 'facter'' failed: E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n", "stderr": "E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n", "stdout": "", "stdout_lines": []}
2016-11-27 05:13:46,000 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 05:13:46,000 p=7 u=root |  192.168.140.82             : ok=76   changed=16   unreachable=0    failed=1   
2016-11-27 05:42:32,283 p=10 u=root |  192.168.140.82 | SUCCESS | rc=0 >>


2016-11-27 05:42:33,460 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 05:42:33,515 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 05:42:36,102 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:42:36,109 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 05:42:36,168 p=7 u=root |  ok: [192.168.140.82] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 05:42:36,173 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 05:42:36,237 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.82
2016-11-27 05:42:36,249 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 05:42:36,292 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 05:42:36,356 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 05:42:36,360 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 05:42:36,401 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:42:36,405 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 05:42:36,499 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:42:36,521 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:42:36,544 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:42:36,566 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:42:36,575 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:42:36,636 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'read'])
2016-11-27 05:42:36,641 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:42:36,734 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:42:36,747 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:42:38,439 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:42:38,443 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:42:38,496 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:42:38,501 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:42:38,824 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038340", "end": "2016-11-26 21:52:10.560256", "failed": true, "rc": 1, "start": "2016-11-26 21:52:10.521916", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:42:38,824 p=7 u=root |  ...ignoring
2016-11-27 05:42:38,829 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:42:39,152 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038543", "end": "2016-11-26 21:52:10.889998", "failed": true, "rc": 1, "start": "2016-11-26 21:52:10.851455", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:42:39,152 p=7 u=root |  ...ignoring
2016-11-27 05:42:39,157 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:42:39,203 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:42:39,266 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 05:42:39,271 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:42:39,328 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:42:39,333 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:42:39,377 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:42:39,439 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:42:39,444 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:42:39,487 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:42:39,493 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:42:39,536 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:42:39,599 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:42:39,603 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:42:39,663 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:42:39,667 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:43:52,103 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:43:52,108 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:43:52,148 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:43:52,152 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:43:52,224 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:43:52,260 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:43:52,315 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:43:52,320 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:43:52,385 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 05:43:52,392 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:43:52,911 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:43:52,917 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:43:54,440 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:43:54,445 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:43:54,507 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'write'])
2016-11-27 05:43:54,511 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:43:54,603 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:43:54,616 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:43:56,062 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:43:56,067 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:43:56,120 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:43:56,125 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:43:56,456 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.034863", "end": "2016-11-26 21:53:28.200208", "failed": true, "rc": 1, "start": "2016-11-26 21:53:28.165345", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:43:56,456 p=7 u=root |  ...ignoring
2016-11-27 05:43:56,461 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:43:56,793 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.040667", "end": "2016-11-26 21:53:28.535400", "failed": true, "rc": 1, "start": "2016-11-26 21:53:28.494733", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:43:56,793 p=7 u=root |  ...ignoring
2016-11-27 05:43:56,798 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:43:56,842 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:43:56,903 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 05:43:56,908 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:43:56,964 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:43:56,969 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:43:57,014 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:43:57,075 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:43:57,080 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:43:57,123 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:43:57,129 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:43:57,173 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:43:57,235 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:43:57,240 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:43:57,300 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:43:57,304 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:45:04,614 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:45:04,619 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:45:04,658 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:45:04,663 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:45:04,732 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:45:04,768 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:45:04,825 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:45:04,830 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:45:04,942 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 05:45:04,947 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:45:05,286 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:45:05,326 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:45:06,621 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:45:06,627 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:45:06,689 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'randread'])
2016-11-27 05:45:06,694 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:45:06,785 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:45:06,799 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:45:08,229 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:45:08,234 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:45:08,287 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:45:08,292 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:45:08,631 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038307", "end": "2016-11-26 21:54:40.379540", "failed": true, "rc": 1, "start": "2016-11-26 21:54:40.341233", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:45:08,632 p=7 u=root |  ...ignoring
2016-11-27 05:45:08,636 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:45:08,967 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.038006", "end": "2016-11-26 21:54:40.715533", "failed": true, "rc": 1, "start": "2016-11-26 21:54:40.677527", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:45:08,968 p=7 u=root |  ...ignoring
2016-11-27 05:45:08,973 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:45:09,016 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:45:09,080 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 05:45:09,085 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:45:09,142 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:45:09,147 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:45:09,192 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:45:09,254 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:45:09,260 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:45:09,303 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:45:09,308 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:45:09,352 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:45:09,414 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:45:09,419 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:45:09,478 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:45:09,483 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:46:21,358 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:46:21,363 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:46:21,404 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:46:21,408 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:46:21,482 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:46:21,519 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:46:21,574 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:46:21,579 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:46:21,644 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 05:46:21,650 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:46:21,948 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:46:21,953 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:46:23,099 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:46:23,104 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:46:23,169 p=7 u=root |  ok: [192.168.140.82] => (item=[u'mode', u'randwrite'])
2016-11-27 05:46:23,174 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:46:23,269 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for 192.168.140.82
2016-11-27 05:46:23,283 p=7 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 05:46:24,693 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:46:24,698 p=7 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 05:46:24,752 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:46:24,757 p=7 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 05:46:25,090 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.037780", "end": "2016-11-26 21:55:56.844479", "failed": true, "rc": 1, "start": "2016-11-26 21:55:56.806699", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:46:25,090 p=7 u=root |  ...ignoring
2016-11-27 05:46:25,095 p=7 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 05:46:25,423 p=7 u=root |  fatal: [192.168.140.82]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.035846", "end": "2016-11-26 21:55:57.179780", "failed": true, "rc": 1, "start": "2016-11-26 21:55:57.143934", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 05:46:25,424 p=7 u=root |  ...ignoring
2016-11-27 05:46:25,429 p=7 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 05:46:25,473 p=7 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 05:46:25,535 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 05:46:25,540 p=7 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 05:46:25,597 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:46:25,602 p=7 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 05:46:25,646 p=7 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 05:46:25,708 p=7 u=root |  ok: [192.168.140.82] => (item=/dev/sdb:/dev/sdb)
2016-11-27 05:46:25,713 p=7 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 05:46:25,757 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:46:25,762 p=7 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 05:46:25,806 p=7 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 05:46:25,869 p=7 u=root |  ok: [192.168.140.82] => (item=/tmp/results:/results)
2016-11-27 05:46:25,874 p=7 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 05:46:25,933 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:46:25,937 p=7 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 05:47:32,824 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 05:47:32,829 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:47:32,869 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 05:47:32,879 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:47:32,954 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:47:33,032 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:47:33,089 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:47:33,094 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:47:33,161 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 05:47:33,167 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:47:33,467 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:47:33,472 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:47:34,697 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:47:34,702 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 05:47:35,977 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 05:47:35,982 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 05:47:36,283 p=7 u=root |  ok: [192.168.140.82 -> localhost]
2016-11-27 05:47:36,305 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 05:47:37,217 p=7 u=root |  changed: [192.168.140.82 -> localhost] => (item=192.168.140.82)
2016-11-27 05:47:37,222 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 05:47:37,222 p=7 u=root |  192.168.140.82             : ok=79   changed=17   unreachable=0    failed=0   
2016-11-27 05:47:39,285 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 05:47:39,342 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 05:47:41,981 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:47:41,988 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 05:47:42,042 p=8 u=root |  ok: [192.168.140.82] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 05:47:42,047 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 05:47:42,114 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.82
2016-11-27 05:47:42,125 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 05:47:42,168 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 05:47:42,231 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 05:47:42,245 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 05:47:42,250 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 05:47:42,292 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:47:42,296 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 05:47:42,807 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,829 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,851 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,872 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,894 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,916 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,941 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,963 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:42,985 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,007 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,029 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,050 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,072 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,094 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,116 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,142 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,164 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,186 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,208 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,230 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,251 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,273 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,295 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,317 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,343 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,365 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,387 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,409 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,430 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,452 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,474 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,496 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,522 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,593 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,615 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,637 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,659 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,681 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,702 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,724 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,745 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,767 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,793 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,815 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,837 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,858 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,880 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,902 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,924 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,946 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,968 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:43,995 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,017 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,039 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,061 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,083 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,105 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,127 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,148 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,170 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,197 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,219 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,241 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,263 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,285 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,307 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 05:47:44,317 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:47:44,392 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 05:47:44,392 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:47:44,397 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:47:44,438 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:47:44,443 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:47:44,511 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:47:44,523 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:47:45,433 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:47:45,438 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:50:00,389 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 05:50:00,394 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:50:00,472 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:50:00,490 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:50:00,548 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:50:00,553 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:50:00,634 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 05:50:00,637 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 05:50:00,643 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:50:00,947 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:50:00,952 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:50:02,506 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:50:02,511 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:50:02,579 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:50:02,588 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 05:50:02,592 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:50:02,635 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:50:02,640 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:50:02,708 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:50:02,720 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:50:03,259 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:50:03,265 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:52:18,085 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 05:52:18,090 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:52:18,162 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:52:18,179 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:52:18,238 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:52:18,243 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:52:18,316 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 05:52:18,326 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 05:52:18,332 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:52:18,636 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:52:18,641 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:52:19,694 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:52:19,699 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:52:19,768 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:52:19,777 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 05:52:19,788 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:52:19,828 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:52:19,834 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:52:19,903 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:52:19,916 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:52:20,457 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:52:20,463 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:54:35,157 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 05:54:35,162 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:54:35,235 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:54:35,251 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:54:35,311 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:54:35,316 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:54:35,385 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 05:54:35,401 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 05:54:35,406 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:54:35,707 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:54:35,712 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:54:36,728 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:54:36,734 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:54:36,811 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:54:36,815 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 05:54:36,820 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:54:36,863 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:54:36,868 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:54:36,935 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:54:36,946 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:54:37,507 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:54:37,512 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:56:52,333 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 05:56:52,338 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:56:52,410 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:56:52,427 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:56:52,485 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:56:52,490 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:56:52,560 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 05:56:52,575 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 05:56:52,582 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:56:52,879 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:56:52,884 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:56:53,914 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:56:53,919 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:56:53,995 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 05:56:53,995 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:56:54,000 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:56:54,042 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:56:54,047 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:56:54,114 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:56:54,126 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:56:54,678 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:56:54,683 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:59:09,555 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 05:59:09,560 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 05:59:09,632 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 05:59:09,649 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 05:59:09,707 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:59:09,712 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 05:59:09,793 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 05:59:09,796 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 05:59:09,802 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 05:59:10,106 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 05:59:10,111 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 05:59:11,441 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 05:59:11,445 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 05:59:11,516 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 05:59:11,526 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 05:59:11,531 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 05:59:11,574 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 05:59:11,579 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 05:59:11,648 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 05:59:11,659 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 05:59:12,207 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 05:59:12,212 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 06:01:27,464 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 06:01:27,469 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 06:01:27,543 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 06:01:27,560 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 06:01:27,622 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 06:01:27,627 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 06:01:27,696 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 06:01:27,711 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 06:01:27,716 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 06:01:28,021 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 06:01:28,026 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 06:01:29,084 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 06:01:29,089 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 06:01:29,170 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 06:01:29,171 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 06:01:29,175 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 06:01:29,219 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 06:01:29,224 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 06:01:29,293 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 06:01:29,304 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 06:01:29,857 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 06:01:29,862 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 06:03:44,588 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 06:03:44,593 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 06:03:44,666 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 06:03:44,682 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 06:03:44,743 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 06:03:44,749 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 06:03:44,823 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 06:03:44,838 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 06:03:44,843 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 06:03:45,164 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 06:03:45,169 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 06:03:46,328 p=8 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 06:03:46,334 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 06:03:46,408 p=8 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 06:03:46,412 p=8 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 06:03:46,417 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 06:03:46,462 p=8 u=root |  skipping: [192.168.140.82]
2016-11-27 06:03:46,467 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 06:03:46,538 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 06:03:46,549 p=8 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 06:03:47,108 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 06:03:47,114 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 06:06:02,195 p=8 u=root |  changed: [192.168.140.82]
2016-11-27 06:06:02,200 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 06:06:02,278 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 06:06:02,296 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 06:06:02,355 p=8 u=root |  ok: [192.168.140.82]
2016-11-27 06:06:02,360 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 06:06:02,429 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 06:06:02,443 p=8 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 06:06:02,448 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 06:06:02,764 p=8 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 06:06:02,769 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 06:22:08,650 p=8 u=root |  failed: [192.168.140.82] (item=/tmp/results) => {"cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh 'ssh  -S none -o StrictHostKeyChecking=no' --out-format='<<CHANGED>>%i %n%L' \"issdm@192.168.140.82:/tmp/results/\" \"/results/with_limits/repetition/1//blksize_kb/4/limits_pct/10,80,10/\"", "failed": true, "item": "/tmp/results", "msg": "Error reading response length from authentication socket.\r\nConnection closed by 192.168.140.82\r\nrsync: connection unexpectedly closed (0 bytes received so far) [Receiver]\nrsync error: unexplained error (code 255) at io.c(226) [Receiver=3.1.1]\n", "rc": 255}
2016-11-27 06:22:08,652 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 06:22:08,652 p=8 u=root |  192.168.140.82             : ok=141  changed=23   unreachable=0    failed=1   
2016-11-27 07:23:09,705 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 07:23:09,864 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 07:23:12,625 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:23:12,632 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 07:23:12,726 p=7 u=root |  ok: [192.168.140.82] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 07:23:12,731 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 07:23:12,807 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for 192.168.140.82
2016-11-27 07:23:12,818 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 07:23:12,881 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 07:23:12,956 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 07:23:12,975 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'5,5,5', u'10,10,10', u'20,20,20', u'30,30,30']})
2016-11-27 07:23:12,979 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 07:23:13,031 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:23:13,036 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 07:23:13,601 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,623 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,644 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,666 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,688 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,713 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,735 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,757 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,779 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,801 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,823 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,859 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,882 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,907 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,934 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,958 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:13,989 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,011 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,033 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,055 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,077 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,100 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,123 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,156 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,184 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,208 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,230 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,252 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,274 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,296 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,318 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,340 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,416 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,438 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,482 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,504 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,532 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,554 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,576 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,598 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,624 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,646 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,668 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,690 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,713 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,735 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,757 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,780 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,802 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,828 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,850 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,872 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,895 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,916 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,938 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,960 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:14,982 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,004 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,035 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,057 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,101 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,123 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,145 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,167 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for 192.168.140.82
2016-11-27 07:23:15,178 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:23:15,248 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:23:15,261 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 07:23:15,267 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:23:15,308 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:23:15,314 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:23:15,402 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:23:15,413 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:23:16,351 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:23:16,357 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:25:31,345 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:25:31,350 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:25:31,445 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:25:31,462 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:25:31,534 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:25:31,539 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:25:31,620 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:25:31,635 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 07:25:31,641 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:25:32,018 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:25:32,024 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:25:33,417 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:25:33,423 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:25:33,497 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:25:33,508 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 07:25:33,513 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:25:33,556 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:25:33,561 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:25:33,631 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:25:33,642 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:25:34,213 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:25:34,220 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:27:49,015 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:27:49,021 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:27:49,098 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:27:49,115 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:27:49,173 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:27:49,178 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:27:49,247 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:27:49,262 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 07:27:49,268 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:27:49,587 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:27:49,601 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:27:50,744 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:27:50,749 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:27:50,813 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:27:50,824 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 07:27:50,830 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:27:50,882 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:27:50,887 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:27:50,963 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:27:50,974 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:27:51,558 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:27:51,563 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:30:06,153 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:30:06,158 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:30:06,233 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:30:06,250 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:30:06,311 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:30:06,316 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:30:06,386 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:30:06,402 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 07:30:06,409 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:30:06,781 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:30:06,787 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:30:07,916 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:30:07,923 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:30:07,990 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:30:08,001 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 07:30:08,007 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:30:08,052 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:30:08,059 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:30:08,143 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:30:08,154 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:30:08,745 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:30:08,750 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:32:23,562 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:32:23,567 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:32:23,640 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:32:23,657 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:32:23,717 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:32:23,723 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:32:23,792 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:32:23,807 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 07:32:23,812 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:32:24,218 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:32:24,224 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:32:25,268 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:32:25,273 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:32:25,338 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:32:25,349 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 07:32:25,354 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:32:25,404 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:32:25,409 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:32:25,486 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:32:25,498 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:32:26,066 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:32:26,072 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:34:40,777 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:34:40,782 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:34:40,858 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:34:40,875 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:34:40,934 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:34:40,940 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:34:41,008 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:34:41,023 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 07:34:41,029 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:34:41,358 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:34:41,363 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:34:42,421 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:34:42,426 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:34:42,496 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:34:42,508 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 07:34:42,513 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:34:42,558 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:34:42,563 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:34:42,633 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:34:42,644 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:34:43,230 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:34:43,235 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:36:58,030 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:36:58,036 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:36:58,117 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:36:58,138 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:36:58,204 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:36:58,210 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:36:58,287 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:36:58,303 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 07:36:58,308 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:36:58,644 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:36:58,649 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:36:59,890 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:36:59,897 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:36:59,974 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 07:36:59,976 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:36:59,981 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:37:00,025 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:37:00,031 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:37:00,106 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:37:00,120 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:37:00,703 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:37:00,710 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:39:15,515 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:39:15,521 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:39:15,602 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:39:15,623 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:39:15,683 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:39:15,690 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:39:15,771 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:39:15,777 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 07:39:15,784 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:39:16,103 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:39:16,108 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:39:17,202 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:39:17,207 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:39:17,275 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:39:17,286 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 07:39:17,290 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:39:17,337 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:39:17,342 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:39:17,414 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:39:17,425 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:39:17,966 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:39:17,971 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:41:32,985 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:41:32,990 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:41:33,095 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:41:33,113 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:41:33,174 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:41:33,179 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:41:33,254 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:41:33,269 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 07:41:33,278 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:41:33,733 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:41:33,738 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:41:34,883 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:41:34,888 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:41:34,995 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:41:35,001 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 07:41:35,009 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:41:35,054 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:41:35,060 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:41:35,130 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:41:35,143 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:41:35,733 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:41:35,739 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:43:50,454 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:43:50,459 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:43:50,532 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:43:50,549 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:43:50,635 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:43:50,641 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:43:50,739 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 07:43:50,740 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:43:50,745 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:43:51,071 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:43:51,075 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:43:52,161 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:43:52,167 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:43:52,249 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 07:43:52,250 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:43:52,255 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:43:52,300 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:43:52,305 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:43:52,373 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:43:52,384 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:43:52,936 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:43:52,942 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:46:07,836 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:46:07,841 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:46:07,939 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:46:07,956 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:46:08,015 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:46:08,020 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:46:08,102 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:46:08,103 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 07:46:08,109 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:46:08,416 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:46:08,421 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:46:09,490 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:46:09,496 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:46:09,562 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:46:09,572 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 07:46:09,577 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:46:09,620 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:46:09,625 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:46:09,695 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:46:09,707 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:46:10,251 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:46:10,257 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:48:24,930 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:48:24,935 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:48:25,024 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:48:25,041 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:48:25,102 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:48:25,108 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:48:25,179 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:48:25,197 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 07:48:25,203 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:48:25,515 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:48:25,520 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:48:26,796 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:48:26,801 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:48:26,871 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:48:26,881 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 07:48:26,886 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:48:26,930 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:48:26,936 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:48:27,005 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:48:27,017 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:48:27,575 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:48:27,580 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:50:42,423 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:50:42,429 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:50:42,614 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:50:42,631 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:50:42,694 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:50:42,699 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:50:42,778 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:50:42,784 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 07:50:42,790 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:50:43,312 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:50:43,317 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:50:44,402 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:50:44,407 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:50:44,484 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:50:44,489 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 07:50:44,493 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:50:44,544 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:50:44,549 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:50:44,619 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:50:44,631 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:50:45,191 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:50:45,196 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:52:59,868 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:52:59,873 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:52:59,948 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:52:59,965 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:53:00,025 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:53:00,031 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:53:00,113 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:53:00,116 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 07:53:00,125 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:53:00,436 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:53:00,441 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:53:01,506 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:53:01,511 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:53:01,584 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:53:01,588 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 07:53:01,593 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:53:01,638 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:53:01,644 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:53:01,712 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:53:01,723 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:53:02,279 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:53:02,284 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:55:17,049 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:55:17,055 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:55:17,275 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:55:17,292 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:55:17,354 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:55:17,360 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:55:17,435 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:55:17,450 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 07:55:17,456 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:55:17,882 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:55:17,887 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:55:19,058 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:55:19,065 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:55:19,151 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:55:19,161 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 07:55:19,167 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:55:19,214 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:55:19,219 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:55:19,290 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:55:19,301 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:55:19,859 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:55:19,864 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:57:34,711 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:57:34,716 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:57:35,020 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:57:35,037 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:57:35,108 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:57:35,113 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:57:35,219 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:57:35,234 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 07:57:35,240 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:57:35,661 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:57:35,666 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:57:36,986 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:57:36,992 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:57:37,077 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:57:37,088 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 07:57:37,093 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:57:37,135 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:57:37,141 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:57:37,210 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:57:37,222 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:57:37,762 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:57:37,767 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:59:52,668 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 07:59:52,673 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 07:59:52,764 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 07:59:52,782 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 07:59:52,842 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:59:52,847 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 07:59:52,917 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 07:59:52,931 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 07:59:52,937 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 07:59:53,293 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 07:59:53,298 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 07:59:54,431 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 07:59:54,466 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 07:59:54,540 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 07:59:54,543 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 07:59:54,547 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 07:59:54,590 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 07:59:54,595 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 07:59:54,663 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 07:59:54,675 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 07:59:56,092 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 07:59:56,097 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:02:10,834 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:02:10,839 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:02:10,919 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:02:10,937 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:02:10,998 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:02:11,004 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:02:11,107 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:02:11,110 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 08:02:11,118 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:02:11,433 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:02:11,438 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:02:12,478 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:02:12,484 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:02:12,553 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 08:02:12,565 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 08:02:12,570 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:02:12,615 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:02:12,620 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:02:12,691 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:02:12,702 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:02:13,277 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:02:13,282 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:04:28,192 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:04:28,197 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:04:28,275 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:04:28,292 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:04:28,355 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:04:28,360 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:04:28,447 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:04:28,451 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 08:04:28,456 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:04:28,784 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:04:28,789 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:04:29,864 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:04:29,870 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:04:29,943 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 08:04:29,953 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'5,5,5'])
2016-11-27 08:04:29,958 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:04:30,004 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:04:30,010 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:04:30,099 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:04:30,111 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:04:30,675 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:04:30,680 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:06:45,311 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:06:45,316 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:06:45,389 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:06:45,407 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:06:45,468 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:06:45,474 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:06:45,543 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:06:45,557 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'5,5,5'})
2016-11-27 08:06:45,564 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:06:45,871 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:06:45,881 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:06:47,190 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:06:47,195 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:06:47,265 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 08:06:47,273 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,10,10'])
2016-11-27 08:06:47,278 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:06:47,324 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:06:47,345 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:06:47,415 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:06:47,426 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:06:47,979 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:06:47,984 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:09:03,652 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:09:03,657 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:09:03,732 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:09:03,749 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:09:03,810 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:09:03,815 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:09:03,897 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:09:03,900 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,10,10'})
2016-11-27 08:09:03,906 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:09:04,219 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:09:04,224 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:09:05,253 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:09:05,259 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:09:05,326 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 08:09:05,337 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 08:09:05,341 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:09:05,385 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:09:05,391 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:09:05,459 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:09:05,471 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:09:06,029 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:09:06,035 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:11:21,178 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:11:21,183 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:11:21,260 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:11:21,276 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:11:21,342 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:11:21,347 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:11:21,419 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:11:21,434 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 08:11:21,440 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:11:21,755 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:11:21,760 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:11:23,051 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:11:23,057 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:11:23,130 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4])
2016-11-27 08:11:23,135 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 08:11:23,139 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:11:23,184 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:11:23,189 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:11:23,277 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:11:23,288 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:11:23,874 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:11:23,879 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:13:38,662 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:13:38,667 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:13:38,742 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:13:38,759 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:13:38,821 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:13:38,826 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:13:38,897 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 08:13:38,912 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 08:13:38,917 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:13:39,240 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:13:39,245 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:13:40,268 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:13:40,274 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:13:40,347 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:13:40,351 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 08:13:40,356 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:13:40,402 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:13:40,407 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:13:40,478 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:13:40,490 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:13:41,053 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:13:41,058 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:15:58,719 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:15:58,724 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:15:58,799 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:15:58,816 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:15:59,047 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:15:59,188 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:15:59,274 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:15:59,277 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 08:15:59,283 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:15:59,685 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:15:59,690 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:16:00,746 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:16:00,751 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:16:00,823 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:16:00,832 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 08:16:00,837 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:16:00,885 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:16:00,890 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:16:00,963 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:16:00,975 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:16:01,557 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:16:01,563 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:18:24,004 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:18:24,009 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:18:24,087 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:18:24,104 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:18:24,165 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:18:24,171 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:18:24,242 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:18:24,257 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 08:18:24,263 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:18:24,577 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:18:24,582 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:18:25,691 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:18:25,700 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:18:25,772 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:18:25,783 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 08:18:25,788 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:18:25,836 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:18:25,842 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:18:25,916 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:18:25,928 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:18:26,510 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:18:26,516 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:20:41,418 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:20:41,424 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:20:41,501 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:20:41,518 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:20:41,579 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:20:41,584 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:20:41,654 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:20:41,670 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 08:20:41,676 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:20:41,989 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:20:41,994 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:20:43,070 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:20:43,076 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:20:43,153 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:20:43,158 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 08:20:43,163 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:20:43,212 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:20:43,218 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:20:43,293 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:20:43,304 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:20:43,878 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:20:43,884 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:23:01,539 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:23:01,545 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:23:01,620 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:23:01,638 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:23:01,698 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:23:01,703 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:23:01,790 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:23:01,792 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 08:23:01,799 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:23:02,123 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:23:02,128 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:23:03,469 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:23:03,474 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:23:03,546 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:23:03,554 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 08:23:03,558 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:23:03,606 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:23:03,611 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:23:03,683 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:23:03,695 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:23:04,267 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:23:04,273 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:25:22,251 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:25:22,256 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:25:22,338 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:25:22,355 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:25:22,416 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:25:22,421 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:25:22,513 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:25:22,515 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 08:25:22,520 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:25:22,843 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:25:22,849 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:25:24,201 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:25:24,206 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:25:24,290 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:25:24,301 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 08:25:24,306 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:25:24,351 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:25:24,356 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:25:24,427 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:25:24,439 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:25:25,016 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:25:25,022 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:27:40,591 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:27:40,596 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:27:40,673 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:27:40,690 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:27:40,752 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:27:40,757 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:27:40,828 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:27:40,844 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 08:27:40,850 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:27:41,167 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:27:41,172 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:27:42,266 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:27:42,273 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:27:42,347 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:27:42,352 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 08:27:42,356 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:27:42,404 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:27:42,424 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:27:42,494 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:27:42,506 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:27:43,083 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:27:43,089 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:30:04,640 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:30:04,646 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:30:04,721 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:30:04,738 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:30:04,799 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:30:04,804 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:30:04,878 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:30:04,894 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 08:30:04,899 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:30:05,223 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:30:05,229 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:30:06,317 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:30:06,322 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:30:06,393 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:30:06,403 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 08:30:06,407 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:30:06,455 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:30:06,460 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:30:06,532 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:30:06,543 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:30:07,135 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:30:07,141 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:32:36,696 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:32:36,701 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:32:36,776 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:32:36,794 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:32:36,854 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:32:36,860 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:32:36,935 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:32:36,946 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 08:32:36,951 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:32:37,266 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:32:37,271 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:32:38,547 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:32:38,552 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:32:38,632 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:32:38,634 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 08:32:38,639 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:32:38,685 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:32:38,691 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:32:38,764 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:32:38,776 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:32:39,379 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:32:39,384 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:34:55,019 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:34:55,024 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:34:55,101 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:34:55,117 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:34:55,178 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:34:55,184 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:34:55,253 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:34:55,267 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 08:34:55,273 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:34:55,594 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:34:55,599 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:34:56,648 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:34:56,653 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:34:56,947 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 08:34:56,948 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:34:56,952 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:34:56,998 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:34:57,004 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:34:57,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:34:57,091 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:34:57,686 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:34:57,691 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:37:14,295 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:37:14,300 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:37:14,377 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:37:14,394 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:37:14,459 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:37:14,464 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:37:14,538 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:37:14,553 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 08:37:14,559 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:37:14,870 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:37:14,876 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:37:15,952 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:37:15,958 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:37:16,039 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:37:16,040 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 08:37:16,045 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:37:16,094 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:37:16,099 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:37:16,173 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:37:16,184 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:37:16,765 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:37:16,771 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:39:33,376 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:39:33,382 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:39:33,457 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:39:33,474 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:39:33,534 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:39:33,539 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:39:33,627 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:39:33,630 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 08:39:33,636 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:39:33,957 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:39:33,962 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:39:35,104 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:39:35,110 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:39:35,186 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:39:35,190 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 08:39:35,196 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:39:35,248 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:39:35,253 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:39:35,324 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:39:35,335 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:39:35,908 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:39:35,914 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:41:51,591 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:41:51,596 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:41:51,676 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:41:51,693 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:41:51,755 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:41:51,761 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:41:51,838 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:41:51,851 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 08:41:51,856 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:41:52,178 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:41:52,183 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:41:53,204 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:41:53,209 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:41:53,291 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:41:53,296 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 08:41:53,301 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:41:53,348 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:41:53,353 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:41:53,427 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:41:53,438 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:41:54,037 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:41:54,042 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:44:11,719 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:44:11,725 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:44:11,801 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:44:11,818 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:44:11,880 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:44:11,885 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:44:11,960 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:44:11,977 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 08:44:11,982 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:44:12,296 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:44:12,302 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:44:13,337 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:44:13,343 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:44:13,410 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:44:13,421 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 08:44:13,425 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:44:13,472 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:44:13,478 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:44:13,550 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:44:13,562 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:44:14,159 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:44:14,164 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:46:31,861 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:46:31,867 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:46:31,942 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:46:31,959 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:46:32,022 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:46:32,027 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:46:32,097 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:46:32,112 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 08:46:32,118 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:46:32,438 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:46:32,443 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:46:33,490 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:46:33,495 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:46:33,567 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:46:33,582 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 08:46:33,587 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:46:33,632 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:46:33,638 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:46:33,709 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:46:33,721 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:46:34,312 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:46:34,317 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:48:50,244 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:48:50,249 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:48:50,326 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:48:50,343 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:48:50,404 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:48:50,410 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:48:50,478 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:48:50,493 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 08:48:50,499 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:48:50,826 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:48:50,831 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:48:52,068 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:48:52,073 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:48:52,152 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 08:48:52,153 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:48:52,157 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:48:52,202 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:48:52,208 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:48:52,279 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:48:52,290 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:48:52,889 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:48:52,894 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:51:10,681 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:51:10,686 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:51:10,761 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:51:10,778 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:51:10,841 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:51:10,847 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:51:10,927 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:51:10,936 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 08:51:10,942 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:51:11,263 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:51:11,268 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:51:12,336 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:51:12,341 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:51:12,410 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:51:12,420 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 08:51:12,425 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:51:12,472 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:51:12,477 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:51:12,550 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:51:12,561 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:51:13,158 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:51:13,164 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:53:30,872 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:53:30,877 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:53:30,953 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:53:30,970 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:53:31,031 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:53:31,036 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:53:31,127 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 08:53:31,127 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:53:31,133 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:53:31,455 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:53:31,460 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:53:32,489 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:53:32,494 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:53:32,570 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:53:32,581 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 08:53:32,586 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:53:32,633 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:53:32,639 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:53:32,731 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:53:32,743 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:53:33,342 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:53:33,348 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:55:50,359 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:55:50,363 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:55:50,466 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:55:50,483 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:55:50,547 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:55:50,553 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:55:50,645 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:55:50,650 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 08:55:50,656 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:55:50,981 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:55:50,987 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:55:52,331 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:55:52,336 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:55:52,433 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:55:52,435 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'5,5,5'])
2016-11-27 08:55:52,439 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:55:52,490 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:55:52,495 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:55:52,570 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:55:52,582 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:55:53,178 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:55:53,183 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:58:10,876 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 08:58:10,881 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 08:58:10,955 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 08:58:10,972 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 08:58:11,041 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:58:11,047 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 08:58:11,120 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 08:58:11,138 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'5,5,5'})
2016-11-27 08:58:11,144 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 08:58:11,476 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 08:58:11,481 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 08:58:12,526 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 08:58:12,532 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 08:58:12,605 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 08:58:12,615 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,10,10'])
2016-11-27 08:58:12,619 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 08:58:12,668 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 08:58:12,673 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 08:58:12,746 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 08:58:12,757 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 08:58:13,374 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 08:58:13,380 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:00:34,925 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:00:34,930 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:00:35,007 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:00:35,024 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:00:35,087 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:00:35,092 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:00:35,164 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 09:00:35,178 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,10,10'})
2016-11-27 09:00:35,184 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:00:35,500 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:00:35,505 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:00:36,793 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:00:36,798 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:00:36,879 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 09:00:36,880 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 09:00:36,884 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:00:36,934 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:00:36,940 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:00:37,011 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:00:37,023 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:00:37,623 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:00:37,628 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:02:55,382 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:02:55,387 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:02:55,470 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:02:55,487 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:02:55,550 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:02:55,555 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:02:55,645 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 09:02:55,649 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 09:02:55,655 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:02:55,995 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:02:56,000 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:02:57,490 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:02:57,496 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:02:57,571 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 256])
2016-11-27 09:02:57,581 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 09:02:57,585 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:02:57,632 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:02:57,638 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:02:57,711 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:02:57,722 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:02:58,340 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:02:58,346 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:05:14,713 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:05:14,719 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:05:14,797 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:05:14,814 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:05:14,877 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:05:14,882 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:05:14,956 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 09:05:14,970 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 09:05:14,976 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:05:15,299 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:05:15,312 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:05:16,489 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:05:16,494 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:05:16,564 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:05:16,574 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 09:05:16,579 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:05:16,627 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:05:16,632 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:05:16,705 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:05:16,716 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:05:17,320 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:05:17,326 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:08:34,190 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:08:34,195 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:08:34,272 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:08:34,289 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:08:34,352 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:08:34,357 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:08:34,434 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:08:34,450 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 09:08:34,456 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:08:34,820 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:08:34,827 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:08:36,028 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:08:36,048 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:08:36,113 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:08:36,124 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 09:08:36,129 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:08:36,179 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:08:36,184 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:08:36,259 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:08:36,271 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:08:36,888 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:08:36,894 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:12:54,282 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:12:54,288 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:12:54,365 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:12:54,382 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:12:54,443 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:12:54,449 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:12:54,527 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:12:54,539 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 09:12:54,547 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:12:54,872 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:12:54,877 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:12:56,210 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:12:56,215 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:12:56,298 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 09:12:56,298 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:12:56,303 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:12:56,352 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:12:56,358 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:12:56,449 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:12:56,460 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:12:57,075 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:12:57,081 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:15:31,597 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:15:31,602 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:15:31,680 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:15:31,697 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:15:31,759 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:15:31,764 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:15:31,839 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:15:31,854 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 09:15:31,859 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:15:32,195 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:15:32,200 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:15:33,253 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:15:33,259 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:15:33,334 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:15:33,345 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 09:15:33,350 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:15:33,401 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:15:33,407 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:15:33,480 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:15:33,491 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:15:34,110 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:15:34,116 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:18:13,910 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:18:13,915 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:18:13,993 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:18:14,010 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:18:14,074 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:18:14,079 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:18:14,167 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:18:14,170 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 09:18:14,176 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:18:14,500 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:18:14,506 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:18:15,562 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:18:15,568 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:18:15,646 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:18:15,653 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 09:18:15,658 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:18:15,708 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:18:15,714 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:18:15,792 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:18:15,803 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:18:16,422 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:18:16,428 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:21:12,633 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:21:12,638 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:21:12,725 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:21:12,742 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:21:12,808 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:21:12,813 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:21:12,904 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:21:12,910 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 09:21:12,916 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:21:13,273 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:21:13,279 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:21:14,330 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:21:14,336 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:21:14,411 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:21:14,425 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 09:21:14,430 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:21:14,486 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:21:14,491 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:21:14,569 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:21:14,580 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:21:15,204 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:21:15,209 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:23:58,076 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:23:58,081 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:23:58,162 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:23:58,179 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:23:58,242 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:23:58,247 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:23:58,337 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:23:58,340 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 09:23:58,346 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:23:58,689 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:23:58,695 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:23:59,778 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:23:59,784 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:23:59,863 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:23:59,866 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 09:23:59,872 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:23:59,923 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:23:59,928 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:24:00,014 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:24:00,025 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:24:00,621 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:24:00,626 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:28:39,265 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:28:39,270 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:28:39,350 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:28:39,367 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:28:39,434 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:28:39,439 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:28:39,515 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:28:39,533 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 09:28:39,538 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:28:39,874 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:28:39,880 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:28:40,961 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:28:40,966 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:28:41,056 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 09:28:41,057 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:28:41,062 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:28:41,111 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:28:41,116 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:28:41,190 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:28:41,201 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:28:41,810 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:28:41,815 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:35:22,927 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:35:22,932 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:35:23,012 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:35:23,029 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:35:23,097 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:35:23,103 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:35:23,183 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:35:23,195 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 09:35:23,201 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:35:23,555 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:35:23,560 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:35:24,830 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:35:24,836 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:35:24,918 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 09:35:24,919 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:35:24,923 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:35:24,974 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:35:24,980 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:35:25,056 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:35:25,068 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:35:25,685 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:35:25,690 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:38:00,530 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:38:00,535 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:38:00,614 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:38:00,631 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:38:00,694 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:38:00,699 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:38:00,789 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:38:00,794 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 09:38:00,801 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:38:01,146 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:38:01,152 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:38:02,292 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:38:02,298 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:38:02,370 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:38:02,380 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 09:38:02,385 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:38:02,435 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:38:02,441 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:38:02,515 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:38:02,526 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:38:03,146 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:38:03,151 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:40:58,277 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:40:58,283 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:40:58,362 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:40:58,380 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:40:58,442 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:40:58,448 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:40:58,535 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:40:58,538 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 09:40:58,545 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:40:58,883 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:40:58,889 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:40:59,995 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:41:00,001 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:41:00,092 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:41:00,093 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 09:41:00,100 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:41:00,149 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:41:00,155 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:41:00,228 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:41:00,240 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:41:00,855 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:41:00,861 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:43:56,207 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:43:56,212 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:43:56,290 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:43:56,308 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:43:56,370 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:43:56,376 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:43:56,451 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:43:56,466 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 09:43:56,472 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:43:56,802 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:43:56,807 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:43:57,873 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:43:57,879 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:43:57,952 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:43:57,963 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 09:43:57,967 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:43:58,018 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:43:58,023 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:43:58,120 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:43:58,132 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:43:58,743 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:43:58,748 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:47:09,263 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:47:09,268 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:47:09,349 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:47:09,366 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:47:09,428 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:47:09,433 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:47:09,511 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:47:09,526 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 09:47:09,532 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:47:09,867 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:47:09,873 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:47:10,934 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:47:10,939 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:47:11,012 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:47:11,020 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 09:47:11,025 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:47:11,077 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:47:11,082 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:47:11,158 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:47:11,169 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:47:11,781 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:47:11,786 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:50:38,040 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:50:38,045 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:50:38,124 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:50:38,141 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:50:38,205 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:50:38,211 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:50:38,284 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:50:38,298 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 09:50:38,304 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:50:38,639 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:50:38,644 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:50:39,981 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:50:39,986 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:50:40,068 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:50:40,070 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 09:50:40,075 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:50:40,124 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:50:40,129 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:50:40,205 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:50:40,216 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:50:40,847 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:50:40,852 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:54:07,068 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:54:07,074 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:54:07,153 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:54:07,170 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:54:07,232 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:54:07,238 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:54:07,311 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:54:07,327 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 09:54:07,333 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:54:07,674 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:54:07,679 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:54:09,186 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:54:09,191 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:54:09,272 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:54:09,276 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 09:54:09,280 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:54:09,332 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:54:09,338 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:54:09,414 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:54:09,425 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:54:10,056 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:54:10,062 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:56:54,848 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:56:54,853 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:56:54,944 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:56:54,961 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:56:55,027 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:56:55,032 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:56:55,123 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:56:55,129 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 09:56:55,135 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:56:55,472 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:56:55,477 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:56:56,539 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:56:56,553 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:56:56,636 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 09:56:56,636 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:56:56,641 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:56:56,697 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:56:56,702 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:56:56,789 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:56:56,800 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:56:57,419 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:56:57,424 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:59:45,227 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 09:59:45,232 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 09:59:45,315 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 09:59:45,332 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 09:59:45,396 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:59:45,401 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 09:59:45,492 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 09:59:45,495 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 09:59:45,501 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 09:59:45,848 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 09:59:45,853 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 09:59:47,097 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 09:59:47,103 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 09:59:47,175 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 09:59:47,186 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 09:59:47,191 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 09:59:47,244 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 09:59:47,249 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 09:59:47,327 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 09:59:47,339 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 09:59:47,968 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 09:59:47,973 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 10:02:27,496 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 10:02:27,502 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 10:02:27,583 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 10:02:27,600 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 10:02:27,664 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 10:02:27,669 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 10:02:27,744 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 10:02:27,759 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 10:02:27,765 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 10:02:28,108 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 10:02:28,113 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 10:02:29,180 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 10:02:29,186 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 10:02:29,265 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 10:02:29,275 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 10:02:29,280 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 10:02:29,337 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 10:02:29,342 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 10:02:29,417 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 10:02:29,429 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 10:02:30,055 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 10:02:30,061 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 10:05:40,917 p=7 u=root |  changed: [192.168.140.82]
2016-11-27 10:05:40,922 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 10:05:41,001 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for 192.168.140.82
2016-11-27 10:05:41,018 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 10:05:41,085 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 10:05:41,091 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 10:05:41,180 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 10:05:41,189 p=7 u=root |  ok: [192.168.140.82] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 10:05:41,195 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 10:05:41,527 p=7 u=root |  changed: [192.168.140.82 -> localhost]
2016-11-27 10:05:41,532 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 10:05:42,583 p=7 u=root |  changed: [192.168.140.82] => (item=/tmp/results)
2016-11-27 10:05:42,589 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 10:05:42,664 p=7 u=root |  ok: [192.168.140.82] => (item=[u'blksize_kb', 4096])
2016-11-27 10:05:42,675 p=7 u=root |  ok: [192.168.140.82] => (item=[u'limits_pct', u'5,5,5'])
2016-11-27 10:05:42,679 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 10:05:42,729 p=7 u=root |  skipping: [192.168.140.82]
2016-11-27 10:05:42,734 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 10:05:42,812 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for 192.168.140.82
2016-11-27 10:05:42,823 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 10:05:43,444 p=7 u=root |  ok: [192.168.140.82]
2016-11-27 10:05:43,449 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:38:33,199 p=7 u=root |   [ERROR]: User interrupted execution

2016-11-27 18:48:55,211 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 18:49:20,830 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 18:50:51,947 p=8 u=root |   [ERROR]: User interrupted execution

2016-11-27 18:50:55,325 p=8 u=root |  issdm-16 | SUCCESS | rc=0 >>


2016-11-27 18:50:56,931 p=8 u=root |  PLAY [all] *********************************************************************
2016-11-27 18:50:56,988 p=8 u=root |  TASK [setup] *******************************************************************
2016-11-27 18:51:01,127 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:51:01,134 p=8 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 18:51:01,235 p=8 u=root |  ok: [issdm-16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 18:51:01,239 p=8 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 18:51:01,305 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for issdm-16
2016-11-27 18:51:01,316 p=8 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 18:51:01,365 p=8 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 18:51:01,427 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': [u'read', u'write', u'randread', u'randwrite']})
2016-11-27 18:51:01,431 p=8 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 18:51:01,472 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:51:01,476 p=8 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 18:51:01,580 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:51:01,603 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:51:01,625 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:51:01,649 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:51:01,658 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:51:01,720 p=8 u=root |  ok: [issdm-16] => (item=[u'mode', u'read'])
2016-11-27 18:51:01,723 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:51:01,817 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for issdm-16
2016-11-27 18:51:01,830 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 18:51:09,514 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:51:09,518 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 18:51:09,575 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:51:09,580 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 18:51:10,007 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.065234", "end": "2016-11-27 10:51:09.980398", "failed": true, "rc": 1, "start": "2016-11-27 10:51:09.915164", "stderr": "docker: \"stop\" requires a minimum of 1 argument.\nSee 'docker stop --help'.\n\nUsage:\tdocker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop a running container.\nSending SIGTERM and then SIGKILL after a grace period", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:51:10,007 p=8 u=root |  ...ignoring
2016-11-27 18:51:10,013 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 18:51:10,442 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.065923", "end": "2016-11-27 10:51:10.415913", "failed": true, "rc": 1, "start": "2016-11-27 10:51:10.349990", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee 'docker rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:51:10,442 p=8 u=root |  ...ignoring
2016-11-27 18:51:10,446 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 18:51:10,489 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 18:51:10,551 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 18:51:10,555 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 18:51:10,610 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:51:10,614 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 18:51:10,657 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 18:51:10,718 p=8 u=root |  ok: [issdm-16] => (item=/dev/sdb:/dev/sdb)
2016-11-27 18:51:10,722 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 18:51:10,765 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:51:10,769 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 18:51:10,812 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 18:51:10,874 p=8 u=root |  ok: [issdm-16] => (item=/tmp/results:/results)
2016-11-27 18:51:10,878 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 18:51:10,936 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:51:10,940 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 18:52:23,034 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:52:23,038 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:52:23,078 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:52:23,082 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 18:52:23,172 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 18:52:23,207 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 18:52:23,261 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:52:23,265 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 18:52:23,333 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'read'})
2016-11-27 18:52:23,339 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 18:52:23,934 p=8 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 18:52:23,945 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 18:52:25,371 p=8 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 18:52:25,376 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:52:25,437 p=8 u=root |  ok: [issdm-16] => (item=[u'mode', u'write'])
2016-11-27 18:52:25,441 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:52:25,529 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for issdm-16
2016-11-27 18:52:25,542 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 18:52:27,068 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:52:27,072 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 18:52:27,125 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:52:27,129 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 18:52:27,568 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.067232", "end": "2016-11-27 10:52:27.537848", "failed": true, "rc": 1, "start": "2016-11-27 10:52:27.470616", "stderr": "docker: \"stop\" requires a minimum of 1 argument.\nSee 'docker stop --help'.\n\nUsage:\tdocker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop a running container.\nSending SIGTERM and then SIGKILL after a grace period", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:52:27,568 p=8 u=root |  ...ignoring
2016-11-27 18:52:27,572 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 18:52:28,013 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.065748", "end": "2016-11-27 10:52:27.981305", "failed": true, "rc": 1, "start": "2016-11-27 10:52:27.915557", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee 'docker rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:52:28,014 p=8 u=root |  ...ignoring
2016-11-27 18:52:28,021 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 18:52:28,069 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 18:52:28,130 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 18:52:28,134 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 18:52:28,188 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:52:28,193 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 18:52:28,237 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 18:52:28,301 p=8 u=root |  ok: [issdm-16] => (item=/dev/sdb:/dev/sdb)
2016-11-27 18:52:28,306 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 18:52:28,349 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:52:28,353 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 18:52:28,396 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 18:52:28,457 p=8 u=root |  ok: [issdm-16] => (item=/tmp/results:/results)
2016-11-27 18:52:28,461 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 18:52:28,519 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:52:28,523 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 18:53:35,298 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:53:35,302 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:53:35,341 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:53:35,345 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 18:53:35,413 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 18:53:35,448 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 18:53:35,548 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:53:35,552 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 18:53:35,660 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'write'})
2016-11-27 18:53:35,665 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 18:53:35,997 p=8 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 18:53:36,001 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 18:53:37,101 p=8 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 18:53:37,105 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:53:37,167 p=8 u=root |  ok: [issdm-16] => (item=[u'mode', u'randread'])
2016-11-27 18:53:37,170 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:53:37,264 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for issdm-16
2016-11-27 18:53:37,277 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 18:53:38,817 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:53:38,822 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 18:53:38,878 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:53:38,883 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 18:53:39,320 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.064633", "end": "2016-11-27 10:53:39.288356", "failed": true, "rc": 1, "start": "2016-11-27 10:53:39.223723", "stderr": "docker: \"stop\" requires a minimum of 1 argument.\nSee 'docker stop --help'.\n\nUsage:\tdocker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop a running container.\nSending SIGTERM and then SIGKILL after a grace period", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:53:39,321 p=8 u=root |  ...ignoring
2016-11-27 18:53:39,325 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 18:53:39,767 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.067806", "end": "2016-11-27 10:53:39.735269", "failed": true, "rc": 1, "start": "2016-11-27 10:53:39.667463", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee 'docker rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:53:39,767 p=8 u=root |  ...ignoring
2016-11-27 18:53:39,771 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 18:53:39,815 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 18:53:39,877 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 18:53:39,882 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 18:53:39,937 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:53:39,942 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 18:53:39,985 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 18:53:40,047 p=8 u=root |  ok: [issdm-16] => (item=/dev/sdb:/dev/sdb)
2016-11-27 18:53:40,051 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 18:53:40,095 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:53:40,099 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 18:53:40,143 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 18:53:40,209 p=8 u=root |  ok: [issdm-16] => (item=/tmp/results:/results)
2016-11-27 18:53:40,213 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 18:53:40,272 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:53:40,276 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 18:54:51,767 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:54:51,772 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:54:51,813 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:54:51,817 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 18:54:51,887 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 18:54:51,922 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 18:54:51,976 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:54:51,981 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 18:54:52,046 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'randread'})
2016-11-27 18:54:52,051 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 18:54:52,347 p=8 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 18:54:52,352 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 18:54:53,444 p=8 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 18:54:53,450 p=8 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:54:53,513 p=8 u=root |  ok: [issdm-16] => (item=[u'mode', u'randwrite'])
2016-11-27 18:54:53,517 p=8 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:54:53,607 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-container.yml for issdm-16
2016-11-27 18:54:53,620 p=8 u=root |  TASK [run-bench : pull image] **************************************************
2016-11-27 18:54:55,519 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:54:55,523 p=8 u=root |  TASK [run-bench : initialize docker_flags variable] ****************************
2016-11-27 18:54:55,576 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:54:55,581 p=8 u=root |  TASK [run-bench : stop container] **********************************************
2016-11-27 18:54:56,015 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.064883", "end": "2016-11-27 10:54:55.987844", "failed": true, "rc": 1, "start": "2016-11-27 10:54:55.922961", "stderr": "docker: \"stop\" requires a minimum of 1 argument.\nSee 'docker stop --help'.\n\nUsage:\tdocker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop a running container.\nSending SIGTERM and then SIGKILL after a grace period", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:54:56,016 p=8 u=root |  ...ignoring
2016-11-27 18:54:56,020 p=8 u=root |  TASK [run-bench : remove container] ********************************************
2016-11-27 18:54:56,450 p=8 u=root |  fatal: [issdm-16]: FAILED! => {"changed": true, "cmd": "docker rm $(docker ps -aq --filter ancestor=ivotron/fio)", "delta": "0:00:00.064398", "end": "2016-11-27 10:54:56.422389", "failed": true, "rc": 1, "start": "2016-11-27 10:54:56.357991", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee 'docker rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2016-11-27 18:54:56,451 p=8 u=root |  ...ignoring
2016-11-27 18:54:56,455 p=8 u=root |  TASK [run-bench : add environment to docker_flags] *****************************
2016-11-27 18:54:56,498 p=8 u=root |  TASK [run-bench : add implicit environment from params variable] ***************
2016-11-27 18:54:56,560 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 18:54:56,564 p=8 u=root |  TASK [run-bench : check if we have host-specific environment] ******************
2016-11-27 18:54:56,620 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:54:56,624 p=8 u=root |  TASK [run-bench : add host-specific environment to docker_flags] ***************
2016-11-27 18:54:56,668 p=8 u=root |  TASK [run-bench : add devices to docker_flags] *********************************
2016-11-27 18:54:56,734 p=8 u=root |  ok: [issdm-16] => (item=/dev/sdb:/dev/sdb)
2016-11-27 18:54:56,738 p=8 u=root |  TASK [run-bench : add network mode to docker_flags] ****************************
2016-11-27 18:54:56,781 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:54:56,785 p=8 u=root |  TASK [run-bench : add ports to docker_flags] ***********************************
2016-11-27 18:54:56,829 p=8 u=root |  TASK [run-bench : add volumes to docker_flags] *********************************
2016-11-27 18:54:56,890 p=8 u=root |  ok: [issdm-16] => (item=/tmp/results:/results)
2016-11-27 18:54:56,894 p=8 u=root |  TASK [run-bench : set entrypoint to /bin/bash when 'args' is given] ************
2016-11-27 18:54:56,952 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:54:56,957 p=8 u=root |  TASK [run-bench : run container] ***********************************************
2016-11-27 18:56:03,425 p=8 u=root |  changed: [issdm-16]
2016-11-27 18:56:03,429 p=8 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:56:03,469 p=8 u=root |  skipping: [issdm-16]
2016-11-27 18:56:03,473 p=8 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 18:56:03,542 p=8 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 18:56:03,616 p=8 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 18:56:03,671 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:56:03,675 p=8 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 18:56:03,741 p=8 u=root |  ok: [issdm-16] => (item={'key': u'mode', 'value': u'randwrite'})
2016-11-27 18:56:03,746 p=8 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 18:56:04,036 p=8 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 18:56:04,041 p=8 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 18:56:05,129 p=8 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 18:56:05,134 p=8 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 18:56:07,086 p=8 u=root |  ok: [issdm-16]
2016-11-27 18:56:07,091 p=8 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 18:56:07,383 p=8 u=root |  ok: [issdm-16 -> localhost]
2016-11-27 18:56:07,405 p=8 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 18:56:08,329 p=8 u=root |  changed: [issdm-16 -> localhost] => (item=issdm-16)
2016-11-27 18:56:08,333 p=8 u=root |  PLAY RECAP *********************************************************************
2016-11-27 18:56:08,334 p=8 u=root |  issdm-16                   : ok=79   changed=17   unreachable=0    failed=0   
2016-11-27 18:56:12,968 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 18:56:13,024 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 18:56:17,209 p=7 u=root |  ok: [issdm-16]
2016-11-27 18:56:17,214 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 18:56:17,268 p=7 u=root |  ok: [issdm-16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 18:56:17,272 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 18:56:17,338 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for issdm-16
2016-11-27 18:56:17,348 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 18:56:17,391 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 18:56:17,452 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 18:56:17,466 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'20,20,20', u'30,30,30']})
2016-11-27 18:56:17,470 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 18:56:17,508 p=7 u=root |  skipping: [issdm-16]
2016-11-27 18:56:17,512 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 18:56:17,946 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:17,968 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:17,990 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,012 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,034 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,056 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,078 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,099 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,121 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,147 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,169 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,191 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,213 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,236 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,258 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,280 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,301 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,323 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,349 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,372 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,395 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,417 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,439 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,483 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,505 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,527 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,553 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,621 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,643 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,664 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,686 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,708 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,729 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,751 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,772 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,798 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,820 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,842 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,864 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,886 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,908 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,930 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,952 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:18,974 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,000 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,022 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,044 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,066 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,088 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,110 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,132 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,154 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,176 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,202 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,224 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,246 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,268 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,290 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,312 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 18:56:19,322 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:56:19,391 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 18:56:19,395 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 18:56:19,399 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:56:19,441 p=7 u=root |  skipping: [issdm-16]
2016-11-27 18:56:19,446 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:56:19,528 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 18:56:19,539 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 18:56:20,661 p=7 u=root |  changed: [issdm-16]
2016-11-27 18:56:20,666 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:58:34,641 p=7 u=root |  changed: [issdm-16]
2016-11-27 18:58:34,645 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 18:58:34,719 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 18:58:34,735 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 18:58:34,792 p=7 u=root |  ok: [issdm-16]
2016-11-27 18:58:34,797 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 18:58:34,862 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 18:58:34,876 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 18:58:34,882 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 18:58:35,473 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 18:58:35,478 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 18:58:36,874 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 18:58:36,878 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 18:58:36,945 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 18:58:36,955 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 18:58:36,959 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 18:58:37,002 p=7 u=root |  skipping: [issdm-16]
2016-11-27 18:58:37,006 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 18:58:37,073 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 18:58:37,083 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 18:58:37,789 p=7 u=root |  ok: [issdm-16]
2016-11-27 18:58:37,794 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:00:51,643 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:00:51,648 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:00:51,719 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:00:51,735 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:00:51,792 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:00:51,796 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:00:51,877 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:00:51,880 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 19:00:51,885 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:00:52,194 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:00:52,199 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:00:53,310 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:00:53,314 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:00:53,389 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 19:00:53,389 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:00:53,393 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:00:53,436 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:00:53,440 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:00:53,506 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:00:53,517 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:00:54,223 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:00:54,228 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:03:08,516 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:03:08,521 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:03:08,597 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:03:08,614 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:03:08,670 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:03:08,675 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:03:08,741 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:03:08,755 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 19:03:08,760 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:03:09,067 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:03:09,072 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:03:10,441 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:03:10,446 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:03:10,511 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:03:10,521 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 19:03:10,525 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:03:10,569 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:03:10,573 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:03:10,640 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:03:10,651 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:03:11,362 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:03:11,367 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:05:25,200 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:05:25,205 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:05:25,279 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:05:25,296 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:05:25,353 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:05:25,357 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:05:25,436 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:05:25,440 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 19:05:25,445 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:05:25,748 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:05:25,753 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:05:27,137 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:05:27,142 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:05:27,209 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:05:27,217 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 19:05:27,221 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:05:27,265 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:05:27,270 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:05:27,336 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:05:27,347 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:05:28,055 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:05:28,059 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:07:41,970 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:07:41,974 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:07:42,046 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:07:42,062 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:07:42,120 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:07:42,125 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:07:42,206 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:07:42,208 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 19:07:42,214 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:07:42,520 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:07:42,525 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:07:43,627 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:07:43,632 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:07:43,811 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:07:43,819 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 19:07:43,823 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:07:43,984 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:07:43,988 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:07:44,058 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:07:44,068 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:07:44,781 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:07:44,786 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:09:58,698 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:09:58,702 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:09:58,774 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:09:58,790 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:09:58,851 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:09:58,855 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:09:58,939 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:09:58,941 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 19:09:58,947 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:09:59,262 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:09:59,266 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:10:00,557 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:10:00,561 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:10:00,635 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:10:00,636 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 19:10:00,640 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:10:00,683 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:10:00,687 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:10:00,754 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:10:00,764 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:10:01,482 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:10:01,486 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:12:15,480 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:12:15,484 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:12:15,561 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:12:15,578 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:12:15,634 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:12:15,638 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:12:15,706 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:12:15,720 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 19:12:15,725 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:12:16,034 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:12:16,038 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:12:17,145 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:12:17,149 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:12:17,215 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:12:17,223 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 19:12:17,227 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:12:17,271 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:12:17,276 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:12:17,343 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:12:17,354 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:12:18,062 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:12:18,067 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:14:32,196 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:14:32,200 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:14:32,272 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:14:32,289 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:14:32,347 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:14:32,352 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:14:32,419 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:14:32,434 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 19:14:32,439 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:14:32,744 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:14:32,749 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:14:33,965 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:14:33,970 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:14:34,036 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:14:34,047 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 19:14:34,051 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:14:34,093 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:14:34,097 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:14:34,163 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:14:34,174 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:14:34,890 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:14:34,895 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:16:49,439 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:16:49,443 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:16:49,519 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:16:49,536 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:16:49,595 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:16:49,599 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:16:49,682 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:16:49,684 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 19:16:49,689 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:16:49,992 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:16:49,997 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:16:51,283 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:16:51,289 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:16:51,353 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:16:51,364 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 19:16:51,368 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:16:51,412 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:16:51,417 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:16:51,484 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:16:51,495 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:16:52,220 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:16:52,224 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:19:06,163 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:19:06,168 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:19:06,240 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:19:06,256 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:19:06,317 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:19:06,322 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:19:06,388 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:19:06,403 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 19:19:06,408 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:19:06,720 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:19:06,725 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:19:07,823 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:19:07,827 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:19:07,902 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 19:19:07,903 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:19:07,907 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:19:07,951 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:19:07,956 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:19:08,025 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:19:08,036 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:19:08,752 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:19:08,757 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:21:22,636 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:21:22,641 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:21:22,714 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:21:22,730 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:21:22,792 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:21:22,796 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:21:22,881 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:21:22,883 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 19:21:22,888 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:21:23,199 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:21:23,203 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:21:24,321 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:21:24,326 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:21:24,395 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:21:24,405 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 19:21:24,409 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:21:24,454 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:21:24,458 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:21:24,526 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:21:24,537 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:21:25,256 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:21:25,260 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:23:39,193 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:23:39,198 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:23:39,271 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:23:39,287 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:23:39,345 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:23:39,350 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:23:39,434 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:23:39,436 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 19:23:39,441 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:23:39,747 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:23:39,751 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:23:41,087 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:23:41,091 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:23:41,163 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:23:41,167 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 19:23:41,171 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:23:41,216 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:23:41,220 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:23:41,288 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:23:41,299 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:23:42,019 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:23:42,024 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:25:55,901 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:25:55,905 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:25:55,978 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:25:55,995 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:25:56,057 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:25:56,062 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:25:56,145 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:25:56,147 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 19:25:56,152 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:25:56,456 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:25:56,460 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:25:57,794 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:25:57,798 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:25:57,867 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:25:57,873 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 19:25:57,877 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:25:57,922 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:25:57,926 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:25:57,995 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:25:58,007 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:25:58,730 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:25:58,734 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:28:12,674 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:28:12,678 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:28:12,750 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:28:12,767 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:28:12,824 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:28:12,829 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:28:12,909 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:28:12,911 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 19:28:12,916 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:28:13,225 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:28:13,231 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:28:14,343 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:28:14,348 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:28:14,429 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 19:28:14,430 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:28:14,434 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:28:14,479 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:28:14,483 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:28:14,550 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:28:14,561 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:28:15,285 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:28:15,289 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:30:29,222 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:30:29,227 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:30:29,300 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:30:29,316 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:30:29,375 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:30:29,380 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:30:29,461 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:30:29,463 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 19:30:29,468 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:30:29,783 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:30:29,788 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:30:30,950 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:30:30,956 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:30:31,034 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:30:31,037 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 19:30:31,042 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:30:31,086 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:30:31,091 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:30:31,162 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:30:31,173 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:30:31,905 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:30:31,910 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:32:45,826 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:32:45,830 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:32:45,903 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:32:45,919 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:32:45,981 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:32:45,985 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:32:46,068 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:32:46,073 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 19:32:46,078 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:32:46,395 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:32:46,399 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:32:47,910 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:32:47,914 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:32:47,981 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:32:47,991 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 19:32:47,995 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:32:48,041 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:32:48,046 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:32:48,115 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:32:48,126 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:32:48,853 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:32:48,858 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:35:02,788 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:35:02,792 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:35:02,866 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:35:02,883 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:35:02,943 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:35:02,948 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:35:03,017 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:35:03,031 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 19:35:03,036 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:35:03,354 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:35:03,359 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:35:04,630 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:35:04,635 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:35:04,711 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 19:35:04,713 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:35:04,717 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:35:04,766 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:35:04,770 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:35:04,839 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:35:04,850 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:35:05,582 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:35:05,586 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:37:19,565 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:37:19,569 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:37:19,643 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:37:19,660 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:37:19,719 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:37:19,724 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:37:19,792 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:37:19,806 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 19:37:19,811 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:37:20,121 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:37:20,126 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:37:21,314 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:37:21,319 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:37:21,385 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:37:21,396 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 19:37:21,400 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:37:21,443 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:37:21,447 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:37:21,517 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:37:21,527 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:37:22,261 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:37:22,265 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:39:36,184 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:39:36,189 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:39:36,267 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:39:36,283 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:39:36,341 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:39:36,346 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:39:36,430 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:39:36,431 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 19:39:36,437 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:39:36,750 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:39:36,755 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:39:38,017 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:39:38,021 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:39:38,088 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 19:39:38,097 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 19:39:38,101 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:39:38,147 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:39:38,151 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:39:38,221 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:39:38,232 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:39:38,968 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:39:38,972 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:41:52,916 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:41:52,921 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:41:53,001 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:41:53,017 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:41:53,076 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:41:53,081 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:41:53,150 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 19:41:53,164 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 19:41:53,170 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:41:53,486 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:41:53,490 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:41:54,774 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:41:54,779 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:41:54,848 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:41:54,856 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 19:41:54,860 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:41:54,908 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:41:54,913 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:41:54,986 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:41:54,996 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:41:55,724 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:41:55,728 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:44:10,374 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:44:10,379 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:44:10,453 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:44:10,469 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:44:10,529 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:44:10,533 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:44:10,604 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:44:10,618 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 19:44:10,623 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:44:10,934 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:44:10,939 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:44:12,349 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:44:12,353 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:44:12,428 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:44:12,437 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 19:44:12,441 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:44:12,486 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:44:12,491 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:44:12,560 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:44:12,571 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:44:13,311 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:44:13,316 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:46:27,990 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:46:27,994 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:46:28,068 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:46:28,084 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:46:28,146 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:46:28,151 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:46:28,222 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:46:28,237 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 19:46:28,242 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:46:28,573 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:46:28,578 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:46:29,722 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:46:29,727 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:46:29,813 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:46:29,823 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 19:46:29,828 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:46:29,876 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:46:29,880 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:46:29,950 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:46:29,961 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:46:30,750 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:46:30,754 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:48:45,572 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:48:45,577 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:48:45,717 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:48:45,749 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:48:45,866 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:48:45,871 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:48:46,001 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 19:48:46,002 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:48:46,013 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:48:46,377 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:48:46,382 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:48:47,616 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:48:47,625 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:48:47,718 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:48:47,721 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 19:48:47,729 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:48:47,790 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:48:47,797 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:48:47,884 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:48:47,896 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:48:48,671 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:48:48,676 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:51:05,568 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:51:05,574 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:51:05,658 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:51:05,678 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:51:05,739 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:51:05,744 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:51:05,818 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:51:05,831 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 19:51:05,836 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:51:06,171 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:51:06,177 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:51:07,363 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:51:07,368 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:51:07,442 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:51:07,452 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 19:51:07,456 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:51:07,501 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:51:07,506 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:51:07,577 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:51:07,588 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:51:08,324 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:51:08,329 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:53:25,504 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:53:25,508 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:53:25,591 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:53:25,612 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:53:25,674 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:53:25,679 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:53:25,749 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:53:25,763 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 19:53:25,769 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:53:26,101 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:53:26,106 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:53:27,245 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:53:27,250 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:53:27,316 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:53:27,328 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 19:53:27,333 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:53:27,378 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:53:27,383 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:53:27,461 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:53:27,475 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:53:28,221 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:53:28,226 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:55:42,483 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:55:42,487 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:55:42,563 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:55:42,579 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:55:42,639 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:55:42,644 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:55:42,713 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:55:42,728 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 19:55:42,733 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:55:43,058 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:55:43,065 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:55:44,255 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:55:44,260 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:55:44,328 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:55:44,338 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 19:55:44,341 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:55:44,394 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:55:44,399 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:55:44,469 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:55:44,480 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:55:45,237 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:55:45,243 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:58:06,792 p=7 u=root |  changed: [issdm-16]
2016-11-27 19:58:06,797 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 19:58:06,871 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 19:58:06,887 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 19:58:06,946 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:58:06,951 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 19:58:07,020 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 19:58:07,035 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 19:58:07,040 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 19:58:07,361 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 19:58:07,366 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 19:58:08,557 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 19:58:08,562 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 19:58:08,628 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 19:58:08,639 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 19:58:08,644 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 19:58:08,706 p=7 u=root |  skipping: [issdm-16]
2016-11-27 19:58:08,710 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 19:58:08,779 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 19:58:08,790 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 19:58:09,552 p=7 u=root |  ok: [issdm-16]
2016-11-27 19:58:09,557 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:00:39,686 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:00:39,690 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:00:39,764 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:00:39,780 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:00:39,840 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:00:39,844 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:00:39,914 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:00:39,928 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 20:00:39,933 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:00:40,272 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:00:40,277 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:00:41,457 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:00:41,462 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:00:41,533 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:00:41,543 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 20:00:41,547 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:00:41,598 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:00:41,602 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:00:41,685 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:00:41,696 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:00:42,456 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:00:42,462 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:02:56,751 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:02:56,756 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:02:56,959 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:02:56,975 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:02:57,052 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:02:57,057 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:02:57,143 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:02:57,162 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 20:02:57,167 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:02:57,514 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:02:57,519 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:02:58,862 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:02:58,866 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:02:58,932 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:02:58,943 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 20:02:58,946 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:02:58,993 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:02:58,998 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:02:59,079 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:02:59,093 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:02:59,843 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:02:59,849 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:05:15,431 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:05:15,809 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:05:15,937 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:05:15,953 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:05:16,016 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:05:16,026 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:05:16,100 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:05:16,113 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 20:05:16,119 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:05:16,446 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:05:16,454 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:05:17,713 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:05:17,718 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:05:17,792 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:05:17,803 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 20:05:17,808 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:05:17,857 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:05:17,862 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:05:17,940 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:05:17,954 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:05:18,724 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:05:18,729 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:07:34,385 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:07:34,390 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:07:34,532 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:07:34,553 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:07:34,631 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:07:34,636 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:07:34,721 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:07:34,723 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 20:07:34,729 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:07:35,162 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:07:35,166 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:07:37,502 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:07:37,506 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:07:37,585 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:07:37,596 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 20:07:37,600 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:07:37,649 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:07:37,654 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:07:37,733 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:07:37,747 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:07:38,509 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:07:38,515 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:09:54,387 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:09:54,392 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:09:54,474 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:09:54,490 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:09:54,553 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:09:54,557 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:09:54,645 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:09:54,647 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 20:09:54,652 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:09:54,981 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:09:54,985 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:09:56,136 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:09:56,142 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:09:56,213 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:09:56,222 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 20:09:56,226 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:09:56,274 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:09:56,278 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:09:56,365 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:09:56,376 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:09:57,130 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:09:57,135 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:12:11,858 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:12:11,863 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:12:11,950 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:12:11,966 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:12:12,026 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:12:12,031 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:12:12,101 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:12:12,114 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 20:12:12,120 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:12:12,435 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:12:12,440 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:12:13,573 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:12:13,577 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:12:13,652 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:12:13,654 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 20:12:13,658 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:12:13,706 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:12:13,711 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:12:13,793 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:12:13,804 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:12:14,555 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:12:14,559 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:14:29,232 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:14:29,236 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:14:29,319 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:14:29,336 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:14:29,395 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:14:29,400 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:14:29,479 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:14:29,493 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 20:14:29,499 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:14:29,869 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:14:29,873 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:14:31,292 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:14:31,297 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:14:31,379 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:14:31,392 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 20:14:31,396 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:14:31,454 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:14:31,459 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:14:31,543 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:14:31,554 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:14:32,276 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:14:32,280 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:16:48,169 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:16:48,173 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:16:48,256 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:16:48,282 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:16:48,347 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:16:48,352 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:16:48,443 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:16:48,452 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 20:16:48,465 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:16:48,943 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:16:48,947 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:16:50,479 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:16:50,486 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:16:50,584 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 20:16:50,585 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:16:50,589 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:16:50,658 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:16:50,663 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:16:50,747 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:16:50,758 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:16:51,558 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:16:51,563 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:19:08,868 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:19:08,873 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:19:08,977 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:19:08,994 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:19:09,059 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:19:09,064 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:19:09,142 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:19:09,158 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 20:19:09,163 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:19:09,487 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:19:09,493 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:19:10,848 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:19:10,853 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:19:10,921 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:19:10,932 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 20:19:10,936 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:19:10,984 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:19:10,988 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:19:11,061 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:19:11,071 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:19:11,825 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:19:11,830 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:21:28,918 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:21:28,923 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:21:29,008 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:21:29,029 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:21:29,090 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:21:29,096 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:21:29,181 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:21:29,185 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 20:21:29,191 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:21:29,548 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:21:29,552 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:21:30,950 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:21:30,957 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:21:31,043 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 20:21:31,044 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:21:31,048 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:21:31,101 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:21:31,106 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:21:31,221 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:21:31,232 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:21:32,029 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:21:32,034 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:23:47,948 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:23:47,952 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:23:48,040 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:23:48,056 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:23:48,124 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:23:48,129 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:23:48,216 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:23:48,229 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 20:23:48,237 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:23:48,580 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:23:48,586 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:23:49,749 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:23:49,754 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:23:49,836 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:23:49,837 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 20:23:49,842 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:23:49,891 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:23:49,897 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:23:49,977 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:23:49,991 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:23:50,747 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:23:50,752 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:26:05,663 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:26:05,667 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:26:05,745 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:26:05,761 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:26:05,835 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:26:05,840 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:26:05,927 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:26:05,942 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 20:26:05,947 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:26:06,319 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:26:06,330 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:26:07,480 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:26:07,486 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:26:07,559 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 20:26:07,566 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 20:26:07,572 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:26:07,620 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:26:07,626 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:26:07,703 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:26:07,717 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:26:08,501 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:26:08,507 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:28:23,998 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:28:24,002 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:28:24,081 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:28:24,098 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:28:24,158 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:28:24,163 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:28:24,256 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 20:28:24,257 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 20:28:24,264 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:28:24,620 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:28:24,629 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:28:25,796 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:28:25,801 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:28:25,871 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:28:25,882 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 20:28:25,888 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:28:25,937 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:28:25,943 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:28:26,027 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:28:26,041 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:28:26,817 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:28:26,826 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:30:54,597 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:30:54,601 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:30:54,686 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:30:55,131 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:30:55,190 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:30:55,195 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:30:55,267 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:30:55,280 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 20:30:55,286 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:30:55,640 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:30:55,644 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:30:56,843 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:30:56,848 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:30:56,928 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 20:30:56,929 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:30:56,934 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:30:56,980 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:30:56,986 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:30:57,071 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:30:57,085 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:30:57,850 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:30:57,856 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:34:26,567 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:34:26,571 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:34:26,655 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:34:26,677 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:34:26,740 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:34:26,746 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:34:26,819 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:34:26,833 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 20:34:26,839 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:34:27,230 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:34:27,236 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:34:28,422 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:34:28,427 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:34:28,494 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:34:28,504 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 20:34:28,508 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:34:28,556 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:34:28,561 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:34:28,658 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:34:28,670 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:34:29,449 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:34:29,454 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:36:55,630 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:36:55,636 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:36:55,891 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:36:55,908 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:36:56,008 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:36:56,013 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:36:56,122 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:36:56,143 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 20:36:56,149 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:36:56,758 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:36:56,764 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:36:58,372 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:36:58,381 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:36:58,470 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:36:58,476 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 20:36:58,483 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:36:58,539 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:36:58,545 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:36:58,630 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:36:58,643 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:36:59,480 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:36:59,485 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:39:59,100 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:40:00,366 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:40:05,688 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:40:05,809 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:40:12,909 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:40:12,914 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:40:13,163 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:40:13,165 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 20:40:13,171 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:40:14,568 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:40:14,573 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:40:16,814 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:40:16,883 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:40:16,972 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:40:16,973 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 20:40:16,984 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:40:17,052 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:40:17,075 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:40:17,203 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:40:17,237 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:40:18,146 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:40:18,157 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:43:20,100 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:43:20,104 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:43:20,195 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:43:20,212 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:43:20,273 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:43:20,278 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:43:20,362 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:43:20,377 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 20:43:20,382 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:43:20,965 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:43:20,970 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:43:22,238 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:43:28,425 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:43:28,504 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 20:43:28,504 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:43:28,509 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:43:28,556 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:43:28,561 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:43:28,710 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:43:28,757 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:43:29,520 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:43:29,524 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:45:55,872 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:45:55,877 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:45:55,953 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:45:55,970 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:46:04,809 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:46:04,813 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:46:04,900 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:46:04,914 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 20:46:04,920 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:46:05,286 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:46:05,290 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:46:06,735 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:46:06,761 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:46:06,857 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 20:46:06,857 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:46:06,861 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:46:06,911 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:46:06,915 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:46:07,000 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:46:07,014 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:46:07,807 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:46:07,812 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:48:55,714 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:48:55,718 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:48:55,801 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:48:55,818 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:48:55,881 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:48:55,885 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:48:55,960 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:48:55,978 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 20:48:55,983 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:48:56,342 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:48:56,346 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:48:57,532 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:48:57,537 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:48:57,634 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 20:48:57,635 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:48:57,639 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:48:57,697 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:48:57,702 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:48:57,785 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:48:57,796 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:48:58,584 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:48:58,589 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:51:28,790 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:51:28,798 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:51:28,884 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:51:28,900 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:51:28,975 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:51:28,979 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:51:29,081 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:51:29,093 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 20:51:29,099 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:51:29,432 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:51:29,437 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:51:30,614 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:51:30,619 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:51:30,690 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:51:30,714 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 20:51:30,718 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:51:30,776 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:51:30,781 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:51:30,865 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:51:30,876 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:51:31,643 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:51:31,648 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:53:57,652 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:53:57,657 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:53:57,743 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:53:57,764 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:53:57,827 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:53:57,832 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:53:57,908 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:53:57,923 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 20:53:57,928 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:53:58,259 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:53:58,264 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:53:59,517 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:53:59,521 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:53:59,594 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:53:59,604 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 20:53:59,608 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:53:59,659 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:53:59,664 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:53:59,741 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:53:59,751 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:54:00,545 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:54:00,550 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:56:27,718 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:56:27,722 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:56:27,811 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:56:27,827 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:56:27,888 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:56:27,893 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:56:27,965 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:56:27,979 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 20:56:27,984 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:56:28,359 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:56:28,365 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:56:29,730 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:56:29,735 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:56:29,816 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:56:29,827 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 20:56:29,832 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:56:29,884 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:56:29,888 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:56:29,968 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:56:29,979 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:56:30,762 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:56:30,767 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:58:57,711 p=7 u=root |  changed: [issdm-16]
2016-11-27 20:58:57,716 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 20:58:57,802 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 20:58:58,512 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 20:58:58,585 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:58:58,590 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 20:58:58,684 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 20:58:58,698 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 20:58:58,703 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 20:58:59,084 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 20:58:59,089 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 20:59:00,562 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 20:59:00,568 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 20:59:00,637 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 20:59:00,648 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 20:59:00,653 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 20:59:00,709 p=7 u=root |  skipping: [issdm-16]
2016-11-27 20:59:00,715 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 20:59:00,814 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 20:59:00,827 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 20:59:01,612 p=7 u=root |  ok: [issdm-16]
2016-11-27 20:59:01,616 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:01:28,294 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:01:28,298 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:01:28,386 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:01:28,406 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:01:28,472 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:01:28,478 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:01:28,571 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:01:28,574 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 21:01:28,579 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:01:28,930 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:01:28,935 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:01:30,171 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:01:30,177 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:01:30,264 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:01:30,270 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 21:01:30,274 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:01:30,322 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:01:30,327 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:01:30,401 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:01:30,412 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:01:31,197 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:01:31,201 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:04:01,179 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:04:01,184 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:04:01,264 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:04:01,281 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:04:01,344 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:04:01,349 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:04:01,445 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 21:04:01,446 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:04:01,452 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:04:01,785 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:04:01,790 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:04:02,979 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:04:02,985 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:04:03,069 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:04:03,080 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 21:04:03,085 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:04:03,134 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:04:03,139 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:04:03,220 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:04:03,234 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:04:04,031 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:04:04,036 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:06:40,792 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:06:40,803 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:06:41,911 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:06:41,932 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:06:42,026 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:06:42,031 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:06:42,131 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:06:42,131 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 21:06:42,137 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:06:42,548 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:06:42,554 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:06:43,814 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:06:43,819 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:06:43,916 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:06:43,928 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 21:06:43,934 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:06:43,990 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:06:43,996 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:06:44,083 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:06:44,096 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:06:46,909 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:06:46,915 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:09:17,188 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:09:17,263 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:09:17,590 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:09:17,607 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:09:17,751 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:09:17,755 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:09:17,839 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:09:17,855 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 21:09:17,862 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:09:18,593 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:09:18,598 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:09:20,191 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:09:20,198 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:09:20,275 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:09:20,284 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 21:09:20,289 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:09:20,342 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:09:20,349 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:09:20,426 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:09:20,437 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:09:21,283 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:09:21,288 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:12:23,383 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:12:23,388 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:12:23,483 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:12:23,499 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:12:23,572 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:12:23,577 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:12:23,699 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:12:23,701 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 21:12:23,718 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:12:24,135 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:12:24,145 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:12:26,446 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:12:26,450 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:12:26,533 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:12:26,543 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 21:12:26,548 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:12:26,609 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:12:26,614 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:12:26,717 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:12:26,733 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:12:27,621 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:12:27,626 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:15:29,584 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:15:29,588 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:15:29,677 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:15:29,698 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:15:29,765 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:15:29,770 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:15:29,868 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:15:29,883 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 21:15:29,888 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:15:30,273 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:15:30,280 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:15:31,638 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:15:31,644 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:15:31,722 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:15:31,732 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 21:15:31,749 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:15:31,798 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:15:31,803 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:15:31,921 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:15:31,932 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:15:32,716 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:15:32,721 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:17:59,416 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:17:59,420 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:17:59,506 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:17:59,522 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:17:59,586 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:17:59,591 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:17:59,680 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:17:59,682 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 21:17:59,687 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:18:00,035 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:18:00,039 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:18:01,240 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:18:01,244 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:18:01,313 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:18:01,323 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 21:18:01,327 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:18:01,385 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:18:01,390 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:18:01,463 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:18:01,474 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:18:02,246 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:18:02,250 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:20:30,432 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:20:30,436 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:20:30,524 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:20:30,544 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:20:30,614 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:20:30,618 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:20:30,693 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:20:30,707 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 21:20:30,712 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:20:31,110 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:20:31,115 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:20:32,349 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:20:32,353 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:20:32,430 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 21:20:32,439 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 21:20:32,445 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:20:32,497 p=7 u=root |  skipping: [issdm-16]
2016-11-27 21:20:32,502 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:20:32,586 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:20:32,599 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:20:33,410 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:20:33,416 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:23:00,329 p=7 u=root |  changed: [issdm-16]
2016-11-27 21:23:00,334 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:23:00,418 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:23:00,435 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:23:00,496 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:23:00,502 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:23:00,577 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 21:23:00,591 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 21:23:00,598 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:23:00,973 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:23:00,978 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:23:02,282 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:23:02,313 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 21:23:04,571 p=7 u=root |  ok: [issdm-16]
2016-11-27 21:23:04,576 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 21:23:04,950 p=7 u=root |  ok: [issdm-16 -> localhost]
2016-11-27 21:23:04,979 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 21:23:05,747 p=7 u=root |  changed: [issdm-16 -> localhost] => (item=issdm-16)
2016-11-27 21:23:05,752 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-27 21:23:05,752 p=7 u=root |  issdm-16                   : ok=607  changed=182  unreachable=0    failed=0   
2016-11-27 21:23:09,508 p=9 u=root |  PLAY [all] *********************************************************************
2016-11-27 21:23:09,643 p=9 u=root |  TASK [setup] *******************************************************************
2016-11-27 21:23:14,793 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:23:14,799 p=9 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 21:23:14,855 p=9 u=root |  ok: [issdm-16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 21:23:14,860 p=9 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 21:23:14,934 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for issdm-16
2016-11-27 21:23:14,947 p=9 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 21:23:14,993 p=9 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 21:23:15,058 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 21:23:15,072 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'20,20,20', u'30,30,30']})
2016-11-27 21:23:15,076 p=9 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 21:23:15,119 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:23:15,124 p=9 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 21:23:15,603 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,630 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,657 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,684 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,712 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,739 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,781 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,803 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,825 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,847 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,869 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,891 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,913 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,935 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,957 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:15,983 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,005 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,027 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,049 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,071 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,093 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,114 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,136 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,162 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,227 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,249 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,271 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,292 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,314 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,336 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,357 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,379 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,400 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,426 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,448 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,470 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,492 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,514 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,536 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,558 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,580 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,602 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,628 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,650 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,672 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,694 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,715 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,737 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,759 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,781 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,807 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,829 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,851 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,873 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,895 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,916 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,939 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,960 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:16,982 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:17,009 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 21:23:17,019 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:23:17,082 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:23:17,093 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 21:23:17,097 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:23:17,139 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:23:17,143 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:23:17,229 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:23:17,240 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:23:18,360 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:23:18,365 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:25:32,484 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:25:32,488 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:25:32,579 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:25:32,595 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:25:32,653 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:25:32,657 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:25:32,754 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 21:25:32,754 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:25:32,763 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:25:33,165 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:25:33,171 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:25:34,951 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:25:34,955 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:25:35,026 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:25:35,039 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 21:25:35,042 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:25:35,088 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:25:35,095 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:25:35,163 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:25:35,173 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:25:35,884 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:25:35,890 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:27:50,620 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:27:50,624 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:27:50,695 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:27:50,711 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:27:50,769 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:27:50,774 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:27:50,841 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:27:50,855 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 21:27:50,859 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:27:51,176 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:27:51,180 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:27:52,407 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:27:52,411 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:27:52,476 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:27:52,486 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 21:27:52,490 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:27:52,532 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:27:52,536 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:27:52,602 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:27:52,613 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:27:53,320 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:27:53,325 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:30:07,238 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:30:07,242 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:30:07,313 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:30:07,330 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:30:07,386 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:30:07,391 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:30:07,460 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:30:07,474 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 21:30:07,480 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:30:07,846 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:30:07,851 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:30:09,289 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:30:09,293 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:30:09,358 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:30:09,368 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 21:30:09,372 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:30:09,414 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:30:09,419 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:30:09,487 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:30:09,498 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:30:10,216 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:30:10,221 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:32:24,241 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:32:24,245 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:32:24,325 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:32:24,346 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:32:24,404 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:32:24,409 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:32:24,476 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:32:24,490 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 21:32:24,496 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:32:24,912 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:32:24,917 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:32:28,007 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:32:28,013 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:32:28,075 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:32:28,086 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 21:32:28,090 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:32:28,131 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:32:28,136 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:32:28,202 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:32:28,213 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:32:28,956 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:32:28,962 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:34:43,028 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:34:43,032 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:34:43,113 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:34:43,129 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:34:43,330 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:34:43,335 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:34:43,551 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:34:43,565 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 21:34:43,569 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:34:43,897 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:34:43,902 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:34:45,442 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:34:45,447 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:34:45,517 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:34:45,531 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 21:34:45,535 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:34:45,591 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:34:45,595 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:34:45,666 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:34:45,677 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:34:46,400 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:34:46,406 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:37:00,373 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:37:00,378 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:37:00,450 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:37:00,466 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:37:00,536 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:37:00,540 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:37:00,639 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 21:37:00,639 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:37:00,644 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:37:00,970 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:37:00,974 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:37:02,297 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:37:02,302 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:37:02,372 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:37:02,383 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 21:37:02,387 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:37:02,431 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:37:02,436 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:37:02,511 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:37:02,525 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:37:03,250 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:37:03,255 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:39:17,259 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:39:17,264 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:39:17,368 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:39:17,386 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:39:17,444 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:39:17,449 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:39:17,516 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:39:17,531 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 21:39:17,536 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:39:17,868 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:39:17,873 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:39:19,283 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:39:19,287 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:39:19,367 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:39:19,377 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 21:39:19,381 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:39:19,438 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:39:19,441 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:39:19,517 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:39:19,527 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:39:20,256 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:39:20,263 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:41:40,002 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:41:40,010 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:41:40,092 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:41:40,108 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:41:40,178 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:41:40,183 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:41:40,263 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:41:40,280 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 21:41:40,285 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:41:40,606 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:41:40,611 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:41:42,002 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:41:42,013 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:41:42,079 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:41:42,090 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 21:41:42,094 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:41:42,138 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:41:42,143 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:41:42,219 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:41:42,232 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:41:42,955 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:41:42,960 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:43:56,861 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:43:56,866 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:43:56,938 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:43:56,954 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:43:57,019 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:43:57,024 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:43:57,093 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:43:57,108 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 21:43:57,114 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:43:57,442 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:43:57,450 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:44:01,805 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:44:01,819 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:44:01,891 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:44:01,901 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 21:44:01,906 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:44:01,953 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:44:01,962 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:44:02,039 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:44:02,053 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:44:02,794 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:44:02,799 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:46:16,737 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:46:16,742 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:46:16,821 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:46:16,837 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:46:16,908 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:46:16,912 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:46:17,006 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:46:17,018 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 21:46:17,023 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:46:17,338 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:46:17,343 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:46:18,850 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:46:18,854 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:46:18,923 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:46:18,943 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 21:46:18,947 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:46:19,001 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:46:19,009 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:46:19,096 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:46:19,107 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:46:19,836 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:46:19,842 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:48:34,811 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:48:34,816 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:48:34,889 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:48:34,905 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:48:34,967 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:48:34,971 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:48:35,044 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:48:35,061 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 21:48:35,067 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:48:35,412 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:48:35,417 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:48:36,759 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:48:36,764 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:48:36,844 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:48:36,859 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 21:48:36,865 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:48:36,920 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:48:36,925 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:48:37,000 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:48:37,012 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:48:37,763 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:48:37,767 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:50:51,840 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:50:51,844 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:50:51,925 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:50:51,945 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:50:52,008 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:50:52,014 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:50:52,082 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:50:52,096 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 21:50:52,103 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:50:52,785 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:50:52,790 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:50:54,504 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:50:54,510 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:50:54,576 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:50:54,586 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 21:50:54,591 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:50:54,639 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:50:54,645 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:50:54,725 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:50:54,741 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:50:55,494 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:50:55,499 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:53:09,471 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:53:09,476 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:53:11,357 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:53:11,374 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:53:12,722 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:53:12,726 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:53:12,796 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:53:12,810 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 21:53:12,815 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:53:17,322 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:53:17,326 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:53:19,170 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:53:19,174 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:53:19,283 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:53:19,287 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 21:53:19,292 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:53:19,336 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:53:19,341 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:53:19,415 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:53:19,429 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:53:20,217 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:53:20,221 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:55:34,350 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:55:34,355 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:55:34,463 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:55:34,480 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:55:34,551 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:55:34,555 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:55:34,624 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:55:34,639 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 21:55:34,644 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:55:35,538 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:55:35,542 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:55:36,817 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:55:36,822 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:55:36,887 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:55:36,897 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 21:55:36,902 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:55:36,947 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:55:36,951 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:55:37,020 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:55:37,031 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:55:37,782 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:55:37,786 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:57:51,923 p=9 u=root |  changed: [issdm-16]
2016-11-27 21:57:51,927 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 21:57:52,000 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 21:57:52,022 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 21:57:52,082 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:57:52,086 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 21:57:52,167 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 21:57:52,178 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 21:57:52,182 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 21:57:52,510 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 21:57:52,514 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 21:57:53,737 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 21:57:53,742 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 21:57:53,807 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 21:57:53,817 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 21:57:53,821 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 21:57:53,865 p=9 u=root |  skipping: [issdm-16]
2016-11-27 21:57:53,870 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 21:57:53,938 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 21:57:53,949 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 21:57:54,675 p=9 u=root |  ok: [issdm-16]
2016-11-27 21:57:54,679 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:00:08,855 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:00:08,859 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:00:08,938 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:00:08,969 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:00:09,037 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:00:09,042 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:00:09,112 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 22:00:09,128 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 22:00:09,135 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:00:09,448 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:00:09,452 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:00:10,720 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:00:10,725 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:00:10,804 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 22:00:10,805 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 22:00:10,809 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:00:10,857 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:00:10,861 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:00:10,934 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:00:10,944 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:00:11,669 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:00:11,674 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:02:25,702 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:02:25,707 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:02:25,781 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:02:25,797 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:02:25,887 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:02:25,891 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:02:25,962 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 22:02:25,976 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 22:02:25,982 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:02:26,292 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:02:26,296 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:02:27,474 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:02:27,479 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:02:27,544 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 22:02:27,554 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 22:02:27,558 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:02:27,602 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:02:27,607 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:02:27,677 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:02:27,688 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:02:28,433 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:02:28,437 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:04:42,382 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:04:42,386 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:04:42,460 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:04:42,477 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:04:42,543 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:04:42,548 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:04:42,615 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 22:04:42,634 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 22:04:42,638 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:04:42,979 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:04:42,984 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:04:44,133 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:04:44,138 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:04:44,204 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 22:04:44,214 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 22:04:44,218 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:04:44,269 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:04:44,274 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:04:44,342 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:04:44,352 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:04:45,084 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:04:45,089 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:06:59,416 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:06:59,420 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:06:59,496 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:06:59,512 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:06:59,571 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:06:59,575 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:06:59,648 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 22:06:59,665 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 22:06:59,670 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:06:59,983 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:06:59,987 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:07:01,494 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:07:01,499 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:07:01,568 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 22:07:01,577 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 22:07:01,580 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:07:01,625 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:07:01,629 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:07:01,703 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:07:01,713 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:07:02,446 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:07:02,450 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:09:16,497 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:09:16,501 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:09:16,581 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:09:16,597 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:09:16,656 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:09:16,660 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:09:16,734 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 22:09:16,751 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 22:09:16,757 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:09:17,070 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:09:17,079 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:09:18,430 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:09:18,435 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:09:18,500 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:09:18,511 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 22:09:18,515 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:09:18,561 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:09:18,565 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:09:18,634 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:09:18,644 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:09:19,396 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:09:19,401 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:11:34,188 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:11:34,193 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:11:34,268 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:11:34,284 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:11:34,342 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:11:34,346 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:11:34,433 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:11:34,437 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 22:11:34,446 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:11:34,799 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:11:34,803 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:11:36,001 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:11:36,010 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:11:36,085 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 22:11:36,086 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:11:36,090 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:11:36,135 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:11:36,139 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:11:36,226 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:11:36,240 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:11:36,947 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:11:36,951 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:13:56,572 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:13:56,576 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:13:56,656 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:13:56,799 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:13:56,863 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:13:56,867 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:13:56,938 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:13:56,954 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 22:13:56,958 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:13:57,274 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:13:57,279 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:13:58,594 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:13:58,599 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:13:58,670 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:13:58,680 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 22:13:58,684 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:13:58,738 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:13:58,742 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:13:58,814 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:13:58,825 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:13:59,560 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:13:59,564 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:16:14,417 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:16:14,421 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:16:14,496 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:16:14,512 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:16:14,575 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:16:14,580 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:16:14,655 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:16:14,669 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 22:16:14,674 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:16:14,988 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:16:14,992 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:16:16,165 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:16:16,170 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:16:16,243 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:16:16,254 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 22:16:16,258 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:16:16,303 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:16:16,308 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:16:16,377 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:16:16,388 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:16:17,127 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:16:17,132 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:18:34,007 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:18:34,011 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:18:34,085 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:18:34,102 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:18:34,165 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:18:34,169 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:18:34,254 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:18:34,258 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 22:18:34,263 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:18:34,588 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:18:34,592 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:18:36,000 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:18:36,005 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:18:36,076 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:18:36,087 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 22:18:36,091 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:18:36,136 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:18:36,140 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:18:36,215 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:18:36,225 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:18:36,981 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:18:36,986 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:20:53,910 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:20:53,914 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:20:53,992 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:20:54,009 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:20:54,068 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:20:54,073 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:20:54,144 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:20:54,162 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 22:20:54,167 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:20:54,488 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:20:54,492 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:20:55,789 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:20:55,794 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:20:55,868 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:20:55,872 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 22:20:55,876 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:20:55,923 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:20:55,928 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:20:56,001 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:20:56,012 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:20:56,749 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:20:56,754 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:23:11,189 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:23:11,193 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:23:11,268 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:23:11,284 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:23:11,346 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:23:11,350 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:23:11,421 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:23:11,436 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 22:23:11,442 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:23:11,764 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:23:11,769 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:23:13,103 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:23:13,108 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:23:13,175 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:23:13,184 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 22:23:13,188 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:23:13,235 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:23:13,240 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:23:13,310 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:23:13,321 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:23:14,064 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:23:15,542 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:25:45,653 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:25:45,658 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:25:45,733 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:25:45,749 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:25:45,809 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:25:45,813 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:25:45,894 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:25:45,900 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 22:25:45,905 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:25:46,225 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:25:46,230 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:25:47,626 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:25:47,630 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:25:47,698 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:25:47,708 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 22:25:47,713 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:25:47,760 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:25:47,765 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:25:47,841 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:25:47,852 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:25:48,606 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:25:48,610 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:28:18,796 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:28:18,800 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:28:18,876 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:28:18,893 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:28:18,954 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:28:18,959 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:28:19,050 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:28:19,058 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 22:28:19,063 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:28:19,391 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:28:19,396 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:28:20,650 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:28:20,655 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:28:20,721 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:28:20,731 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 22:28:20,735 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:28:20,781 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:28:20,786 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:28:20,857 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:28:20,868 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:28:21,602 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:28:21,609 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:30:36,025 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:30:36,029 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:30:36,105 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:30:36,121 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:30:36,180 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:30:36,185 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:30:36,270 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 22:30:36,270 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:30:36,275 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:30:36,582 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:30:36,586 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:30:37,938 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:30:37,942 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:30:38,010 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:30:38,021 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 22:30:38,025 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:30:38,076 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:30:38,080 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:30:38,155 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:30:38,166 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:30:38,902 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:30:38,907 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:32:54,501 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:32:54,505 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:32:54,587 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:32:54,603 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:32:54,681 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:32:54,685 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:32:54,759 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:32:54,773 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 22:32:54,778 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:32:55,114 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:32:55,118 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:32:56,476 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:32:56,481 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:32:56,566 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:32:56,580 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 22:32:56,584 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:32:56,641 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:32:56,646 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:32:56,725 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:32:56,735 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:32:57,493 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:32:57,499 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:35:13,007 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:35:13,011 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:35:13,094 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:35:13,110 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:35:13,172 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:35:13,176 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:35:13,266 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:35:13,267 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 22:35:13,272 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:35:13,603 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:35:13,608 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:35:15,025 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:35:15,030 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:35:15,101 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:35:15,110 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 22:35:15,114 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:35:15,162 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:35:15,167 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:35:15,239 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:35:15,249 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:35:15,994 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:35:15,998 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:37:31,987 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:37:31,992 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:37:32,077 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:37:32,093 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:37:32,154 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:37:32,159 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:37:32,247 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:37:32,249 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 22:37:32,257 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:37:32,580 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:37:32,584 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:37:33,875 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:37:33,880 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:37:33,959 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:37:34,447 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 22:37:34,450 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:37:34,495 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:37:34,499 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:37:34,573 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:37:34,583 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:37:35,792 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:37:35,797 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:39:50,576 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:39:50,581 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:39:50,656 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:39:50,672 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:39:50,733 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:39:50,737 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:39:50,808 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:39:50,822 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 22:39:50,827 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:39:51,162 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:39:51,167 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:39:52,425 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:39:52,429 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:39:54,435 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:39:55,087 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 22:39:55,091 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:39:55,142 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:39:55,147 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:39:55,239 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:39:55,250 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:39:56,029 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:39:56,033 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:42:11,064 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:42:11,069 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:42:11,150 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:42:11,171 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:42:11,244 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:42:11,248 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:42:11,331 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:42:11,348 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 22:42:11,353 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:42:11,717 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:42:11,722 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:42:12,899 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:42:12,906 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:42:12,984 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:42:12,986 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 22:42:12,991 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:42:13,045 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:42:13,050 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:42:13,127 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:42:13,141 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:42:13,896 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:42:13,902 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:44:29,787 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:44:29,792 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:44:29,881 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:44:29,897 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:44:29,966 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:44:29,971 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:44:30,056 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:44:30,071 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 22:44:30,076 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:44:30,438 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:44:30,443 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:44:31,677 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:44:31,682 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:44:31,751 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:44:31,761 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 22:44:31,765 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:44:31,815 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:44:31,819 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:44:31,891 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:44:31,902 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:44:32,665 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:44:32,671 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:46:49,697 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:46:49,702 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:46:49,784 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:46:49,801 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:46:49,862 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:46:49,866 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:46:49,938 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:46:49,952 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 22:46:49,957 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:46:50,290 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:46:50,294 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:46:51,445 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:46:51,450 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:46:51,518 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:46:51,529 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 22:46:51,533 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:46:51,582 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:46:51,586 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:46:51,661 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:46:51,672 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:46:52,409 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:46:52,414 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:49:09,333 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:49:09,338 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:49:09,418 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:49:09,435 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:49:09,701 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:49:09,706 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:49:10,076 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 22:49:10,077 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:49:10,081 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:49:10,411 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:49:10,415 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:49:11,838 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:49:11,842 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:49:11,911 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:49:11,922 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 22:49:11,926 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:49:11,985 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:49:11,990 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:49:12,064 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:49:12,074 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:49:12,838 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:49:12,842 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:51:28,662 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:51:28,666 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:51:28,743 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:51:28,760 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:51:28,822 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:51:28,827 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:51:28,899 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:51:28,913 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 22:51:28,920 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:51:29,250 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:51:29,254 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:51:30,391 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:51:30,396 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:51:30,476 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:51:30,485 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 22:51:30,490 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:51:30,561 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:51:30,566 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:51:30,638 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:51:30,649 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:51:31,416 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:51:31,424 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:53:46,295 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:53:46,300 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:53:46,380 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:53:46,396 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:53:46,460 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:53:46,464 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:53:46,541 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:53:46,556 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 22:53:46,561 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:53:46,899 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:53:46,903 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:53:48,347 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:53:48,351 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:53:48,432 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-27 22:53:48,436 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 22:53:48,440 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:53:48,488 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:53:48,493 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:53:48,565 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:53:48,576 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:53:49,345 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:53:49,349 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:56:04,797 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:56:04,801 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:56:04,893 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:56:04,910 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:56:04,972 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:56:04,977 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:56:05,051 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-27 22:56:05,065 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 22:56:05,070 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:56:05,416 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:56:05,420 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:56:06,865 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:56:06,870 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:56:06,951 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 22:56:06,952 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 22:56:06,956 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:56:07,008 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:56:07,012 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:56:07,086 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:56:07,097 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:56:07,842 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:56:07,847 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:59:01,771 p=9 u=root |  changed: [issdm-16]
2016-11-27 22:59:01,783 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 22:59:02,902 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 22:59:02,918 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 22:59:02,981 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:59:02,986 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 22:59:03,066 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 22:59:03,090 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 22:59:03,095 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 22:59:05,140 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 22:59:05,145 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 22:59:06,595 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 22:59:06,600 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 22:59:06,676 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 22:59:06,686 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 22:59:06,690 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 22:59:06,739 p=9 u=root |  skipping: [issdm-16]
2016-11-27 22:59:06,743 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 22:59:06,817 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 22:59:06,828 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 22:59:07,581 p=9 u=root |  ok: [issdm-16]
2016-11-27 22:59:07,589 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:01:35,322 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:01:35,327 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:01:35,404 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:01:35,420 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:01:35,483 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:01:35,487 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:01:35,560 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:01:35,575 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 23:01:35,580 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:01:35,899 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:01:35,903 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:01:37,152 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:01:37,157 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:01:37,236 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:01:37,245 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 23:01:37,249 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:01:37,299 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:01:37,304 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:01:37,375 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:01:37,386 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:01:38,142 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:01:38,147 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:04:05,169 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:04:05,173 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:04:08,645 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:04:08,661 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:04:08,753 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:04:08,758 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:04:08,866 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 23:04:08,866 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:04:08,871 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:04:09,526 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:04:09,531 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:04:10,827 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:04:10,831 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:04:10,905 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:04:10,913 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 23:04:10,917 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:04:10,969 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:04:10,974 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:04:11,051 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:04:11,062 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:04:11,855 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:04:11,860 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:07:13,683 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:07:13,687 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:07:13,768 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:07:13,785 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:07:13,846 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:07:13,851 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:07:13,936 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:07:13,937 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 23:07:13,941 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:07:14,269 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:07:14,273 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:07:15,649 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:07:15,654 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:07:15,725 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:07:15,734 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 23:07:15,738 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:07:15,789 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:07:15,794 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:07:15,866 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:07:15,877 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:07:16,649 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:07:16,653 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:10:11,772 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:10:11,777 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:10:11,855 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:10:11,871 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:10:11,932 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:10:11,937 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:10:12,011 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:10:12,027 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-27 23:10:12,032 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:10:12,358 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:10:12,365 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:10:13,823 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:10:13,834 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:10:13,912 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-27 23:10:13,913 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:10:13,919 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:10:13,970 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:10:13,975 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:10:14,067 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:10:14,077 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:10:14,892 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:10:14,897 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:12:41,277 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:12:41,281 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:12:41,359 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:12:41,376 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:12:41,700 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:12:41,704 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:12:41,791 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:12:41,793 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-27 23:12:41,799 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:12:42,132 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:12:42,137 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:12:43,318 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:12:43,323 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:12:43,394 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:12:43,401 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-27 23:12:43,406 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:12:43,459 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:12:43,463 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:12:43,540 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:12:43,551 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:12:44,333 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:12:44,338 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:15:14,602 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:15:14,610 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:15:14,771 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:15:14,787 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:15:14,849 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:15:14,853 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:15:14,943 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:15:14,944 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-27 23:15:14,949 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:15:15,426 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:15:15,430 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:15:16,577 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:15:16,582 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:15:16,657 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:15:16,666 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-27 23:15:16,671 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:15:16,721 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:15:16,725 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:15:16,804 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:15:16,814 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:15:21,018 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:15:21,022 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:17:51,318 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:17:51,337 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:17:51,411 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:17:51,427 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:17:51,491 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:17:51,495 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:17:51,585 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:17:51,589 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-27 23:17:51,593 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:17:53,129 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:17:53,133 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:17:54,324 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:17:54,329 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:17:54,394 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:17:54,405 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-27 23:17:54,409 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:17:54,459 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:17:54,463 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:17:54,537 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:17:54,548 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:17:55,316 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:17:55,321 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:20:23,464 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:20:23,469 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:20:23,554 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:20:23,570 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:20:23,635 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:20:23,639 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:20:23,714 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:20:23,728 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-27 23:20:23,733 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:20:24,065 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:20:24,070 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:20:25,465 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:20:25,470 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:20:25,543 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:20:26,816 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-27 23:20:26,819 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:20:26,865 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:20:26,869 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:20:26,942 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:20:26,953 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:20:27,768 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:20:27,773 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:23:00,502 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:23:00,506 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:23:00,582 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:23:00,599 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:23:00,663 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:23:00,668 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:23:00,760 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:23:00,762 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-27 23:23:00,767 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:23:01,099 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:23:01,104 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:23:02,442 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:23:02,446 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:23:02,519 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:23:02,528 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-27 23:23:02,532 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:23:02,583 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:23:02,588 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:23:02,661 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:23:02,672 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:23:03,460 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:23:03,465 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:25:30,454 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:25:30,459 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:25:30,538 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:25:30,554 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:25:30,618 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:25:30,623 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:25:30,704 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:25:30,717 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-27 23:25:30,723 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:25:31,066 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:25:31,070 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:25:32,358 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:25:32,371 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:25:32,442 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:25:32,453 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-27 23:25:32,456 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:25:32,508 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:25:32,513 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:25:32,593 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:25:32,603 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:25:33,362 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:25:33,367 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:27:59,966 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:27:59,970 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:28:00,054 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:28:00,070 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:28:00,133 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:28:00,138 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:28:00,211 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:28:00,229 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-27 23:28:00,233 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:28:00,552 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:28:00,557 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:28:01,930 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:28:01,934 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:28:02,015 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:28:02,019 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-27 23:28:02,023 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:28:02,073 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:28:02,077 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:28:02,156 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:28:02,167 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:28:02,935 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:28:02,940 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:30:48,153 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:30:48,159 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:30:48,249 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:30:48,265 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:30:48,331 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:30:48,336 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:30:48,419 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:30:48,432 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-27 23:30:48,437 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:30:48,770 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:30:48,775 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:30:50,023 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:30:50,028 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:30:50,130 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-27 23:30:50,131 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:30:50,137 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:30:50,187 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:30:50,192 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:30:50,269 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:30:50,280 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:30:51,084 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:30:51,089 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:33:20,259 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:33:20,264 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:33:20,356 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:33:20,377 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:33:20,450 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:33:20,461 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:33:20,548 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:33:20,566 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-27 23:33:20,577 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:33:21,013 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:33:21,021 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:33:22,388 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:33:22,394 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:33:22,465 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:33:22,474 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-27 23:33:22,480 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:33:22,529 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:33:22,534 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:33:22,619 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:33:22,631 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:33:23,512 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:33:23,517 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:35:50,114 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:35:50,118 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:35:50,198 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:35:50,214 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:35:50,278 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:35:50,282 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:35:50,357 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:35:50,371 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-27 23:35:50,377 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:35:50,720 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:35:50,728 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:35:52,018 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:35:52,023 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:35:52,092 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:35:52,103 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-27 23:35:52,107 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:35:52,158 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:35:52,162 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:35:52,250 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:35:52,260 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:35:53,013 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:35:53,018 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:38:54,951 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:38:54,956 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:38:55,037 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:38:55,053 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:38:55,116 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:38:55,120 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:38:55,210 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-27 23:38:55,211 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:38:55,216 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:38:55,572 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:38:55,585 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:38:56,970 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:38:56,975 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:38:57,100 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-27 23:38:57,100 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:38:57,105 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:38:57,186 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:38:57,193 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:38:57,316 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:38:57,327 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:38:58,190 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:38:58,195 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:41:53,670 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:41:53,675 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:41:53,757 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:41:53,774 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:41:53,857 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:41:53,862 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:41:53,937 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:41:53,952 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-27 23:41:53,958 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:41:54,305 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:41:54,309 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:41:55,501 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:41:55,506 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:41:55,599 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-27 23:41:55,600 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:41:55,605 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:41:55,660 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:41:55,665 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:41:55,743 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:41:55,758 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:41:56,539 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:41:56,544 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:44:23,643 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:44:23,648 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:44:23,750 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:44:23,767 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:44:23,830 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:44:23,835 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:44:23,914 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:44:23,928 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-27 23:44:23,934 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:44:24,293 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:44:24,299 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:44:25,622 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:44:25,627 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:44:25,725 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-27 23:44:25,725 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:44:25,729 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:44:25,782 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:44:25,788 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:44:25,872 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:44:25,885 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:44:26,682 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:44:26,687 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:47:03,182 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:47:03,187 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:47:03,267 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:47:03,283 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:47:03,351 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:47:03,357 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:47:03,432 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:47:03,454 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-27 23:47:03,471 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:47:03,816 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:47:03,821 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:47:05,045 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:47:05,050 p=9 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:47:05,124 p=9 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-27 23:47:05,134 p=9 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-27 23:47:05,138 p=9 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:47:05,193 p=9 u=root |  skipping: [issdm-16]
2016-11-27 23:47:05,198 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:47:05,278 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:47:05,288 p=9 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:47:06,065 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:47:06,071 p=9 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:49:33,076 p=9 u=root |  changed: [issdm-16]
2016-11-27 23:49:33,080 p=9 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:49:33,167 p=9 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:49:33,183 p=9 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:49:33,246 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:49:33,250 p=9 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:49:33,326 p=9 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-27 23:49:33,340 p=9 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-27 23:49:33,345 p=9 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:49:33,718 p=9 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:49:33,723 p=9 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:49:34,976 p=9 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:49:34,993 p=9 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-27 23:49:37,077 p=9 u=root |  ok: [issdm-16]
2016-11-27 23:49:37,083 p=9 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-27 23:49:37,423 p=9 u=root |  ok: [issdm-16 -> localhost]
2016-11-27 23:49:37,451 p=9 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-27 23:49:40,311 p=9 u=root |  changed: [issdm-16 -> localhost] => (item=issdm-16)
2016-11-27 23:49:40,315 p=9 u=root |  PLAY RECAP *********************************************************************
2016-11-27 23:49:40,315 p=9 u=root |  issdm-16                   : ok=607  changed=181  unreachable=0    failed=0   
2016-11-27 23:49:43,687 p=7 u=root |  PLAY [all] *********************************************************************
2016-11-27 23:49:43,812 p=7 u=root |  TASK [setup] *******************************************************************
2016-11-27 23:49:48,079 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:49:48,085 p=7 u=root |  TASK [run-bench : ensure benchmarks dict exists] *******************************
2016-11-27 23:49:48,144 p=7 u=root |  ok: [issdm-16] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2016-11-27 23:49:48,148 p=7 u=root |  TASK [run-bench : execute each benchmark] **************************************
2016-11-27 23:49:48,219 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench.yml for issdm-16
2016-11-27 23:49:48,229 p=7 u=root |  TASK [run-bench : upload files] ************************************************
2016-11-27 23:49:48,280 p=7 u=root |  TASK [run-bench : unnest parameters] *******************************************
2016-11-27 23:49:48,341 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': [4, 256, 4096]})
2016-11-27 23:49:48,355 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': [u'60,20,20', u'20,60,20', u'20,20,60', u'50,25,25', u'25,50,25', u'25,25,50', u'80,10,10', u'10,80,10', u'10,10,80', u'40,30,30', u'30,40,30', u'30,30,40', u'40,20,20', u'20,40,20', u'20,20,40', u'40,25,25', u'25,40,25', u'25,25,40', u'20,20,20', u'30,30,30']})
2016-11-27 23:49:48,358 p=7 u=root |  TASK [run-bench : add one item to parameters if no parameters were given] ******
2016-11-27 23:49:48,397 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:49:48,401 p=7 u=root |  TASK [run-bench : parametrized execution] **************************************
2016-11-27 23:49:49,156 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,178 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,200 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,222 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,244 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,265 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,288 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,309 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,331 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,358 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,380 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,402 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,424 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,446 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,468 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,489 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,511 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,533 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,559 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,582 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,603 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,625 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,647 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,669 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,691 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,713 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,735 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,761 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,828 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,850 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,872 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,893 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,915 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,936 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,958 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:49,979 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,006 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,028 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,050 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,072 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,094 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,116 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,137 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,159 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,181 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,207 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,229 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,251 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,273 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,295 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,317 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,338 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,360 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,382 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,409 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,431 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,453 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,475 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,497 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,519 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-bench-parametrized.yml for issdm-16
2016-11-27 23:49:50,529 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:49:50,591 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 23:49:50,601 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-27 23:49:50,607 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:49:50,657 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:49:50,662 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:49:50,751 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:49:50,762 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:49:51,854 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:49:51,859 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:52:06,150 p=7 u=root |  changed: [issdm-16]
2016-11-27 23:52:06,161 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:52:06,265 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:52:06,285 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:52:06,345 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:52:06,351 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:52:06,420 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 23:52:06,434 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-27 23:52:06,440 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:52:06,838 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:52:06,845 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:52:08,733 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:52:08,747 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:52:08,812 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 23:52:08,822 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-27 23:52:08,827 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:52:08,870 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:52:08,875 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:52:08,949 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:52:08,962 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:52:09,687 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:52:09,692 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:54:23,632 p=7 u=root |  changed: [issdm-16]
2016-11-27 23:54:23,637 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:54:23,707 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:54:23,724 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:54:23,781 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:54:23,785 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:54:23,867 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 23:54:23,871 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-27 23:54:23,882 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:54:24,225 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:54:24,230 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:54:29,696 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:54:29,703 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:54:29,778 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 23:54:29,790 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-27 23:54:29,794 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:54:29,845 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:54:29,849 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:54:29,923 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:54:29,934 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:54:30,661 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:54:30,669 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:56:44,615 p=7 u=root |  changed: [issdm-16]
2016-11-27 23:56:44,619 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:56:44,699 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:56:44,719 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:56:44,778 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:56:44,783 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:56:44,851 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 23:56:44,864 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-27 23:56:44,870 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:56:45,178 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:56:45,186 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:56:46,517 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:56:46,522 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:56:46,599 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 23:56:46,611 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-27 23:56:46,615 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:56:46,661 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:56:46,665 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:56:46,742 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:56:46,753 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:56:47,482 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:56:47,486 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:59:01,615 p=7 u=root |  changed: [issdm-16]
2016-11-27 23:59:01,620 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-27 23:59:01,705 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-27 23:59:01,721 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-27 23:59:01,794 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:59:01,798 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-27 23:59:01,872 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-27 23:59:01,886 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-27 23:59:01,892 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-27 23:59:02,204 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-27 23:59:02,209 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-27 23:59:03,344 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-27 23:59:03,349 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-27 23:59:03,419 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-27 23:59:03,429 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-27 23:59:03,433 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-27 23:59:03,476 p=7 u=root |  skipping: [issdm-16]
2016-11-27 23:59:03,480 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-27 23:59:03,547 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-27 23:59:03,558 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-27 23:59:04,284 p=7 u=root |  ok: [issdm-16]
2016-11-27 23:59:04,289 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:01:18,398 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:01:18,402 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:01:18,480 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:01:18,496 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:01:18,565 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:01:18,570 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:01:18,649 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:01:18,666 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-28 00:01:18,671 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:01:19,021 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:01:19,032 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:01:20,359 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:01:20,362 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:01:20,427 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:01:20,438 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-28 00:01:20,442 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:01:20,489 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:01:20,494 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:01:20,564 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:01:20,575 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:01:21,303 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:01:21,308 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:03:35,465 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:03:35,470 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:03:35,542 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:03:35,560 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:03:35,621 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:03:35,625 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:03:35,694 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:03:35,709 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-28 00:03:35,713 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:03:36,037 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:03:36,042 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:03:37,316 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:03:37,321 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:03:37,400 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:03:37,413 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-28 00:03:37,418 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:03:37,463 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:03:37,467 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:03:37,535 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:03:37,548 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:03:38,289 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:03:38,295 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:05:52,441 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:05:52,446 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:05:52,518 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:05:52,535 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:05:52,604 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:05:52,608 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:05:52,688 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:05:52,706 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-28 00:05:52,710 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:05:53,022 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:05:53,027 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:05:56,175 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:05:56,179 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:05:56,255 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:05:56,267 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-28 00:05:56,271 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:05:56,331 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:05:56,335 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:05:56,408 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:05:56,419 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:05:57,142 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:05:57,148 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:08:11,503 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:08:11,507 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:08:11,587 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:08:11,603 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:08:11,673 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:08:11,677 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:08:11,778 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:08:11,779 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-28 00:08:11,789 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:08:12,128 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:08:12,132 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:08:13,281 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:08:13,286 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:08:13,363 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-28 00:08:13,364 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:08:13,369 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:08:13,414 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:08:13,420 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:08:13,500 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:08:13,512 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:08:14,232 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:08:14,237 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:10:28,459 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:10:28,464 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:10:28,543 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:10:28,563 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:10:28,623 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:10:28,628 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:10:28,695 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:10:28,710 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-28 00:10:28,716 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:10:29,027 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:10:29,032 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:10:30,506 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:10:30,510 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:10:30,575 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:10:30,586 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-28 00:10:30,590 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:10:30,634 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:10:30,639 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:10:30,706 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:10:30,717 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:10:31,457 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:10:31,462 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:12:45,591 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:12:45,595 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:12:45,676 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:12:45,696 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:12:45,756 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:12:45,761 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:12:45,828 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:12:45,842 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-28 00:12:45,846 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:12:46,169 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:12:46,174 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:12:47,532 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:12:47,537 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:12:47,738 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:12:47,749 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-28 00:12:47,752 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:12:47,806 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:12:47,810 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:12:47,887 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:12:47,899 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:12:48,641 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:12:48,646 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:15:02,664 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:15:02,669 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:15:02,751 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:15:02,771 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:15:02,832 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:15:02,837 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:15:02,925 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-28 00:15:02,925 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:15:02,930 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:15:03,244 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:15:03,248 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:15:04,526 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:15:04,532 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:15:04,611 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-28 00:15:04,612 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:15:04,617 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:15:04,662 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:15:04,667 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:15:04,743 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:15:04,756 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:15:05,485 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:15:05,489 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:17:19,425 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:17:19,430 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:17:19,503 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:17:19,519 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:17:19,578 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:17:19,582 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:17:19,651 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:17:19,665 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-28 00:17:19,671 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:17:20,019 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:17:20,029 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:17:21,242 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:17:21,246 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:17:21,311 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:17:21,320 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-28 00:17:21,325 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:17:21,370 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:17:21,374 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:17:21,441 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:17:21,452 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:17:22,184 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:17:22,189 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:19:36,245 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:19:36,250 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:19:36,322 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:19:36,339 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:19:36,398 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:19:36,402 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:19:36,470 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:19:36,484 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-28 00:19:36,489 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:19:36,812 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:19:36,817 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:19:38,243 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:19:38,248 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:19:38,313 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:19:38,323 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-28 00:19:38,328 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:19:38,371 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:19:38,376 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:19:38,451 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:19:38,465 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:19:39,200 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:19:39,206 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:21:53,803 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:21:53,807 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:21:53,880 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:21:53,896 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:21:53,956 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:21:53,961 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:21:54,030 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:21:54,045 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-28 00:21:54,050 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:21:55,796 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:21:55,802 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:21:57,108 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:21:57,113 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:21:57,178 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:21:57,188 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-28 00:21:57,192 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:21:57,236 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:21:57,241 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:21:57,310 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:21:57,320 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:21:58,080 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:21:58,085 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:24:12,050 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:24:12,054 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:24:12,135 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:24:12,152 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:24:12,222 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:24:12,227 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:24:12,313 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:24:12,325 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-28 00:24:12,330 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:24:12,656 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:24:12,661 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:24:13,832 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:24:13,836 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:24:13,901 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:24:13,912 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-28 00:24:13,916 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:24:13,962 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:24:13,966 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:24:14,054 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:24:14,069 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:24:14,800 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:24:14,805 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:26:32,116 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:26:32,239 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:26:32,755 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:26:32,772 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:26:32,929 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:26:32,934 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:26:33,027 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:26:33,051 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-28 00:26:33,059 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:26:33,727 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:26:33,731 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:26:37,610 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:26:37,615 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:26:37,718 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-28 00:26:37,719 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:26:37,725 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:26:37,778 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:26:37,783 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:26:37,869 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:26:37,883 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:26:42,841 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:26:42,846 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:29:24,057 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:29:25,179 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:29:27,273 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:29:27,310 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:29:27,460 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:29:27,464 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:29:27,873 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:29:27,889 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-28 00:29:27,894 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:29:30,340 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:29:30,345 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:29:32,545 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:29:32,572 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:29:32,689 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:29:32,720 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-28 00:29:32,724 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:29:32,794 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:29:32,800 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:29:32,961 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:29:32,972 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:29:34,114 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:29:34,118 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:31:48,279 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:31:48,333 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:31:49,503 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:31:49,520 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:31:49,606 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:31:49,611 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:31:49,732 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-28 00:31:49,733 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:31:49,745 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:31:50,459 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:31:50,464 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:31:52,459 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:31:52,497 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:31:52,576 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-28 00:31:52,578 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:31:52,584 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:31:52,630 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:31:52,636 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:31:52,755 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:31:52,789 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:31:53,591 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:31:53,597 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:34:07,607 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:34:07,611 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:34:07,687 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:34:07,704 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:34:07,776 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:34:07,782 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:34:07,861 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:34:07,885 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-28 00:34:07,892 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:34:08,260 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:34:08,270 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:34:09,475 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:34:09,511 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:34:09,587 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4])
2016-11-28 00:34:09,594 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-28 00:34:09,600 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:34:09,668 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:34:09,672 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:34:09,799 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:34:09,811 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:34:10,601 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:34:10,606 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:36:24,898 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:36:24,902 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:36:25,376 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:36:25,393 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:36:25,454 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:36:25,459 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:36:25,528 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4})
2016-11-28 00:36:25,542 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-28 00:36:25,547 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:36:26,014 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:36:26,019 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:36:27,446 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:36:27,450 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:36:27,648 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:36:27,651 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-28 00:36:27,655 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:36:27,706 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:36:27,711 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:36:27,825 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:36:27,836 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:36:28,647 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:36:28,652 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:38:47,723 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:38:47,727 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:38:48,450 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:38:48,471 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:38:48,568 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:38:48,574 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:38:48,667 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:38:48,681 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-28 00:38:48,687 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:38:49,643 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:38:49,648 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:38:52,401 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:38:52,436 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:38:52,533 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:38:52,544 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-28 00:38:52,547 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:38:52,600 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:38:52,610 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:38:52,720 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:38:52,731 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:38:53,487 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:38:53,492 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:41:09,635 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:41:09,790 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:41:10,250 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:41:10,266 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:41:10,482 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:41:10,487 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:41:10,567 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:41:10,581 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-28 00:41:10,587 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:41:12,565 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:41:12,570 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:41:15,091 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:41:15,096 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:41:15,195 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-28 00:41:15,196 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:41:15,200 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:41:15,249 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:41:15,253 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:41:15,362 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:41:15,373 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:41:16,407 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:41:16,412 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:43:33,561 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:43:33,669 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:43:33,989 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:43:34,006 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:43:34,388 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:43:34,393 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:43:34,623 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:43:34,641 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-28 00:43:34,646 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:43:36,948 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:43:36,953 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:43:39,939 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:43:39,981 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:43:40,046 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:43:40,057 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-28 00:43:40,068 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:43:40,113 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:43:40,117 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:43:40,229 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:43:40,240 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:43:41,207 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:43:41,212 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:45:58,817 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:45:58,953 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:45:59,558 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:45:59,574 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:46:02,164 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:46:02,168 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:46:02,248 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:46:02,262 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-28 00:46:02,268 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:46:06,272 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:46:06,277 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:46:10,671 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:46:10,849 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:46:10,990 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:46:11,003 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-28 00:46:11,007 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:46:11,049 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:46:11,074 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:46:12,733 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:46:12,769 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:46:14,035 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:46:14,039 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:48:32,138 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:48:32,228 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:48:33,976 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:48:33,997 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:48:39,891 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:48:39,896 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:48:40,041 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:48:40,054 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-28 00:48:40,061 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:48:41,383 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:48:41,388 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:48:43,827 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:48:43,965 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:48:44,075 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:48:44,079 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-28 00:48:44,159 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:48:44,236 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:48:44,241 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:48:44,640 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:48:44,661 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:48:45,682 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:48:45,687 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:51:00,089 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:51:00,093 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:51:00,323 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:51:00,339 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:51:00,417 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:51:00,421 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:51:00,499 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:51:00,513 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-28 00:51:00,519 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:51:01,089 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:51:01,097 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:51:04,011 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:51:04,139 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:51:04,203 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:51:04,215 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-28 00:51:04,219 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:51:04,262 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:51:04,286 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:51:04,451 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:51:04,496 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:51:05,291 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:51:05,295 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:53:27,118 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:53:27,122 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:53:27,199 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:53:27,215 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:53:27,292 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:53:27,296 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:53:27,364 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:53:27,378 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-28 00:53:27,383 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:53:27,724 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:53:27,728 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:53:29,148 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:53:29,255 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:53:29,321 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:53:29,331 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-28 00:53:29,336 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:53:29,385 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:53:29,394 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:53:29,515 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:53:29,550 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:53:30,272 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:53:30,278 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:55:51,654 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:55:51,658 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:55:51,745 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:55:51,765 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:55:51,825 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:55:51,830 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:55:51,911 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:55:51,919 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-28 00:55:51,925 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:55:52,264 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:55:52,269 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:55:53,551 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:55:53,620 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:55:53,685 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:55:53,697 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-28 00:55:53,700 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:55:53,751 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:55:53,756 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:55:53,956 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:55:53,995 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:55:54,710 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:55:54,717 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:58:09,004 p=7 u=root |  changed: [issdm-16]
2016-11-28 00:58:09,008 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 00:58:09,102 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 00:58:09,118 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 00:58:09,215 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:58:09,221 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 00:58:09,293 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 00:58:09,311 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-28 00:58:09,317 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 00:58:09,637 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 00:58:09,643 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 00:58:10,901 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 00:58:10,906 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 00:58:10,975 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 00:58:10,984 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-28 00:58:10,989 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 00:58:11,049 p=7 u=root |  skipping: [issdm-16]
2016-11-28 00:58:11,054 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 00:58:11,130 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 00:58:11,140 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 00:58:11,887 p=7 u=root |  ok: [issdm-16]
2016-11-28 00:58:11,892 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:00:27,341 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:00:27,346 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:00:27,454 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:00:27,471 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:00:27,549 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:00:27,554 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:00:27,665 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:00:27,667 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-28 01:00:27,674 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:00:28,021 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:00:28,029 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:00:29,404 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:00:29,409 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:00:29,488 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:00:29,489 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-28 01:00:29,495 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:00:29,546 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:00:29,550 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:00:29,623 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:00:29,634 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:00:30,370 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:00:30,374 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:02:47,750 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:02:47,755 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:02:47,838 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:02:47,858 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:02:47,920 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:02:47,926 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:02:48,008 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:02:48,020 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-28 01:02:48,026 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:02:48,367 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:02:48,372 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:02:49,799 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:02:49,805 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:02:49,884 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-28 01:02:49,885 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:02:49,890 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:02:49,936 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:02:49,942 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:02:50,019 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:02:50,032 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:02:50,775 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:02:50,781 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:05:06,647 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:05:06,651 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:05:06,727 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:05:06,743 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:05:06,820 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:05:06,824 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:05:06,899 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:05:06,914 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-28 01:05:06,919 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:05:07,242 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:05:07,246 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:05:08,422 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:05:08,427 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:05:08,518 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-28 01:05:08,519 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:05:08,523 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:05:08,570 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:05:08,576 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:05:08,670 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:05:08,684 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:05:09,453 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:05:09,458 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:07:24,299 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:07:24,303 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:07:24,386 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:07:24,402 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:07:24,488 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:07:24,493 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:07:24,583 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-28 01:07:24,585 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:07:24,591 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:07:24,915 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:07:24,921 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:07:26,202 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:07:26,207 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:07:26,304 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:07:26,305 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-28 01:07:26,310 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:07:26,356 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:07:26,362 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:07:26,444 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:07:26,457 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:07:27,217 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:07:27,222 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:09:41,946 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:09:41,950 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:09:42,034 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:09:42,054 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:09:42,117 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:09:42,122 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:09:42,194 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:09:42,209 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-28 01:09:42,215 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:09:42,518 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:09:42,523 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:09:43,730 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:09:43,734 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:09:43,802 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:09:43,812 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-28 01:09:43,816 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:09:43,864 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:09:43,869 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:09:43,943 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:09:43,953 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:09:44,716 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:09:44,721 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:12:00,763 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:12:00,768 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:12:00,852 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:12:00,872 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:12:00,933 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:12:00,939 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:12:01,034 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-28 01:12:01,035 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:12:01,040 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:12:01,364 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:12:01,370 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:12:02,720 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:12:02,726 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:12:02,794 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:12:02,808 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-28 01:12:02,812 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:12:02,861 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:12:02,865 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:12:02,943 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:12:02,956 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:12:03,749 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:12:03,754 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:14:20,658 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:14:20,662 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:14:20,738 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:14:20,754 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:14:20,823 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:14:20,828 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:14:20,903 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:14:20,921 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-28 01:14:20,926 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:14:21,282 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:14:21,291 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:14:22,533 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:14:22,538 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:14:22,637 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-28 01:14:22,637 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:14:22,641 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:14:22,685 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:14:22,690 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:14:22,771 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:14:22,782 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:14:23,549 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:14:23,553 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:16:44,102 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:16:44,106 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:16:44,188 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:16:44,205 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:16:44,271 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:16:44,276 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:16:44,353 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:16:44,367 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-28 01:16:44,373 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:16:44,719 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:16:44,730 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:16:46,698 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:16:46,705 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:16:46,788 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:16:46,796 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-28 01:16:46,800 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:16:46,854 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:16:46,858 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:16:46,944 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:16:46,954 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:16:47,739 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:16:47,744 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:19:03,644 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:19:03,649 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:19:03,735 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:19:03,756 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:19:03,826 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:19:03,830 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:19:03,910 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:19:03,925 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-28 01:19:03,930 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:19:04,256 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:19:04,262 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:19:05,472 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:19:05,477 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:19:05,546 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:19:05,557 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-28 01:19:05,561 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:19:05,610 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:19:05,615 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:19:05,688 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:19:05,699 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:19:06,471 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:19:06,477 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:21:21,236 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:21:21,241 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:21:21,328 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:21:21,348 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:21:21,411 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:21:21,416 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:21:21,489 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:21:21,503 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-28 01:21:21,509 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:21:21,843 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:21:21,848 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:21:23,031 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:21:23,037 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:21:23,106 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 256])
2016-11-28 01:21:23,116 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-28 01:21:23,120 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:21:23,170 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:21:23,174 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:21:23,251 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:21:23,262 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:21:24,047 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:21:24,053 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:23:39,624 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:23:39,630 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:23:39,714 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:23:39,734 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:23:39,797 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:23:39,802 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:23:39,887 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 256})
2016-11-28 01:23:39,890 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-28 01:23:39,896 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:23:40,211 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:23:40,216 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:23:41,644 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:23:41,649 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:23:41,718 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:23:41,728 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'60,20,20'])
2016-11-28 01:23:41,733 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:23:41,781 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:23:41,787 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:23:41,866 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:23:41,879 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:23:42,637 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:23:42,642 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:26:10,383 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:26:10,387 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:26:10,465 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:26:10,481 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:26:10,541 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:26:10,545 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:26:10,616 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:26:10,631 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'60,20,20'})
2016-11-28 01:26:10,636 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:26:11,038 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:26:11,047 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:26:12,759 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:26:12,763 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:26:12,829 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:26:12,839 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,60,20'])
2016-11-28 01:26:12,844 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:26:12,890 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:26:12,896 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:26:12,974 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:26:12,987 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:26:13,738 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:26:13,742 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:28:41,454 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:28:41,459 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:28:41,544 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:28:41,561 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:28:41,621 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:28:41,626 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:28:41,699 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:28:41,716 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,60,20'})
2016-11-28 01:28:41,721 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:28:42,090 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:28:42,095 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:28:43,566 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:28:43,572 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:28:43,641 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:28:43,652 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,60'])
2016-11-28 01:28:43,657 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:28:43,710 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:28:43,715 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:28:43,795 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:28:43,808 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:28:44,594 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:28:44,604 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:31:10,848 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:31:10,853 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:31:10,930 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:31:10,947 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:31:11,031 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:31:11,036 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:31:11,116 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:31:11,130 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,60'})
2016-11-28 01:31:11,138 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:31:11,498 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:31:11,503 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:31:13,115 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:31:13,120 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:31:13,211 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:31:13,216 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'50,25,25'])
2016-11-28 01:31:13,220 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:31:13,270 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:31:13,275 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:31:13,358 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:31:13,372 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:31:14,151 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:31:14,157 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:34:16,083 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:34:16,088 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:34:16,167 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:34:16,183 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:34:16,246 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:34:16,250 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:34:16,328 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:34:16,342 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'50,25,25'})
2016-11-28 01:34:16,347 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:34:16,701 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:34:16,706 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:34:18,445 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:34:18,451 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:34:18,521 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:34:18,533 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,50,25'])
2016-11-28 01:34:18,537 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:34:18,587 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:34:18,596 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:34:18,674 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:34:18,688 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:34:19,448 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:34:19,454 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:37:14,422 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:37:14,426 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:37:14,503 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:37:14,520 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:37:14,582 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:37:14,586 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:37:14,665 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:37:14,677 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,50,25'})
2016-11-28 01:37:14,683 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:37:15,014 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:37:15,019 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:37:16,642 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:37:16,646 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:37:16,721 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:37:16,733 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,50'])
2016-11-28 01:37:16,737 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:37:16,787 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:37:16,792 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:37:16,870 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:37:16,881 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:37:17,646 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:37:17,651 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:39:44,121 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:39:44,125 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:39:44,206 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:39:44,222 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:39:44,284 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:39:44,289 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:39:44,372 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:39:44,387 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,50'})
2016-11-28 01:39:44,392 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:39:44,721 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:39:44,725 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:39:45,866 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:39:45,890 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:39:45,969 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:39:45,971 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'80,10,10'])
2016-11-28 01:39:45,975 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:39:46,024 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:39:46,029 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:39:46,118 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:39:46,129 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:39:46,888 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:39:46,893 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:42:17,266 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:42:17,270 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:42:17,349 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:42:17,365 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:42:17,428 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:42:17,432 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:42:17,526 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:42:17,529 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'80,10,10'})
2016-11-28 01:42:17,534 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:42:17,874 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:42:17,878 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:42:19,257 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:42:19,262 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:42:19,341 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:42:19,351 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,80,10'])
2016-11-28 01:42:19,355 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:42:19,406 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:42:19,415 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:42:19,488 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:42:19,499 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:42:20,262 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:42:20,267 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:44:50,537 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:44:50,541 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:44:50,621 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:44:50,637 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:44:50,701 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:44:50,706 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:44:50,779 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:44:50,795 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,80,10'})
2016-11-28 01:44:50,799 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:44:51,123 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:44:51,128 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:44:52,535 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:44:52,540 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:44:52,621 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'10,10,80'])
2016-11-28 01:44:52,622 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:44:52,626 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:44:52,674 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:44:52,679 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:44:52,753 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:44:52,764 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:44:53,522 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:44:53,526 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:47:19,561 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:47:19,566 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:47:19,644 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:47:19,661 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:47:19,721 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:47:19,726 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:47:19,814 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:47:19,829 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'10,10,80'})
2016-11-28 01:47:19,834 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:47:20,156 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:47:20,161 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:47:21,530 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:47:21,535 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:47:21,610 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:47:21,614 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,30,30'])
2016-11-28 01:47:21,618 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:47:21,673 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:47:21,678 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:47:21,749 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:47:21,760 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:47:22,535 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:47:22,540 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:49:49,563 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:49:49,568 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:49:49,647 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:49:49,664 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:49:49,726 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:49:49,737 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:49:49,810 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:49:49,823 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,30,30'})
2016-11-28 01:49:49,830 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:49:50,162 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:49:50,166 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:49:51,322 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:49:51,327 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:49:51,409 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,40,30'])
2016-11-28 01:49:51,410 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:49:51,414 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:49:51,463 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:49:51,468 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:49:51,542 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:49:51,552 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:49:52,304 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:49:52,309 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:52:25,130 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:52:25,135 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:52:25,215 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:52:25,231 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:52:25,292 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:52:25,297 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:52:25,373 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:52:25,387 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,40,30'})
2016-11-28 01:52:25,392 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:52:25,740 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:52:25,745 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:52:26,890 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:52:26,895 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:52:26,967 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:52:26,976 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,40'])
2016-11-28 01:52:26,979 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:52:27,031 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:52:27,036 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:52:27,132 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:52:27,143 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:52:27,915 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:52:27,920 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:54:55,006 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:54:55,011 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:54:55,087 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:54:55,103 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:54:55,165 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:54:55,170 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:54:55,245 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:54:55,258 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,40'})
2016-11-28 01:54:55,263 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:54:55,607 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:54:55,612 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:54:56,797 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:54:56,801 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:54:56,874 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:54:56,883 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,20,20'])
2016-11-28 01:54:56,891 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:54:56,940 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:54:56,944 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:54:57,025 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:54:57,036 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:54:57,805 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:54:57,810 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:57:25,524 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:57:25,528 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:57:25,605 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:57:25,626 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:57:25,688 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:57:25,692 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:57:25,768 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:57:25,782 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,20,20'})
2016-11-28 01:57:25,787 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:57:26,127 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:57:26,131 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:57:27,339 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:57:27,344 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:57:27,423 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:57:27,432 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,40,20'])
2016-11-28 01:57:27,436 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:57:27,486 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:57:27,490 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:57:27,566 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:57:27,576 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:57:28,347 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:57:28,352 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:59:56,166 p=7 u=root |  changed: [issdm-16]
2016-11-28 01:59:56,171 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 01:59:56,246 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 01:59:56,263 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 01:59:56,325 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:59:56,329 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 01:59:56,418 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 01:59:56,432 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,40,20'})
2016-11-28 01:59:56,438 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 01:59:56,781 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 01:59:56,786 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 01:59:58,196 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 01:59:58,200 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 01:59:58,273 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 01:59:58,282 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,40'])
2016-11-28 01:59:58,286 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 01:59:58,342 p=7 u=root |  skipping: [issdm-16]
2016-11-28 01:59:58,346 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 01:59:58,424 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 01:59:58,435 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 01:59:59,214 p=7 u=root |  ok: [issdm-16]
2016-11-28 01:59:59,218 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:02:25,894 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:02:25,899 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:02:25,978 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:02:25,995 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:02:26,058 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:02:26,063 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:02:26,135 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:02:26,150 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,40'})
2016-11-28 02:02:26,155 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:02:26,501 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:02:26,506 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:02:27,652 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:02:27,656 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 02:02:27,730 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 02:02:27,741 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'40,25,25'])
2016-11-28 02:02:27,745 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 02:02:27,794 p=7 u=root |  skipping: [issdm-16]
2016-11-28 02:02:27,799 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:02:27,874 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 02:02:27,885 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 02:02:28,655 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:02:28,660 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:05:37,473 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:05:37,478 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:05:37,566 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:05:37,582 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:05:37,648 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:05:37,654 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:05:37,754 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'40,25,25'})
2016-11-28 02:05:37,755 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:05:37,760 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:05:38,123 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:05:38,130 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:05:39,277 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:05:39,283 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 02:05:39,357 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 02:05:39,369 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,40,25'])
2016-11-28 02:05:39,373 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 02:05:39,426 p=7 u=root |  skipping: [issdm-16]
2016-11-28 02:05:39,431 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:05:39,508 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 02:05:39,519 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 02:05:40,329 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:05:40,333 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:08:35,327 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:08:35,331 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:08:35,416 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:08:35,433 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:08:35,496 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:08:35,500 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:08:35,590 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:08:35,594 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,40,25'})
2016-11-28 02:08:35,599 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:08:35,943 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:08:35,949 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:08:37,092 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:08:37,096 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 02:08:37,170 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 02:08:37,181 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'25,25,40'])
2016-11-28 02:08:37,185 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 02:08:37,239 p=7 u=root |  skipping: [issdm-16]
2016-11-28 02:08:37,244 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:08:37,321 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 02:08:37,332 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 02:08:38,121 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:08:38,125 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:11:04,812 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:11:04,817 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:11:04,907 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:11:04,924 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:11:04,987 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:11:04,991 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:11:05,084 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:11:05,089 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'25,25,40'})
2016-11-28 02:11:05,094 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:11:05,433 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:11:05,437 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:11:06,608 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:11:06,613 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 02:11:06,685 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 02:11:06,695 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'20,20,20'])
2016-11-28 02:11:06,699 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 02:11:06,751 p=7 u=root |  skipping: [issdm-16]
2016-11-28 02:11:06,756 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:11:06,832 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 02:11:06,843 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 02:11:07,648 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:11:07,652 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:13:35,894 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:13:35,899 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:13:35,985 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:13:36,001 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:13:36,066 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:13:36,070 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:13:36,159 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:13:36,165 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'20,20,20'})
2016-11-28 02:13:36,170 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:13:36,504 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:13:36,509 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:13:37,781 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:13:37,785 p=7 u=root |  TASK [run-bench : create parameter dictionary] *********************************
2016-11-28 02:13:37,871 p=7 u=root |  ok: [issdm-16] => (item=[u'limits_pct', u'30,30,30'])
2016-11-28 02:13:37,872 p=7 u=root |  ok: [issdm-16] => (item=[u'blksize_kb', 4096])
2016-11-28 02:13:37,876 p=7 u=root |  TASK [run-bench : run containerized benchmark] *********************************
2016-11-28 02:13:37,928 p=7 u=root |  skipping: [issdm-16]
2016-11-28 02:13:37,932 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:13:38,007 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/run-script.yml for issdm-16
2016-11-28 02:13:38,018 p=7 u=root |  TASK [run-bench : push script] *************************************************
2016-11-28 02:13:38,812 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:13:38,816 p=7 u=root |  TASK [run-bench : run script benchmark] ****************************************
2016-11-28 02:16:11,497 p=7 u=root |  changed: [issdm-16]
2016-11-28 02:16:11,502 p=7 u=root |  TASK [run-bench : download results] ********************************************
2016-11-28 02:16:11,582 p=7 u=root |  included: /experiment/vendor/baseliner/roles/run-bench/tasks/download-output.yml for issdm-16
2016-11-28 02:16:11,598 p=7 u=root |  TASK [run-bench : initialize string for path] **********************************
2016-11-28 02:16:11,664 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:16:11,669 p=7 u=root |  TASK [run-bench : add key/value pairs for each parameter (if any)] *************
2016-11-28 02:16:11,743 p=7 u=root |  ok: [issdm-16] => (item={'key': u'blksize_kb', 'value': 4096})
2016-11-28 02:16:11,757 p=7 u=root |  ok: [issdm-16] => (item={'key': u'limits_pct', 'value': u'30,30,30'})
2016-11-28 02:16:11,762 p=7 u=root |  TASK [run-bench : ensure output folder exists] *********************************
2016-11-28 02:16:12,110 p=7 u=root |  changed: [issdm-16 -> localhost]
2016-11-28 02:16:12,114 p=7 u=root |  TASK [run-bench : get any bench-specific files] ********************************
2016-11-28 02:16:13,582 p=7 u=root |  changed: [issdm-16] => (item=/tmp/results)
2016-11-28 02:16:13,629 p=7 u=root |  TASK [run-bench : install facter] **********************************************
2016-11-28 02:16:15,722 p=7 u=root |  ok: [issdm-16]
2016-11-28 02:16:15,727 p=7 u=root |  TASK [run-bench : create facts folder if it doesn't exist] *********************
2016-11-28 02:16:17,131 p=7 u=root |  ok: [issdm-16 -> localhost]
2016-11-28 02:16:17,154 p=7 u=root |  TASK [run-bench : store facts about remotes] ***********************************
2016-11-28 02:16:18,120 p=7 u=root |  changed: [issdm-16 -> localhost] => (item=issdm-16)
2016-11-28 02:16:18,125 p=7 u=root |  PLAY RECAP *********************************************************************
2016-11-28 02:16:18,126 p=7 u=root |  issdm-16                   : ok=607  changed=181  unreachable=0    failed=0   
