#!/bin/bash
#
# This wraps docker so that we can limit memory bandwidth with memguard. The 
# script takes 2 memguard-specific arguments (which control memory bandwidth 
# behavior) plus any other argument passed to `docker run`. The arguments are:
#
#   docker-run <period-us> <mbs-for-core0> <docker-run-args>
#
# For example:
#
#   docker-run 10000 400 --cpuset-cpus=0 --rm some/image --img-arguments
#
# The above instantiates a container for some/image with scheduling period of 
# 10000 microseconds and 400 MB/s of memory bandwidth for core 0.
#
# Prerequisites:
#
#  - linux-headers for `uname -r` (i.e. the version of the host kernel)
#
# WARNING: when the memguard module is loaded, the entire host observes its 
# effects. For this reason, we only modify the bandwidth for the first core of 
# the host. Thus, while the instantiated container may make use of any core, the 
# effects of throttling will only be observed for core 0.
#
# NOTE: if running this script within a container, the following must be passed 
# to 'docker run' invocation corresponding to the container that executes 
# containers (see 
# https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/):
#
#   * --privileged
#   * -v /sys/kernel/debug:/sys/kernel/debug
#   * -v /usr/src:/usr/src
#   * -v /lib/modules:/lib/modules
#   * -v `which docker`:/usr/bin/docker
#   * --net=host
#   * -e DOCKER_HOST=$DOCKER_HOST
#
# The last two might be replaced by:
#
#   * -v /var/run/docker.sock:/var/run/docker.sock
#
# if the daemon is not exposed via tcp.

# check that first two arguments are numeric
re='^[0-9]+$'
if ! [[ $1 =~ $re ]] ; then
  echo "ERROR: $1 not a number" >&2
  exit 1
fi
if ! [[ $2 =~ $re ]] ; then
  echo "ERROR: $2 not a number" >&2
  exit 1
fi

# unload memguard (if previously loaded)
rmmod memguard &> /dev/null

# build and load module
if [ -z "$MEMGUARD_PATH" ] ; then
  MEMGUARD_PATH="/memguard"
fi
cd $MEMGUARD_PATH
make &> /dev/null
if [ $? -ne 0 ] ; then
  exit 1
fi
PERIOD_US=$1 . ./functions &> /dev/null
PERIOD_US=$1 do_init_common "" "" 0 "" 0 "$2" &> /dev/null
if [ $? -ne 0 ] ; then
  echo "Error initializing memguard module"
  exit 1
fi

# execute docker
docker run "${@:3}"
if [ $? -ne 0 ] ; then
  exit 1
fi

# unload memguard
rmmod memguard &> /dev/null
